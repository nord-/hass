const e=globalThis,t=e.ShadowRoot&&(void 0===e.ShadyCSS||e.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype,a=Symbol(),i=new WeakMap;let r=class{constructor(e,t,i){if(this._$cssResult$=!0,i!==a)throw Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=e,this.t=t}get styleSheet(){let e=this.o;const a=this.t;if(t&&void 0===e){const t=void 0!==a&&1===a.length;t&&(e=i.get(a)),void 0===e&&((this.o=e=new CSSStyleSheet).replaceSync(this.cssText),t&&i.set(a,e))}return e}toString(){return this.cssText}};const o=(e,...t)=>{const i=1===e.length?e[0]:t.reduce((t,a,i)=>t+(e=>{if(!0===e._$cssResult$)return e.cssText;if("number"==typeof e)return e;throw Error("Value passed to 'css' function must be a 'css' function result: "+e+". Use 'unsafeCSS' to pass non-literal values, but take care to ensure page security.")})(a)+e[i+1],e[0]);return new r(i,e,a)},n=t?e=>e:e=>e instanceof CSSStyleSheet?(e=>{let t="";for(const a of e.cssRules)t+=a.cssText;return(e=>new r("string"==typeof e?e:e+"",void 0,a))(t)})(e):e,{is:s,defineProperty:l,getOwnPropertyDescriptor:d,getOwnPropertyNames:c,getOwnPropertySymbols:b,getPrototypeOf:u}=Object,m=globalThis,h=m.trustedTypes,p=h?h.emptyScript:"",g=m.reactiveElementPolyfillSupport,_=(e,t)=>e,f={toAttribute(e,t){switch(t){case Boolean:e=e?p:null;break;case Object:case Array:e=null==e?e:JSON.stringify(e)}return e},fromAttribute(e,t){let a=e;switch(t){case Boolean:a=null!==e;break;case Number:a=null===e?null:Number(e);break;case Object:case Array:try{a=JSON.parse(e)}catch(e){a=null}}return a}},v=(e,t)=>!s(e,t),k={attribute:!0,type:String,converter:f,reflect:!1,useDefault:!1,hasChanged:v};Symbol.metadata??=Symbol("metadata"),m.litPropertyMetadata??=new WeakMap;let y=class extends HTMLElement{static addInitializer(e){this._$Ei(),(this.l??=[]).push(e)}static get observedAttributes(){return this.finalize(),this._$Eh&&[...this._$Eh.keys()]}static createProperty(e,t=k){if(t.state&&(t.attribute=!1),this._$Ei(),this.prototype.hasOwnProperty(e)&&((t=Object.create(t)).wrapped=!0),this.elementProperties.set(e,t),!t.noAccessor){const a=Symbol(),i=this.getPropertyDescriptor(e,a,t);void 0!==i&&l(this.prototype,e,i)}}static getPropertyDescriptor(e,t,a){const{get:i,set:r}=d(this.prototype,e)??{get(){return this[t]},set(e){this[t]=e}};return{get:i,set(t){const o=i?.call(this);r?.call(this,t),this.requestUpdate(e,o,a)},configurable:!0,enumerable:!0}}static getPropertyOptions(e){return this.elementProperties.get(e)??k}static _$Ei(){if(this.hasOwnProperty(_("elementProperties")))return;const e=u(this);e.finalize(),void 0!==e.l&&(this.l=[...e.l]),this.elementProperties=new Map(e.elementProperties)}static finalize(){if(this.hasOwnProperty(_("finalized")))return;if(this.finalized=!0,this._$Ei(),this.hasOwnProperty(_("properties"))){const e=this.properties,t=[...c(e),...b(e)];for(const a of t)this.createProperty(a,e[a])}const e=this[Symbol.metadata];if(null!==e){const t=litPropertyMetadata.get(e);if(void 0!==t)for(const[e,a]of t)this.elementProperties.set(e,a)}this._$Eh=new Map;for(const[e,t]of this.elementProperties){const a=this._$Eu(e,t);void 0!==a&&this._$Eh.set(a,e)}this.elementStyles=this.finalizeStyles(this.styles)}static finalizeStyles(e){const t=[];if(Array.isArray(e)){const a=new Set(e.flat(1/0).reverse());for(const e of a)t.unshift(n(e))}else void 0!==e&&t.push(n(e));return t}static _$Eu(e,t){const a=t.attribute;return!1===a?void 0:"string"==typeof a?a:"string"==typeof e?e.toLowerCase():void 0}constructor(){super(),this._$Ep=void 0,this.isUpdatePending=!1,this.hasUpdated=!1,this._$Em=null,this._$Ev()}_$Ev(){this._$ES=new Promise(e=>this.enableUpdating=e),this._$AL=new Map,this._$E_(),this.requestUpdate(),this.constructor.l?.forEach(e=>e(this))}addController(e){(this._$EO??=new Set).add(e),void 0!==this.renderRoot&&this.isConnected&&e.hostConnected?.()}removeController(e){this._$EO?.delete(e)}_$E_(){const e=new Map,t=this.constructor.elementProperties;for(const a of t.keys())this.hasOwnProperty(a)&&(e.set(a,this[a]),delete this[a]);e.size>0&&(this._$Ep=e)}createRenderRoot(){const a=this.shadowRoot??this.attachShadow(this.constructor.shadowRootOptions);return((a,i)=>{if(t)a.adoptedStyleSheets=i.map(e=>e instanceof CSSStyleSheet?e:e.styleSheet);else for(const t of i){const i=document.createElement("style"),r=e.litNonce;void 0!==r&&i.setAttribute("nonce",r),i.textContent=t.cssText,a.appendChild(i)}})(a,this.constructor.elementStyles),a}connectedCallback(){this.renderRoot??=this.createRenderRoot(),this.enableUpdating(!0),this._$EO?.forEach(e=>e.hostConnected?.())}enableUpdating(e){}disconnectedCallback(){this._$EO?.forEach(e=>e.hostDisconnected?.())}attributeChangedCallback(e,t,a){this._$AK(e,a)}_$ET(e,t){const a=this.constructor.elementProperties.get(e),i=this.constructor._$Eu(e,a);if(void 0!==i&&!0===a.reflect){const r=(void 0!==a.converter?.toAttribute?a.converter:f).toAttribute(t,a.type);this._$Em=e,null==r?this.removeAttribute(i):this.setAttribute(i,r),this._$Em=null}}_$AK(e,t){const a=this.constructor,i=a._$Eh.get(e);if(void 0!==i&&this._$Em!==i){const e=a.getPropertyOptions(i),r="function"==typeof e.converter?{fromAttribute:e.converter}:void 0!==e.converter?.fromAttribute?e.converter:f;this._$Em=i,this[i]=r.fromAttribute(t,e.type)??this._$Ej?.get(i)??null,this._$Em=null}}requestUpdate(e,t,a){if(void 0!==e){const i=this.constructor,r=this[e];if(a??=i.getPropertyOptions(e),!((a.hasChanged??v)(r,t)||a.useDefault&&a.reflect&&r===this._$Ej?.get(e)&&!this.hasAttribute(i._$Eu(e,a))))return;this.C(e,t,a)}!1===this.isUpdatePending&&(this._$ES=this._$EP())}C(e,t,{useDefault:a,reflect:i,wrapped:r},o){a&&!(this._$Ej??=new Map).has(e)&&(this._$Ej.set(e,o??t??this[e]),!0!==r||void 0!==o)||(this._$AL.has(e)||(this.hasUpdated||a||(t=void 0),this._$AL.set(e,t)),!0===i&&this._$Em!==e&&(this._$Eq??=new Set).add(e))}async _$EP(){this.isUpdatePending=!0;try{await this._$ES}catch(e){Promise.reject(e)}const e=this.scheduleUpdate();return null!=e&&await e,!this.isUpdatePending}scheduleUpdate(){return this.performUpdate()}performUpdate(){if(!this.isUpdatePending)return;if(!this.hasUpdated){if(this.renderRoot??=this.createRenderRoot(),this._$Ep){for(const[e,t]of this._$Ep)this[e]=t;this._$Ep=void 0}const e=this.constructor.elementProperties;if(e.size>0)for(const[t,a]of e){const{wrapped:e}=a,i=this[t];!0!==e||this._$AL.has(t)||void 0===i||this.C(t,void 0,a,i)}}let e=!1;const t=this._$AL;try{e=this.shouldUpdate(t),e?(this.willUpdate(t),this._$EO?.forEach(e=>e.hostUpdate?.()),this.update(t)):this._$EM()}catch(t){throw e=!1,this._$EM(),t}e&&this._$AE(t)}willUpdate(e){}_$AE(e){this._$EO?.forEach(e=>e.hostUpdated?.()),this.hasUpdated||(this.hasUpdated=!0,this.firstUpdated(e)),this.updated(e)}_$EM(){this._$AL=new Map,this.isUpdatePending=!1}get updateComplete(){return this.getUpdateComplete()}getUpdateComplete(){return this._$ES}shouldUpdate(e){return!0}update(e){this._$Eq&&=this._$Eq.forEach(e=>this._$ET(e,this[e])),this._$EM()}updated(e){}firstUpdated(e){}};y.elementStyles=[],y.shadowRootOptions={mode:"open"},y[_("elementProperties")]=new Map,y[_("finalized")]=new Map,g?.({ReactiveElement:y}),(m.reactiveElementVersions??=[]).push("2.1.0");const z=globalThis,w=z.trustedTypes,S=w?w.createPolicy("lit-html",{createHTML:e=>e}):void 0,j="$lit$",E=`lit$${Math.random().toFixed(9).slice(2)}$`,x="?"+E,U=`<${x}>`,V=document,q=()=>V.createComment(""),O=e=>null===e||"object"!=typeof e&&"function"!=typeof e,Z=Array.isArray,M="[ \t\n\f\r]",R=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,T=/-->/g,N=/>/g,K=RegExp(`>|${M}(?:([^\\s"'>=/]+)(${M}*=${M}*(?:[^ \t\n\f\r"'\`<>=]|("|')|))|$)`,"g"),I=/'/g,C=/"/g,A=/^(?:script|style|textarea|title)$/i,W=(e=>(t,...a)=>({_$litType$:e,strings:t,values:a}))(1),J=Symbol.for("lit-noChange"),G=Symbol.for("lit-nothing"),Y=new WeakMap,B=V.createTreeWalker(V,129);function L(e,t){if(!Z(e)||!e.hasOwnProperty("raw"))throw Error("invalid template strings array");return void 0!==S?S.createHTML(t):t}const F=(e,t)=>{const a=e.length-1,i=[];let r,o=2===t?"<svg>":3===t?"<math>":"",n=R;for(let t=0;t<a;t++){const a=e[t];let s,l,d=-1,c=0;for(;c<a.length&&(n.lastIndex=c,l=n.exec(a),null!==l);)c=n.lastIndex,n===R?"!--"===l[1]?n=T:void 0!==l[1]?n=N:void 0!==l[2]?(A.test(l[2])&&(r=RegExp("</"+l[2],"g")),n=K):void 0!==l[3]&&(n=K):n===K?">"===l[0]?(n=r??R,d=-1):void 0===l[1]?d=-2:(d=n.lastIndex-l[2].length,s=l[1],n=void 0===l[3]?K:'"'===l[3]?C:I):n===C||n===I?n=K:n===T||n===N?n=R:(n=K,r=void 0);const b=n===K&&e[t+1].startsWith("/>")?" ":"";o+=n===R?a+U:d>=0?(i.push(s),a.slice(0,d)+j+a.slice(d)+E+b):a+E+(-2===d?t:b)}return[L(e,o+(e[a]||"<?>")+(2===t?"</svg>":3===t?"</math>":"")),i]};class P{constructor({strings:e,_$litType$:t},a){let i;this.parts=[];let r=0,o=0;const n=e.length-1,s=this.parts,[l,d]=F(e,t);if(this.el=P.createElement(l,a),B.currentNode=this.el.content,2===t||3===t){const e=this.el.content.firstChild;e.replaceWith(...e.childNodes)}for(;null!==(i=B.nextNode())&&s.length<n;){if(1===i.nodeType){if(i.hasAttributes())for(const e of i.getAttributeNames())if(e.endsWith(j)){const t=d[o++],a=i.getAttribute(e).split(E),n=/([.?@])?(.*)/.exec(t);s.push({type:1,index:r,name:n[2],strings:a,ctor:"."===n[1]?$:"?"===n[1]?ee:"@"===n[1]?te:Q}),i.removeAttribute(e)}else e.startsWith(E)&&(s.push({type:6,index:r}),i.removeAttribute(e));if(A.test(i.tagName)){const e=i.textContent.split(E),t=e.length-1;if(t>0){i.textContent=w?w.emptyScript:"";for(let a=0;a<t;a++)i.append(e[a],q()),B.nextNode(),s.push({type:2,index:++r});i.append(e[t],q())}}}else if(8===i.nodeType)if(i.data===x)s.push({type:2,index:r});else{let e=-1;for(;-1!==(e=i.data.indexOf(E,e+1));)s.push({type:7,index:r}),e+=E.length-1}r++}}static createElement(e,t){const a=V.createElement("template");return a.innerHTML=e,a}}function H(e,t,a=e,i){if(t===J)return t;let r=void 0!==i?a._$Co?.[i]:a._$Cl;const o=O(t)?void 0:t._$litDirective$;return r?.constructor!==o&&(r?._$AO?.(!1),void 0===o?r=void 0:(r=new o(e),r._$AT(e,a,i)),void 0!==i?(a._$Co??=[])[i]=r:a._$Cl=r),void 0!==r&&(t=H(e,r._$AS(e,t.values),r,i)),t}class D{constructor(e,t){this._$AV=[],this._$AN=void 0,this._$AD=e,this._$AM=t}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}u(e){const{el:{content:t},parts:a}=this._$AD,i=(e?.creationScope??V).importNode(t,!0);B.currentNode=i;let r=B.nextNode(),o=0,n=0,s=a[0];for(;void 0!==s;){if(o===s.index){let t;2===s.type?t=new X(r,r.nextSibling,this,e):1===s.type?t=new s.ctor(r,s.name,s.strings,this,e):6===s.type&&(t=new ae(r,this,e)),this._$AV.push(t),s=a[++n]}o!==s?.index&&(r=B.nextNode(),o++)}return B.currentNode=V,i}p(e){let t=0;for(const a of this._$AV)void 0!==a&&(void 0!==a.strings?(a._$AI(e,a,t),t+=a.strings.length-2):a._$AI(e[t])),t++}}class X{get _$AU(){return this._$AM?._$AU??this._$Cv}constructor(e,t,a,i){this.type=2,this._$AH=G,this._$AN=void 0,this._$AA=e,this._$AB=t,this._$AM=a,this.options=i,this._$Cv=i?.isConnected??!0}get parentNode(){let e=this._$AA.parentNode;const t=this._$AM;return void 0!==t&&11===e?.nodeType&&(e=t.parentNode),e}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(e,t=this){e=H(this,e,t),O(e)?e===G||null==e||""===e?(this._$AH!==G&&this._$AR(),this._$AH=G):e!==this._$AH&&e!==J&&this._(e):void 0!==e._$litType$?this.$(e):void 0!==e.nodeType?this.T(e):(e=>Z(e)||"function"==typeof e?.[Symbol.iterator])(e)?this.k(e):this._(e)}O(e){return this._$AA.parentNode.insertBefore(e,this._$AB)}T(e){this._$AH!==e&&(this._$AR(),this._$AH=this.O(e))}_(e){this._$AH!==G&&O(this._$AH)?this._$AA.nextSibling.data=e:this.T(V.createTextNode(e)),this._$AH=e}$(e){const{values:t,_$litType$:a}=e,i="number"==typeof a?this._$AC(e):(void 0===a.el&&(a.el=P.createElement(L(a.h,a.h[0]),this.options)),a);if(this._$AH?._$AD===i)this._$AH.p(t);else{const e=new D(i,this),a=e.u(this.options);e.p(t),this.T(a),this._$AH=e}}_$AC(e){let t=Y.get(e.strings);return void 0===t&&Y.set(e.strings,t=new P(e)),t}k(e){Z(this._$AH)||(this._$AH=[],this._$AR());const t=this._$AH;let a,i=0;for(const r of e)i===t.length?t.push(a=new X(this.O(q()),this.O(q()),this,this.options)):a=t[i],a._$AI(r),i++;i<t.length&&(this._$AR(a&&a._$AB.nextSibling,i),t.length=i)}_$AR(e=this._$AA.nextSibling,t){for(this._$AP?.(!1,!0,t);e&&e!==this._$AB;){const t=e.nextSibling;e.remove(),e=t}}setConnected(e){void 0===this._$AM&&(this._$Cv=e,this._$AP?.(e))}}class Q{get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}constructor(e,t,a,i,r){this.type=1,this._$AH=G,this._$AN=void 0,this.element=e,this.name=t,this._$AM=i,this.options=r,a.length>2||""!==a[0]||""!==a[1]?(this._$AH=Array(a.length-1).fill(new String),this.strings=a):this._$AH=G}_$AI(e,t=this,a,i){const r=this.strings;let o=!1;if(void 0===r)e=H(this,e,t,0),o=!O(e)||e!==this._$AH&&e!==J,o&&(this._$AH=e);else{const i=e;let n,s;for(e=r[0],n=0;n<r.length-1;n++)s=H(this,i[a+n],t,n),s===J&&(s=this._$AH[n]),o||=!O(s)||s!==this._$AH[n],s===G?e=G:e!==G&&(e+=(s??"")+r[n+1]),this._$AH[n]=s}o&&!i&&this.j(e)}j(e){e===G?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,e??"")}}class $ extends Q{constructor(){super(...arguments),this.type=3}j(e){this.element[this.name]=e===G?void 0:e}}class ee extends Q{constructor(){super(...arguments),this.type=4}j(e){this.element.toggleAttribute(this.name,!!e&&e!==G)}}class te extends Q{constructor(e,t,a,i,r){super(e,t,a,i,r),this.type=5}_$AI(e,t=this){if((e=H(this,e,t,0)??G)===J)return;const a=this._$AH,i=e===G&&a!==G||e.capture!==a.capture||e.once!==a.once||e.passive!==a.passive,r=e!==G&&(a===G||i);i&&this.element.removeEventListener(this.name,this,a),r&&this.element.addEventListener(this.name,this,e),this._$AH=e}handleEvent(e){"function"==typeof this._$AH?this._$AH.call(this.options?.host??this.element,e):this._$AH.handleEvent(e)}}class ae{constructor(e,t,a){this.element=e,this.type=6,this._$AN=void 0,this._$AM=t,this.options=a}get _$AU(){return this._$AM._$AU}_$AI(e){H(this,e)}}const ie=z.litHtmlPolyfillSupport;ie?.(P,X),(z.litHtmlVersions??=[]).push("3.3.0");const re=globalThis;let oe=class extends y{constructor(){super(...arguments),this.renderOptions={host:this},this._$Do=void 0}createRenderRoot(){const e=super.createRenderRoot();return this.renderOptions.renderBefore??=e.firstChild,e}update(e){const t=this.render();this.hasUpdated||(this.renderOptions.isConnected=this.isConnected),super.update(e),this._$Do=((e,t,a)=>{const i=a?.renderBefore??t;let r=i._$litPart$;if(void 0===r){const e=a?.renderBefore??null;i._$litPart$=r=new X(t.insertBefore(q(),e),e,void 0,a??{})}return r._$AI(e),r})(t,this.renderRoot,this.renderOptions)}connectedCallback(){super.connectedCallback(),this._$Do?.setConnected(!0)}disconnectedCallback(){super.disconnectedCallback(),this._$Do?.setConnected(!1)}render(){return J}};oe._$litElement$=!0,oe.finalized=!0,re.litElementHydrateSupport?.({LitElement:oe});const ne=re.litElementPolyfillSupport;var se,le;ne?.({LitElement:oe}),(re.litElementVersions??=[]).push("4.2.0"),function(e){e.language="language",e.system="system",e.comma_decimal="comma_decimal",e.decimal_comma="decimal_comma",e.space_comma="space_comma",e.none="none"}(se||(se={})),function(e){e.language="language",e.system="system",e.am_pm="12",e.twenty_four="24"}(le||(le={}));var de=function(e,t,a,i){i=i||{},a=null==a?{}:a;var r=new Event(t,{bubbles:void 0===i.bubbles||i.bubbles,cancelable:Boolean(i.cancelable),composed:void 0===i.composed||i.composed});return r.detail=a,e.dispatchEvent(r),r},ce={alert:"mdi:alert",automation:"mdi:playlist-play",calendar:"mdi:calendar",camera:"mdi:video",climate:"mdi:thermostat",configurator:"mdi:settings",conversation:"mdi:text-to-speech",device_tracker:"mdi:account",fan:"mdi:fan",group:"mdi:google-circles-communities",history_graph:"mdi:chart-line",homeassistant:"mdi:home-assistant",homekit:"mdi:home-automation",image_processing:"mdi:image-filter-frames",input_boolean:"mdi:drawing",input_datetime:"mdi:calendar-clock",input_number:"mdi:ray-vertex",input_select:"mdi:format-list-bulleted",input_text:"mdi:textbox",light:"mdi:lightbulb",mailbox:"mdi:mailbox",notify:"mdi:comment-alert",person:"mdi:account",plant:"mdi:flower",proximity:"mdi:apple-safari",remote:"mdi:remote",scene:"mdi:google-pages",script:"mdi:file-document",sensor:"mdi:eye",simple_alarm:"mdi:bell",sun:"mdi:white-balance-sunny",switch:"mdi:flash",timer:"mdi:timer",updater:"mdi:cloud-upload",vacuum:"mdi:robot-vacuum",water_heater:"mdi:thermometer",weblink:"mdi:open-in-new"};function be(e,t){if(e in ce)return ce[e];switch(e){case"alarm_control_panel":switch(t){case"armed_home":return"mdi:bell-plus";case"armed_night":return"mdi:bell-sleep";case"disarmed":return"mdi:bell-outline";case"triggered":return"mdi:bell-ring";default:return"mdi:bell"}case"binary_sensor":return t&&"off"===t?"mdi:radiobox-blank":"mdi:checkbox-marked-circle";case"cover":return"closed"===t?"mdi:window-closed":"mdi:window-open";case"lock":return t&&"unlocked"===t?"mdi:lock-open":"mdi:lock";case"media_player":return t&&"off"!==t&&"idle"!==t?"mdi:cast-connected":"mdi:cast";case"zwave":switch(t){case"dead":return"mdi:emoticon-dead";case"sleeping":return"mdi:sleep";case"initializing":return"mdi:timer-sand";default:return"mdi:z-wave"}default:return console.warn("Unable to find icon for domain "+e+" ("+t+")"),"mdi:bookmark"}}var ue={humidity:"mdi:water-percent",illuminance:"mdi:brightness-5",temperature:"mdi:thermometer",pressure:"mdi:gauge",power:"mdi:flash",signal_strength:"mdi:wifi"},me={binary_sensor:function(e,t){var a="off"===e;switch(null==t?void 0:t.attributes.device_class){case"battery":return a?"mdi:battery":"mdi:battery-outline";case"battery_charging":return a?"mdi:battery":"mdi:battery-charging";case"cold":return a?"mdi:thermometer":"mdi:snowflake";case"connectivity":return a?"mdi:server-network-off":"mdi:server-network";case"door":return a?"mdi:door-closed":"mdi:door-open";case"garage_door":return a?"mdi:garage":"mdi:garage-open";case"power":case"plug":return a?"mdi:power-plug-off":"mdi:power-plug";case"gas":case"problem":case"safety":case"tamper":return a?"mdi:check-circle":"mdi:alert-circle";case"smoke":return a?"mdi:check-circle":"mdi:smoke";case"heat":return a?"mdi:thermometer":"mdi:fire";case"light":return a?"mdi:brightness-5":"mdi:brightness-7";case"lock":return a?"mdi:lock":"mdi:lock-open";case"moisture":return a?"mdi:water-off":"mdi:water";case"motion":return a?"mdi:walk":"mdi:run";case"occupancy":case"presence":return a?"mdi:home-outline":"mdi:home";case"opening":return a?"mdi:square":"mdi:square-outline";case"running":return a?"mdi:stop":"mdi:play";case"sound":return a?"mdi:music-note-off":"mdi:music-note";case"update":return a?"mdi:package":"mdi:package-up";case"vibration":return a?"mdi:crop-portrait":"mdi:vibrate";case"window":return a?"mdi:window-closed":"mdi:window-open";default:return a?"mdi:radiobox-blank":"mdi:checkbox-marked-circle"}},cover:function(e){var t="closed"!==e.state;switch(e.attributes.device_class){case"garage":return t?"mdi:garage-open":"mdi:garage";case"door":return t?"mdi:door-open":"mdi:door-closed";case"shutter":return t?"mdi:window-shutter-open":"mdi:window-shutter";case"blind":return t?"mdi:blinds-open":"mdi:blinds";case"window":return t?"mdi:window-open":"mdi:window-closed";default:return be("cover",e.state)}},sensor:function(e){var t=e.attributes.device_class;if(t&&t in ue)return ue[t];if("battery"===t){var a=Number(e.state);if(isNaN(a))return"mdi:battery-unknown";var i=10*Math.round(a/10);return i>=100?"mdi:battery":i<=0?"mdi:battery-alert":"hass:battery-"+i}var r=e.attributes.unit_of_measurement;return"°C"===r||"°F"===r?"mdi:thermometer":be("sensor")},input_datetime:function(e){return e.attributes.has_date?e.attributes.has_time?be("input_datetime"):"mdi:calendar":"mdi:clock"}};const he={attribute:!0,type:String,converter:f,reflect:!1,hasChanged:v},pe=(e=he,t,a)=>{const{kind:i,metadata:r}=a;let o=globalThis.litPropertyMetadata.get(r);if(void 0===o&&globalThis.litPropertyMetadata.set(r,o=new Map),"setter"===i&&((e=Object.create(e)).wrapped=!0),o.set(a.name,e),"accessor"===i){const{name:i}=a;return{set(a){const r=t.get.call(this);t.set.call(this,a),this.requestUpdate(i,r,e)},init(t){return void 0!==t&&this.C(i,void 0,e,t),t}}}if("setter"===i){const{name:i}=a;return function(a){const r=this[i];t.call(this,a),this.requestUpdate(i,r,e)}}throw Error("Unsupported decorator location: "+i)};function ge(e){return(t,a)=>"object"==typeof a?pe(e,t,a):((e,t,a)=>{const i=t.hasOwnProperty(a);return t.constructor.createProperty(a,e),i?Object.getOwnPropertyDescriptor(t,a):void 0})(e,t,a)}function _e(e,t,a,i){var r,o=arguments.length,n=o<3?t:i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)n=Reflect.decorate(e,t,a,i);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(n=(o<3?r(n):o>3?r(t,a,n):r(t,a))||n);return o>3&&n&&Object.defineProperty(t,a,n),n}"function"==typeof SuppressedError&&SuppressedError;class fe extends oe{constructor(){super(...arguments),this.template="",this.variables={},this.value=null,this.unsubscribePromise=null}connectedCallback(){super.connectedCallback(),this.hass?this.unsubscribePromise||this.template&&(this.unsubscribePromise=this.hass.connection.subscribeMessage(e=>{this.value=e.result},{type:"render_template",template:this.template,variables:this.variables})):console.warn("hass object is not provided")}async disconnectedCallback(){if(super.disconnectedCallback(),this.unsubscribePromise)try{const e=await this.unsubscribePromise;return this.unsubscribePromise=null,e()}catch(e){if("not_found"!==e.code)throw e}}render(){var e;return null!==(e=this.value)&&void 0!==e?e:G}}_e([ge()],fe.prototype,"hass",void 0),_e([ge()],fe.prototype,"template",void 0),_e([ge()],fe.prototype,"variables",void 0),_e([ge()],fe.prototype,"value",void 0),_e([function(e){return ge({...e,state:!0,attribute:!1})}()],fe.prototype,"unsubscribePromise",void 0);var ve,ke,ye="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function ze(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var we=function(){if(ke)return ve;ke=1;var e,t="__lodash_hash_undefined__",a="[object Function]",i="[object GeneratorFunction]",r=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,o=/^\w*$/,n=/^\./,s=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,l=/\\(\\)?/g,d=/^\[object .+?Constructor\]$/,c="object"==typeof ye&&ye&&ye.Object===Object&&ye,b="object"==typeof self&&self&&self.Object===Object&&self,u=c||b||Function("return this")(),m=Array.prototype,h=Function.prototype,p=Object.prototype,g=u["__core-js_shared__"],_=(e=/[^.]+$/.exec(g&&g.keys&&g.keys.IE_PROTO||""))?"Symbol(src)_1."+e:"",f=h.toString,v=p.hasOwnProperty,k=p.toString,y=RegExp("^"+f.call(v).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),z=u.Symbol,w=m.splice,S=T(u,"Map"),j=T(Object,"create"),E=z?z.prototype:void 0,x=E?E.toString:void 0;function U(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var i=e[t];this.set(i[0],i[1])}}function V(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var i=e[t];this.set(i[0],i[1])}}function q(e){var t=-1,a=e?e.length:0;for(this.clear();++t<a;){var i=e[t];this.set(i[0],i[1])}}function O(e,t){for(var a=e.length;a--;)if(C(e[a][0],t))return a;return-1}function Z(e,t){var a;t=function(e,t){if(A(e))return!1;var a=typeof e;if("number"==a||"symbol"==a||"boolean"==a||null==e||J(e))return!0;return o.test(e)||!r.test(e)||null!=t&&e in Object(t)}(t,e)?[t]:A(a=t)?a:N(a);for(var i=0,n=t.length;null!=e&&i<n;)e=e[K(t[i++])];return i&&i==n?e:void 0}function M(e){if(!W(e)||(t=e,_&&_ in t))return!1;var t,r=function(e){var t=W(e)?k.call(e):"";return t==a||t==i}(e)||function(e){var t=!1;if(null!=e&&"function"!=typeof e.toString)try{t=!!(e+"")}catch(e){}return t}(e)?y:d;return r.test(function(e){if(null!=e){try{return f.call(e)}catch(e){}try{return e+""}catch(e){}}return""}(e))}function R(e,t){var a,i,r=e.__data__;return("string"==(i=typeof(a=t))||"number"==i||"symbol"==i||"boolean"==i?"__proto__"!==a:null===a)?r["string"==typeof t?"string":"hash"]:r.map}function T(e,t){var a=function(e,t){return null==e?void 0:e[t]}(e,t);return M(a)?a:void 0}U.prototype.clear=function(){this.__data__=j?j(null):{}},U.prototype.delete=function(e){return this.has(e)&&delete this.__data__[e]},U.prototype.get=function(e){var a=this.__data__;if(j){var i=a[e];return i===t?void 0:i}return v.call(a,e)?a[e]:void 0},U.prototype.has=function(e){var t=this.__data__;return j?void 0!==t[e]:v.call(t,e)},U.prototype.set=function(e,a){return this.__data__[e]=j&&void 0===a?t:a,this},V.prototype.clear=function(){this.__data__=[]},V.prototype.delete=function(e){var t=this.__data__,a=O(t,e);return!(a<0)&&(a==t.length-1?t.pop():w.call(t,a,1),!0)},V.prototype.get=function(e){var t=this.__data__,a=O(t,e);return a<0?void 0:t[a][1]},V.prototype.has=function(e){return O(this.__data__,e)>-1},V.prototype.set=function(e,t){var a=this.__data__,i=O(a,e);return i<0?a.push([e,t]):a[i][1]=t,this},q.prototype.clear=function(){this.__data__={hash:new U,map:new(S||V),string:new U}},q.prototype.delete=function(e){return R(this,e).delete(e)},q.prototype.get=function(e){return R(this,e).get(e)},q.prototype.has=function(e){return R(this,e).has(e)},q.prototype.set=function(e,t){return R(this,e).set(e,t),this};var N=I(function(e){var t;e=null==(t=e)?"":function(e){if("string"==typeof e)return e;if(J(e))return x?x.call(e):"";var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}(t);var a=[];return n.test(e)&&a.push(""),e.replace(s,function(e,t,i,r){a.push(i?r.replace(l,"$1"):t||e)}),a});function K(e){if("string"==typeof e||J(e))return e;var t=e+"";return"0"==t&&1/e==-1/0?"-0":t}function I(e,t){if("function"!=typeof e||t&&"function"!=typeof t)throw new TypeError("Expected a function");var a=function(){var i=arguments,r=t?t.apply(this,i):i[0],o=a.cache;if(o.has(r))return o.get(r);var n=e.apply(this,i);return a.cache=o.set(r,n),n};return a.cache=new(I.Cache||q),a}function C(e,t){return e===t||e!=e&&t!=t}I.Cache=q;var A=Array.isArray;function W(e){var t=typeof e;return!!e&&("object"==t||"function"==t)}function J(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==k.call(e)}return ve=function(e,t,a){var i=null==e?void 0:Z(e,t);return void 0===i?a:i}}(),Se=ze(we),je={docked:"Ve stanici",edgecut:"Sekání okraje",error:"Chyba",escaped_digital_fence:"Sekačka překročila virtuální plot",idle:"Nečinnost",initializing:"Inicializace",locked:"Uzamčena",mowing:"Sekání",offline:"Offline",paused:"Pauza",rain_delay:"Odklad kvůli dešti",returning:"Návrat do stanice",searching_zone:"Vyhledávání zóny",starting:"Začínání",unavailable:"Nedostupné",unknown:"Neznámý",zoning:"Učení zóny"},Ee={next_scheduled_start:"Další naplánovaný start",party_mode:"Párty režim",zone:"pásmo"},xe={name:"Landroid karta",description:"Landroid karta umožňuje ovládání vaší robotické sekačky.",not_available:"Sekačka není dostupná"},Ue={config:"Konfigurace",edgecut:"Sekání okraje",locate:"Najít sekačku",lock:"Uzamknout sekačku",multizone_distances:"Nastavit vzdálenost oblastí",multizone_probabilities:"Nastavit pravděpodobnost oblastí",ots:"Start jednorázového plánu",pause:"Pauza",partymode:"Zapnout párty režim",raindelay:"Nastavit odklad kvůli dešti",dock:"Návrat do stanice",restart:"Restart",resume:"Pokračovat",schedule:"Nastavit nebo změnit plán sekání",setzone:"Nastavit oblast",start_mowing:"Start",stop:"Stop",timeextension:"Nastavit přidání času",torque:"Nastavit kroutící moment kol"},Ve={battery_low:"Vybitá baterie",battery_temperature_error:"Chyba teploty baterie",battery_trunk_open_timeout:"Časový limit otevření krytu baterie",blade_height_adjustment_blocked:"Blade height adjustment blocked",blade_motor_blocked:"Blade motor is blocked",camera_error:"Camera error",charge_error:"Error charging",charging_station_docking_error:"Charging station docking error",close_door_to_go_home:"Zavřít dveře pro návrat domů",close_door_to_mow:"Zavřít dveře na sev",excessive_slope:"Zjištěn nadměrný sklon",hbi_error:"Chyba HBI",headlight_error:"Chyba světla",insufficient_sensor_data:"Nedostatek dat senzoru",lifted:"Zvednuta",locked:"Mower je uzamčen",map_error:"Chyby mapy",mapping_exploration_failed:"Průzkum mapování se nezdařil",mapping_exploration_required:"Je vyžadován průzkum mapování",missing_charging_station:"Chybějící nabíjecí stanice",missing_entity:"Je vyžadováno zadání entity!",no_error:"Bez chyby",ota_error:"OTA chyba",outside_wire:"Vnější dráty",rain_delay:"Zpoždění deště aktivní",reverse_wire:"Drát je obrácený",rfid_reader_error:"Chyba čtečky RFID",timeout_finding_home:"Vypršel časový limit při hledání domova",training_start_disallowed:"Začátek školení zakázán",trapped:"Uvězněna",trapped_timeout:"Vypršel časový limit při zachycení",unknown:"Neznámý",unreachable_charging_station:"Nedostupná nabíjecí stanice",unreachable_zone:"Nedostupná zóna",upside_down:"Mower je vzhůru",wheel_motor_blocked:"Dvojkolí motor je blokován",wire_missing:"Drát chybí",wire_sync:"Wire synchronizace"},qe={actions_array:"POZOR: 'actions' je rezervováno k přepisu výchozí akce stávajících tlačítek. Pokud jste měli v úmyslu přidat další akce, použijte volbu 'shortcuts'."},Oe={image_left:"Obrázek vlevo",image_left_aria_label_on:"Obrázek vlevo",image_left_aria_label_off:"Obrázek shora",image_size:"Velikost obrázku (nepovinné)",compact_view:"Kompaktní zobrazení",compact_view_aria_label_on:"Zapnout kompaktní zobrazení",compact_view_aria_label_off:"Vypnout kompaktní zobrazení",show_name:"Zobrazit Název",show_name_aria_label_on:"Zapnout zobrazení názvu",show_name_aria_label_off:"Vypnout zobrazení názvu",show_status:"Zobrazit Stav",show_status_aria_label_on:"Zapnout zobrazení stavu",show_status_aria_label_off:"Vypnout zobrazení stavu",show_toolbar:"Zobrazit Lištu nástrojů",show_toolbar_aria_label_on:"Zapnout zobrazení lišty nástrojů",show_toolbar_aria_label_off:"Vypnout zobrazení lišty nástrojů",show_animation:"Zobrazit Animaci",show_animation_aria_label_on:"Zapnout zobrazení animace",show_animation_aria_label_off:"Vypnout zobrazení animace",code_only_note:"Poznámka: Nastavení 'actions', 'shortcuts' a 'stats' voleb je dostupné pouze pomocí Editoru kódu."},Ze={status:je,attr:Ee,common:xe,action:Ue,error:Ve,warning:qe,editor:Oe},Me={docked:"Docked",edgecut:"Kantklipning",error:"Fejl",escaped_digital_fence:"Udenfor digitalt hegn",idle:"Afventer",initializing:"Initialiserer",locked:"Låst",mowing:"Slår græs",offline:"Afbrudt",paused:"Pause",rain_delay:"Regnforsinkelse",returning:"Returnerer til lader",searching_zone:"Søger efter zone",starting:"Starter",unavailable:"Utilgængelig",unknown:"Ukendt",zoning:"Zone træning"},Re={next_scheduled_start:"Næste planlagte start",party_mode:"Festtilstand",zone:"Zone"},Te={name:"Landroid Card",description:"Landroid card giver dig mulighed for at styre din robotplæneklipper.",not_available:"Plæneklipper er ikke tilgængelig"},Ne={config:"Konfiguration",edgecut:"Kantklipning",locate:"Find plæneklipperen",lock:"Lås",multizone_distances:"Sæt multizone afstand",multizone_probabilities:"Sæt multizone sandsynligheder",ots:"Start Engangs-Tidsplan",pause:"Pause",partymode:"Festtilstand",raindelay:"Indstil regn forsinkelse",dock:"Dok",restart:"Genstart",resume:"Fortsæt",schedule:"Indstil eller ændre tidsplanen for plæneklipperen",setzone:"Sæt zone",start_mowing:"Start",stop:"Stop",timeextension:"Angiv tidsforlængelse",torque:"Angiv hjuldrejningsmoment"},Ke={battery_low:"Lavt batteriniveau",battery_temperature_error:"Batteri temperaturfejl",battery_trunk_open_timeout:"Batteri trunk åben timeout",blade_height_adjustment_blocked:"Bladhøjde blokeret",blade_motor_blocked:"Knivmotoren er blokeret",camera_error:"Kamerafejl",charge_error:"Fejl under opladning",charging_station_docking_error:"Fejl i dockingstation for opladning",close_door_to_go_home:"Luk dør for at gå hjem",close_door_to_mow:"Luk dør for slag",excessive_slope:"Overdreven hældning detekteret",hbi_error:"HBI fejl",headlight_error:"Fejl i forlygte",insufficient_sensor_data:"Utilstrækkelige sensordata",lifted:"Løftet",locked:"Plæneklipper er låst",map_error:"Kort fejl",mapping_exploration_failed:"Udforskning af kortlægning mislykkedes",mapping_exploration_required:"Kortlægning efterforskning kræves",missing_charging_station:"Manglende ladestation",missing_entity:"Angivelse af Entity er påkrævet!",no_error:"Ingen fejl",ota_error:"OTA fejl",outside_wire:"Uden for ledningen",rain_delay:"Regn forsinkelse aktiv",reverse_wire:"Wire er vendt",rfid_reader_error:"RFID læserfejl",timeout_finding_home:"Timeout under at finde hjem",training_start_disallowed:"Uddannelsesstart er ikke tilladt",trapped:"Fanget",trapped_timeout:"Timeout mens fanget er fanget",unknown:"Ukendt",unreachable_charging_station:"Utilgængelig ladestation",unreachable_zone:"Utilgængelig zone",upside_down:"Plæneklipperen er på hovedet",wheel_motor_blocked:"Hjulmotoren er blokeret",wire_missing:"Wire mangler",wire_sync:"Wire synkronisering"},Ie={actions_array:"ADVARSEL: 'actions' er reserveret til at tilsidesætte standardhandlinger for eksisterende knapper. Hvis din hensigt var at tilføje yderligere handlinger, skal du bruge 'shortcuts' mulighed i stedet for."},Ce={image_left:"Image on the left",image_left_aria_label_on:"Image on the left",image_left_aria_label_off:"Image from above",image_size:"Image size (Optional)",compact_view:"Kompakt visning",compact_view_aria_label_on:"Slå kompakt visning til",compact_view_aria_label_off:"Slå kompakt visning fra",show_name:"Vis navn",show_name_aria_label_on:"Slå visning af navn til",show_name_aria_label_off:"Slå visning af navn fra",show_status:"Vis Status",show_status_aria_label_on:"Slå visning af status til",show_status_aria_label_off:"Slå visning af status fra",show_toolbar:"Vis værktøjslinje",show_toolbar_aria_label_on:"Slå visning af værktøjslinje til",show_toolbar_aria_label_off:"Slå visning af værktøjslinje fra",show_animation:"Vis animation",show_animation_aria_label_on:"Skift animation til",show_animation_aria_label_off:"Skift animation fra",code_only_note:"Bemærk: Indstilling af 'actions', 'shortcuts' og 'stats' er udelukkende muligt via Code Editor."},Ae={status:Me,attr:Re,common:Te,action:Ne,error:Ke,warning:Ie,editor:Ce},We={docked:"Angedockt",edgecut:"Kantenschnitt",error:"Fehler",escaped_digital_fence:"Außerhalb der Begrenzung",idle:"Untätig",initializing:"Initialisierung",locked:"Gesperrt",mowing:"Mähen",offline:"Offline",paused:"Pausiert",rain_delay:"Regenverzögerung",returning:"Rückkehr zur Ladestation",searching_zone:"Zone suchen",starting:"Startet",unavailable:"nicht verfügbar",unknown:"Unbekannt",zoning:"Zonentraining"},Je={next_scheduled_start:"Nächster Mähstart",party_mode:"Party Modus",zone:"Zone"},Ge={name:"Landroid Card",description:"Landroid Card ermöglicht es Ihnen, Ihr Mähroboter zu steuern.",not_available:"Nicht verfügbar"},Ye={config:"Konfiguration",edgecut:"Kantenschnitt",locate:"Rasenmäher lokalisieren",lock:"Sperren",multizone_distances:"Legen Sie den Mehrzonenabstand fest",multizone_probabilities:"Legen Sie Multizonen-Wahrscheinlichkeiten fest",ots:"Starte einmaliger Zeitplan",pause:"Pause",partymode:"Partymodus",raindelay:"Regenverzögerung",dock:"Ausgangsposition",restart:"Restart",resume:"Fortsetzen",schedule:"Stellen Sie den Zeitplan des Mähers ein oder ändern Sie ihn",setzone:"Zone einstellen",start_mowing:"Mähen",stop:"Stop",timeextension:"Zeitverlängerung einstellen",torque:"Raddrehmoment einstellen"},Be={battery_low:"Batterie schwach",battery_temperature_error:"Batterietemperaturfehler",battery_trunk_open_timeout:"Batterieklappe Öffnungszeitüberschreitung",blade_height_adjustment_blocked:"Höhenverstellung der Klinge blockiert",blade_motor_blocked:"Klingenmotor blockiert",camera_error:"Kamerafehler",charge_error:"Ladefehler",charging_station_docking_error:"Andockfehler an Ladestation",close_door_to_go_home:"Batterieklappe schließen, um zur Ladung zu fahren",close_door_to_mow:"Batterieklappe schließen, um zu mähen",excessive_slope:"Übermäßige Steigung erkannt",hbi_error:"HBI-Fehler",headlight_error:"Scheinwerferfehler",insufficient_sensor_data:"Unzureichende Sensordaten",lifted:"Angehoben",locked:"Rasenmäher ist gesperrt",map_error:"Kartenfehler",mapping_exploration_failed:"Kartierungserkundung fehlgeschlagen",mapping_exploration_required:"Kartierungserkundung erforderlich",missing_charging_station:"Ladestation fehlt",missing_entity:"Angabe der Entität erforderlich",no_error:"Kein Fehler",ota_error:"OTA-Fehler",outside_wire:"Außerhalb des Begrenzungsdrahts",rain_delay:"Regenverzögerung aktiv",reverse_wire:"Draht ist umgekehrt",rfid_reader_error:"RFID-Lesegerätfehler",timeout_finding_home:"Timed out while finding home",training_start_disallowed:"Training start disallowed",trapped:"Gefangen",trapped_timeout:"Zeitüberschreitung bei Gefangenstatus",unknown:"Unbekannt",unreachable_charging_station:"Ladestation unerreichbar",unreachable_zone:"Zone unerreichbar",upside_down:"Rasenmäher steht auf dem Kopf",wheel_motor_blocked:"Radmotor blockiert",wire_missing:"Draht fehlt",wire_sync:"Drahtsynchronisation"},Le={actions_array:"WARNUNG: 'actions' ist reserviert, um Standardaktionen für vorhandene Schaltflächen zu überschreiben. Wenn Sie zusätzliche Aktionen hinzufügen wollten, verwenden Sie stattdessen die Option 'shortcuts'."},Fe={image_left:"Bild links",image_left_aria_label_on:"Bild links",image_left_aria_label_off:"Bild oben",image_size:"Bildgröße (Optional)",compact_view:"Kompakte Ansicht",compact_view_aria_label_on:"Schalte kompakte Ansicht ein",compact_view_aria_label_off:"Schalte kompakte Ansicht aus",show_name:"Namen anzeigen",show_name_aria_label_on:"Schalte 'Zeige Namen' ein",show_name_aria_label_off:"Schalte 'Zeige Namen' aus",show_status:"Status anzeigen",show_status_aria_label_on:"Schalte 'Zeige Status' ein",show_status_aria_label_off:"Schalte 'Zeige Status' aus",show_toolbar:"Toolbar anzeigen",show_toolbar_aria_label_on:"Schalte 'Zeige Toolbar' ein",show_toolbar_aria_label_off:"Schalte 'Zeige Toolbar' aus",show_animation:"Animation anzeigen",show_animation_aria_label_on:"Schalte animation ein",show_animation_aria_label_off:"Schalte animation aus",code_only_note:"Hinweis: Das Festlegen 'actions', 'shortcuts' und 'stats' ist ausschließlich mit dem Code-Editor möglich."},Pe={status:We,attr:Je,common:Ge,action:Ye,error:Be,warning:Le,editor:Fe},He={docked:"Docked",edgecut:"Edgecut",error:"Error",escaped_digital_fence:"Escaped digital fence",idle:"Idle",initializing:"Initializing",locked:"Locked",mowing:"Mowing",offline:"Offline",paused:"Paused",rain_delay:"Rain Delay",returning:"Returning to charger",searching_zone:"Searching for zone",starting:"Starting",unavailable:"Unavailable",unknown:"Unknown",zoning:"Zone training"},De={next_scheduled_start:"Next scheduled start",party_mode:"Party Mode",zone:"Zone"},Xe={name:"Landroid Card",description:"Landroid card allows you to control your robot lawnmower.",not_available:"Lawnmower is not available"},Qe={config:"Configuration",edgecut:"Edgecut",locate:"Locate lawnmower",lock:"Toggle lock",multizone_distances:"Set multizone distance",multizone_probabilities:"Set multizone probabilities",ots:"Start One-Time-Schedule",pause:"Pause",partymode:"Toggle partymode",raindelay:"Set rain delay",dock:"Dock",restart:"Restart",resume:"Continue",schedule:"Set or change the schedule of the mower",setzone:"Set zone",start_mowing:"Start",stop:"Stop",timeextension:"Set time extension",torque:"Set wheel torque"},$e={battery_low:"Battery low",battery_temperature_error:"Battery temperature error",battery_trunk_open_timeout:"Battery trunk open timeout",blade_height_adjustment_blocked:"Blade height adjustment blocked",blade_motor_blocked:"Blade motor is blocked",camera_error:"Camera error",charge_error:"Error charging",charging_station_docking_error:"Charging station docking error",close_door_to_go_home:"Close door to go home",close_door_to_mow:"Close door to mow",excessive_slope:"Excessive slope detected",hbi_error:"HBI error",headlight_error:"Headlight error",insufficient_sensor_data:"Insufficient sensor data",lifted:"Lifted",locked:"Mower is locked",map_error:"Map error",mapping_exploration_failed:"Mapping exploration failed",mapping_exploration_required:"Mapping exploration required",missing_charging_station:"Missing charging station",missing_entity:"Specifying entity is required!",no_error:"No error",ota_error:"OTA error",outside_wire:"Outside wire",rain_delay:"Rain delay active",reverse_wire:"Wire is reversed",rfid_reader_error:"RFID reader error",timeout_finding_home:"Timed out while finding home",training_start_disallowed:"Training start disallowed",trapped:"Trapped",trapped_timeout:"Timed out while trapped",unknown:"Unknown",unreachable_charging_station:"Unreachable charging station",unreachable_zone:"Unreachable zone",upside_down:"Mower is upside down",wheel_motor_blocked:"Wheel motor is blocked",wire_missing:"Wire missing",wire_sync:"Wire sync"},et={actions_array:"WARNING: 'actions' is reserved to override default actions for existing buttons. If your intention was to add additional actions, use the 'shortcuts' option instead."},tt={image_left:"Image on the left",image_left_aria_label_on:"Image on the left",image_left_aria_label_off:"Image from above",image_size:"Image size (Optional)",compact_view:"Compact View",compact_view_aria_label_on:"Toggle compact view on",compact_view_aria_label_off:"Toggle compact view off",show_name:"Show Name",show_name_aria_label_on:"Toggle display name on",show_name_aria_label_off:"Toggle display name off",show_status:"Show Status",show_status_aria_label_on:"Toggle display status on",show_status_aria_label_off:"Toggle display status off",show_toolbar:"Show Toolbar",show_toolbar_aria_label_on:"Toggle display toolbar on",show_toolbar_aria_label_off:"Toggle display toolbar off",show_animation:"Show Animation",show_animation_aria_label_on:"Toggle animation on",show_animation_aria_label_off:"Toggle animation off",code_only_note:"Note: Setting 'actions', 'shortcuts' and 'stats' options are available exclusively using Code Editor."},at={status:He,attr:De,common:Xe,action:Qe,error:$e,warning:et,editor:tt},it={docked:"Dokitud",edgecut:"Servalõige",error:"Viga",escaped_digital_fence:"Digitaalselt piirdest välja pääsenud",idle:"Tegevusetu",initializing:"Initsialiseerimine",locked:"Bloķēts",mowing:"Niitmine",offline:"Ühenduseta",paused:"Peatatud",rain_delay:"Vihmaviivitus",returning:"Koju tagasipöördumine",searching_zone:"Tsooni otsimine",starting:"Alustamine",unavailable:"Nav pieejams",unknown:"Tundmatu",zoning:"Tsooni treening"},rt={next_scheduled_start:"Järgmine planeeritud käivitamine",party_mode:"Peo režiim",zone:"Tsoon"},ot={name:"Landroidi kaart",description:"Landroidi kaart võimaldab teil juhtida oma robot muruniidukit.",not_available:"Muruniiduk pole saadaval"},nt={config:"Seadistus",edgecut:"Servalõige",locate:"Leia muruniiduk",lock:"Lülita lukustus sisse/välja",multizone_distances:"Määra tsoonide kaugused",multizone_probabilities:"Määra tsoonide tõenäosused",ots:"Alusta ühekordset ajakava",pause:"Peata",partymode:"Lülita peorežiim sisse/välja",raindelay:"Määra vihmaviivitus",dock:"Doki",restart:"Taaskäivita",resume:"Jätka",schedule:"Seadista või muuda muruniiduki ajakava",setzone:"Määra tsoon",start_mowing:"Alusta",stop:"Peata",timeextension:"Määra ajapikendus",torque:"Määra ratta pöördemoment"},st={battery_low:"Aku tühi",battery_temperature_error:"Aku temperatuuri viga",battery_trunk_open_timeout:"Aku pagasiruumi avamise aegumine",blade_height_adjustment_blocked:"Tera kõrguse reguleerimine blokeeritud",blade_motor_blocked:"Tera mootor on blokeeritud",camera_error:"Kaamera viga",charge_error:"Viga laadimisel",charging_station_docking_error:"Laadimisjaama dokkimisviga",close_door_to_go_home:"Sulge uks, et naasta koju",close_door_to_mow:"Niitmiseks sulgege uks",excessive_slope:"Tuvastati liigne kalle",hbi_error:"HBI viga",headlight_error:"Esitulede viga",insufficient_sensor_data:"Anduri andmed on ebapiisavad",lifted:"Ülestõstetud",locked:"Niiduk on lukustatud",map_error:"Kaardi viga",mapping_exploration_failed:"Kaardistamine ebaõnnestus",mapping_exploration_required:"Kaardistamine on vajalik",missing_charging_station:"Laadimisjaam on kättesaamatu",missing_entity:"Spetsifitseerimine on vajalik!",no_error:"Vigu pole",ota_error:"OTA viga",outside_wire:"Väljaspool piirdetraati",rain_delay:"Vihma viivitus aktiivne",reverse_wire:"Piirdetraat on vastupidine",rfid_reader_error:"RFID-lugeja viga",timeout_finding_home:"Aegus kodu leidmisel",training_start_disallowed:"Treeningu alustamine on keelatud",trapped:"Lõksus",trapped_timeout:"Aegunud kinni olles",unknown:"Tundmatu",unreachable_charging_station:"Laadimisjaam on kättesaamatu",unreachable_zone:"Tsoon läbipääsmatu",upside_down:"Niiduk on tagurpidi",wheel_motor_blocked:"Ratta mootor on blokeeritud",wire_missing:"Piirdetraat kadunud",wire_sync:"Piirdekaabli sünkroniseerimine"},lt={actions_array:"HOIATUS: 'tegevused' on reserveeritud olemasolevate nuppude vaikimisi tegevuste ülekirjutamiseks. Kui soovite lisada täiendavaid tegevusi, kasutage selle asemel valikuvõimalust 'kiirkorraldused'."},dt={image_left:"Pilt vasakul",image_left_aria_label_on:"Pilt vasakul",image_left_aria_label_off:"Pilt ülevalt",image_size:"Pildi suurus (Valikuline)",compact_view:"Kompaktne vaade",compact_view_aria_label_on:"Lülita kompaktne vaade sisse",compact_view_aria_label_off:"Lülita kompaktne vaade välja",show_name:"Kuva nimi",show_name_aria_label_on:"Lülita nime kuvamine sisse",show_name_aria_label_off:"Lülita nime kuvamine välja",show_status:"Kuva olek",show_status_aria_label_on:"Lülita oleku kuvamine sisse",show_status_aria_label_off:"Lülita oleku kuvamine välja",show_toolbar:"Kuva tööriistariba",show_toolbar_aria_label_on:"Lülita tööriistariba kuvamine sisse",show_toolbar_aria_label_off:"Lülita tööriistariba kuvamine välja",show_animation:"Kuva animatsioon",show_animation_aria_label_on:"Lülita animatsioon sisse",show_animation_aria_label_off:"Lülita animatsioon välja",code_only_note:"Märkus: 'Tegevused', 'Kiirkorraldused' ja 'Statistika' valikute seadistamine on saadaval ainult koodiredaktori abil."},ct={status:it,attr:rt,common:ot,action:nt,error:st,warning:lt,editor:dt},bt={docked:"Aclopado",edgecut:"Cortando bordes",error:"Error",escaped_digital_fence:"Fuera del cable",idle:"Inactivo",initializing:"Iniciando",locked:"Bloqueado",mowing:"Cortando el césped",offline:"Fuera de línea",paused:"Pausado",rain_delay:"Retraso por lluvia",returning:"Volviendo",searching_zone:"Buscando zona",starting:"Empezando",unavailable:"No disponible",unknown:"Desconocido",zoning:"Zonificando"},ut={next_scheduled_start:"Próximo inicio programado",party_mode:"Modo Fiesta",zone:"Zona"},mt={name:"Tarjeta Landroid",description:"La tarjeta Landroid te permite controlar tu robot cortacésped.",not_available:"El cortacésped no está disponible"},ht={config:"Configuración",edgecut:"Corte de bordes",locate:"Localizar cortacésped",lock:"Activar o desactivar bloqueo",multizone_distances:"Establecer distancia multizona",multizone_probabilities:"Establecer probabilidades multizona",ots:"Iniciar programa de una sola vez",pause:"Pausa",partymode:"Activar o desactivar Modo Fiesta",raindelay:"Establecer retraso por lluvia",dock:"Acoplamiento",restart:"Reiniciar",resume:"Continuar",schedule:"Programar el cortacésped",setzone:"Establecer zona",start_mowing:"Iniciar",stop:"Detener",timeextension:"Establecer extensión de tiempo",torque:"Establecer par de torsión de la rueda"},pt={battery_low:"Batería baja",battery_temperature_error:"Error de temperatura de la batería",battery_trunk_open_timeout:"Tiempo de espera de apertura del baúl de la batería",blade_height_adjustment_blocked:"Ajuste de altura de la cuchilla bloqueado",blade_motor_blocked:"El motor de la cuchilla está bloqueado",camera_error:"Error de cámara",charge_error:"Error de carga",charging_station_docking_error:"Error de acoplamiento a la base",close_door_to_go_home:"Cerrar la puerta para ir a la base",close_door_to_mow:"Cerrar la puerta para cortar el césped",excessive_slope:"Pendiente excesiva detectada",hbi_error:"Error de HBI",headlight_error:"Error de faro",insufficient_sensor_data:"Datos del sensor insuficientes",lifted:"Levantado",locked:"El cortacésped está bloqueado",map_error:"Error de mapa",mapping_exploration_failed:"Error de exploración de mapas",mapping_exploration_required:"Exploración de mapas requerida",missing_entity:"¡Se requiere especificar la entidad!",missing_charging_station:"Perdida la base",no_error:"Sin errores",ota_error:"Error de OTA",outside_wire:"Fuera del cable",rain_delay:"Retraso por lluvia activo",reverse_wire:"El cable está invertido",rfid_reader_error:"Error del lector RFID",timeout_finding_home:"Tiempo de espera agotado mientras se buscaba la base",training_start_disallowed:"Inicio de entrenamiento no permitido",trapped:"Atrapado",trapped_timeout:"Tiempo de espera agotado mientras estaba atrapado",unknown:"Desconocido",unreachable_charging_station:"Base inalcanzable",unreachable_zone:"Zona inalcanzable",upside_down:"El cortacésped está del revés",wheel_motor_blocked:"El motor de la rueda está bloqueado",wire_missing:"Falta el cable",wire_sync:"Sincronización del cable"},gt={actions_array:"ADVERTENCIA: la opción 'acciones' está reservada para anular las acciones predeterminadas de los botones existentes. Si su intención era agregar acciones adicionales, utilice la opción 'atajos' en su lugar."},_t={entity:"Entidad (obligatoria)",camera:"Cámara (opcional)",image:"Imagen (opcional)",image_left:"Imagen a la izquierda",image_left_aria_label_on:"Imagen a la izquierda",image_left_aria_label_off:"Imagen desde arriba",image_size:"Tamaño de la imagen (opcional)",compact_view:"Vista compacta",compact_view_aria_label_on:"Activar vista compacta",compact_view_aria_label_off:"Desactivar vista compacta",show_name:"Mostrar nombre",show_name_aria_label_on:"Activar nombre para mostrar",show_name_aria_label_off:"Desactivar nombre para mostrar",show_status:"Mostrar estado",show_status_aria_label_on:"Activar visualización de estado",show_status_aria_label_off:"Desactivar visualización de estado",show_toolbar:"Mostrar barra de herramientas",show_toolbar_aria_label_on:"Activar visualización de la barra de herramientas",show_toolbar_aria_label_off:"Desactivar visualización de la barra de herramientas",show_animation:"Mostrar animación",show_animation_aria_label_on:"Activar animación",show_animation_aria_label_off:"Desactivar animación",code_only_note:"Nota: Las opciones de configuración 'acciones', 'atajos' y 'estadísticas' están disponibles exclusivamente mediante el Editor de código."},ft={status:bt,attr:ut,common:mt,action:ht,error:pt,warning:gt,editor:_t},vt={docked:"Maison",edgecut:"Coupe des bordures",error:"Erreur",escaped_digital_fence:"Hors de la barrière numérique",idle:"Arrêt",initializing:"Initialisation",locked:"Verrouillé",mowing:"Tonte",offline:"Hors Ligne",paused:"Pause",rain_delay:"Retard Pluviosité",returning:"Retour à la base",searching_zone:"Recherche de zone",starting:"Démarrage",unavailable:"Indisponible",unknown:"Inconnu",zoning:"Entraînement par zone"},kt={next_scheduled_start:"Prochain démarrage programmé",party_mode:"Mode Festif",zone:"Zone"},yt={name:"Landroid Card",description:"Landroid card vous permet de contrôler votre tondeuse.",not_available:"Lawnmower is not available"},zt={config:"Configuration",edgecut:"Coupe Bordure",locate:"Localisation",lock:"Lock",multizone_distances:"Set multizone distance",multizone_probabilities:"Set multizone probabilities",ots:"Start One-Time-Schedule",pause:"Pause",partymode:"Mode Festif",raindelay:"Set rain delay",dock:"Maison",restart:"Restart",resume:"Continue",schedule:"Set or change the schedule of the mower",setzone:"Set zone",start_mowing:"Tonte",stop:"Stop",timeextension:"Set time extension",torque:"Set wheel torque"},wt={battery_low:"Batterie faible",battery_temperature_error:"Erreur de température de la batterie",battery_trunk_open_timeout:"Délai expiré ouverture logement batterie",blade_height_adjustment_blocked:"Réglage de la hauteur de lame bloqué",blade_motor_blocked:"Le moteur de la lame est bloqué",camera_error:"Erreur de la caméra",charge_error:"Erreur de chargement",charging_station_docking_error:"Erreur de la station de recharge",close_door_to_go_home:"Fermer la trappe pour retourner à la base",close_door_to_mow:"Fermer la trappe pour tondre",excessive_slope:"Pente excessive détectée",hbi_error:"Erreur HBI",headlight_error:"Erreur des phares",insufficient_sensor_data:"Données de capteur insuffisantes",lifted:"Levé",locked:"La tondeuse est verrouillée",map_error:"Erreur de la carte",mapping_exploration_failed:"Échec de l’exploration cartographique",mapping_exploration_required:"Exploration de la cartographique requise",missing_charging_station:"Station de recharge absente",missing_entity:"Entité manquante!",no_error:"Aucune erreur",ota_error:"Erreur OTA",outside_wire:"En dehors du câble périphérique",rain_delay:"Retard de pluviosité",reverse_wire:"Le fil est inversé",rfid_reader_error:"Erreur du lecteur RFID",timeout_finding_home:"Délai expiré lors de la recherche de la base",training_start_disallowed:"Début de l’entraînement non autorisé",trapped:"Immobilisé",trapped_timeout:"Délai d'attente en cas d'immobilisation",unknown:"Inconnu",unreachable_charging_station:"Station de recharge inaccessible",unreachable_zone:"Zone inaccessible",upside_down:"La tondeuse est retournée",wheel_motor_blocked:"Le moteur de roue est bloqué",wire_missing:"Câble périphérique manquant",wire_sync:"Synchronisation du câble"},St={actions_array:"ATTENTION: 'actions' est réservé pour modifier des actions par défaut pour des boutons existant. Si vous voulez ajouter des actions, utiliser alors l'option 'shortcuts' à la place."},jt={image_left:"Image on the left",image_left_aria_label_on:"Image on the left",image_left_aria_label_off:"Image from above",image_size:"Image size (Optional)",compact_view:"Vue Compacte",compact_view_aria_label_on:"Activer vue compacte",compact_view_aria_label_off:"Désactiver vue compacte",show_name:"Afficher Nom",show_name_aria_label_on:"Activer Affichage Nom",show_name_aria_label_off:"Désactiver Affichage Nom",show_status:"Afficher Etat",show_status_aria_label_on:"Activer Affichage Etat",show_status_aria_label_off:"Désactiver Affichage Etat",show_toolbar:"Afficher Barre d'outils",show_toolbar_aria_label_on:"Activer Affichage Barre d'outils",show_toolbar_aria_label_off:"Désactiver Affichage Barre d'outils",show_animation:"Show Animation",show_animation_aria_label_on:"Toggle animation on",show_animation_aria_label_off:"Toggle animation off",code_only_note:"Note: Mettre des options 'actions', 'shortcuts' and 'stats' uniquement disponible via le Code Editor."},Et={status:vt,attr:kt,common:yt,action:zt,error:wt,warning:St,editor:jt},xt={docked:"Dokkolva",edgecut:"Szélvágás",error:"Hiba",escaped_digital_fence:"A digitális kerítésen kívül",idle:"Tétlen",initializing:"Inicializálás",locked:"Lezárva",mowing:"Vágás",offline:"Nincs kapcsolat",paused:"Megállítva",rain_delay:"Esõ késleltetés",returning:"Visszatérés",searching_zone:"Zóna keresése",starting:"Indítás",unavailable:"Nem elérhető",unknown:"Ismeretlen",zoning:"Zóna betanítás"},Ut={next_scheduled_start:"Kövekezõ ütemezett indítás",party_mode:"Parti mód",zone:"Zóna"},Vt={name:"Landroid kártya",description:"Ezzel a Landroid kártyával vezérelhetõ a robotfûnyíró.",not_available:"A robotfûnyíró nem elérhetõ"},qt={config:"Beállítás",edgecut:"Szélvágás",locate:"Fûnyíró megkeresése",lock:"Lezárás",multizone_distances:"Többzónás távolság megadása",multizone_probabilities:"Többzónás lehetõség",ots:"Egyszeri ütemezés indítása",pause:"Pillanat megállítás",partymode:"Parti mód",raindelay:"Esõ késleltetés",dock:"Dokkolás",restart:"Újraindítás",resume:"Folytatás",schedule:"A fûnyíró ütemezésének beállítása vagy változtatása",setzone:"Zóna beállítás",start_mowing:"Indítás",stop:"Leállítás",timeextension:"Idõ hosszabbítás",torque:"Kerék nyomaték beállítás"},Ot={battery_low:"Az akkumulátor lemerült",battery_temperature_error:"Akkumulátor hőmérsékleti hiba",battery_trunk_open_timeout:"Az akkutartó túl sokáig van nyitva",blade_height_adjustment_blocked:"A penge magasság állítása meghiúsult.",blade_motor_blocked:"A vágómotor blokkolva van",camera_error:"Kamera hiba",charge_error:"Töltési hiba",charging_station_docking_error:"Töltőállomás dokkolási hiba",close_door_to_go_home:"Csukja be az ajtót a haza induláshoz",close_door_to_mow:"Csukja be az ajtót a fűnyíráshoz",excessive_slope:"A lejtő túl meredek",hbi_error:"HBI hiba",headlight_error:"Fényszóró hiba",insufficient_sensor_data:"Nincs elegendő érzékelő adat",lifted:"Felemelve",locked:"A fűnyíró le van zárva",map_error:"Térképhiba",mapping_exploration_failed:"Térképfelderítés sikertelen",mapping_exploration_required:"Térképfelderítés szükséges",missing_charging_station:"A töltőállomás hiányzik",missing_entity:"Az entitás nincs megadva!",no_error:"Nincs hiba",ota_error:"OTA hiba",outside_wire:"Vezetődróton kívül",rain_delay:"Az eső késleltetése aktív",reverse_wire:"A vezetődrót fodított irányú",rfid_reader_error:"RFID olvasó hiba",timeout_finding_home:"Időtúllépés dokkoló keresése közben",training_start_disallowed:"A betanítás elindítása nem engedélyezett",trapped:"Megakadt",trapped_timeout:"Időtúllépés megakadás közben",unknown:"Ismeretlen",unreachable_charging_station:"A töltőállomás nem elérhető",unreachable_zone:"Elérhetetlen zóna",upside_down:"A fűnyíró fejjel lefelé van",wheel_motor_blocked:"A kerékmotor blokkolva van",wire_missing:"Hiányzó vezetődrót",wire_sync:"Vezetődrót szinkronizálás"},Zt={actions_array:"FIGYELEM: az 'actions' szó a gombok alapértelmezett mûködését írják felül. Ha további funkciókat szeretett volna hozzáadni, használja a 'shortcuts' szót!"},Mt={entity:"Entitás (kötelezõ)",camera:"Kamera (opcionális)",image:"Kép (opcionális)",image_left:"Kép balra",image_left_aria_label_on:"Kép balra",image_left_aria_label_off:"Kép felül",image_size:"Kép mérete (opcionális)",compact_view:"Kompakt mód",compact_view_aria_label_on:"Kompakt nézet be",compact_view_aria_label_off:"Kompakt nézet ki",show_name:"Név",show_name_aria_label_on:"Név mutatása",show_name_aria_label_off:"Név elrejtése",show_status:"Állapot",show_status_aria_label_on:"Állapot mutatása",show_status_aria_label_off:"Állapot elrejtése",show_toolbar:"Eszközök",show_toolbar_aria_label_on:"Eszközök be",show_toolbar_aria_label_off:"Eszközök ki",show_animation:"Animáció",show_animation_aria_label_on:"Animáció be",show_animation_aria_label_off:"Animáció ki",code_only_note:"Megjegyzés: Az 'actions', 'shortcuts' és 'stats' opciók kizárólag a kódszerkesztõben érhetõk el."},Rt={status:xt,attr:Ut,common:Vt,action:qt,error:Ot,warning:Zt,editor:Mt},Tt={docked:"In base",edgecut:"Taglio bordi",error:"Errore",escaped_digital_fence:"Landroid fuori area di lavoro",idle:"Fermo",initializing:"Inizializzazione",locked:"Bloccato",mowing:"Taglio",offline:"Disconnesso",paused:"Pausa",rain_delay:"Ritardo pioggia",returning:"Ritorno alla base",searching_zone:"Ricerca zona",starting:"Avvio",unavailable:"Non disponibile",unknown:"Errore sconosciuto",zoning:"Apprendimento zone"},Nt={next_scheduled_start:"Prossimo inizio programmato",party_mode:"Modalità Party",zone:"Zona"},Kt={name:"Landroid Card",description:"Landroid card vi permette di controllare il vostro robot tagliaerba.",not_available:"Non disponibile"},It={config:"Configurazione",edgecut:"Taglio bordi",locate:"Localizza",lock:"Attiva/disattiva blocco",multizone_distances:"Imposta la distanza multizona",multizone_probabilities:"Imposta le probabilità multizona",ots:"Start One-Time-Schedule",pause:"Pausa",partymode:"Attiva/disattiva modalità party",raindelay:"Imposta ritardo pioggia",dock:"ritorno in base",restart:"Restart",resume:"Continua",schedule:"Imposta o cambia la schedulazione del tagliaerba",setzone:"Imposta Zona",start_mowing:"Avvio",stop:"Stop",timeextension:"Imposta estensione del tempo",torque:"Set wheel torque"},Ct={battery_low:"Batteria scarica",battery_temperature_error:"Errore di temperatura della batteria",battery_trunk_open_timeout:"Timeout apertura sportello batteria",blade_height_adjustment_blocked:"Regolazione altezza lama bloccata",blade_motor_blocked:"Il motore della lama è bloccato",camera_error:"Errore della camera",charge_error:"Errore durante la ricarica",charging_station_docking_error:"Errore di aggancio alla base",close_door_to_go_home:"Chiudere la porta per tornare alla base",close_door_to_mow:"Chiudere la porta per tagliare",excessive_slope:"Rilevata pendenza eccessiva",hbi_error:"Errore della HBI",headlight_error:"Errore fari",insufficient_sensor_data:"Dati dei sensori insufficienti",lifted:"Sollevato!",locked:"Il robot è bloccato",map_error:"Errore della mappa",mapping_exploration_failed:"Esplorazione di mappatura fallita",mapping_exploration_required:"Richiesta esplorazione di mappatura",missing_charging_station:"Stazione di ricarica mancante",missing_entity:"Entità mancante!",no_error:"Nessun errore",ota_error:"Errore OTA",outside_wire:"Landroid fuori area di lavoro",rain_delay:"Ritardo pioggia",reverse_wire:"Il filo perimetrale è invertito",rfid_reader_error:"Errore del lettore RFID",timeout_finding_home:"Timeout durante la ricerca della base",training_start_disallowed:"Inizio addestramento non consentito",trapped:"Incastrato",trapped_timeout:"Timeout mentre Landroid era incastrato",unknown:"Errore sconosciuto",unreachable_charging_station:"Stazione di ricarica non raggiungibile",unreachable_zone:"Zona non raggiungibile",upside_down:"Il robot è capovolto",wheel_motor_blocked:"Il motore della ruota è bloccato",wire_missing:"Filo perimetrale assente",wire_sync:"Sincoronizzazione filo perimetrale"},At={actions_array:"ATTENZIONE: 'azioni' è riservato alla modifica delle azioni predefinite per i pulsanti esistenti. Se vuoi aggiungere azioni, usa invece l'opzione scorciatoie."},Wt={image_left:"Immagine a sinistra",image_left_aria_label_on:"Immagine a destra",image_left_aria_label_off:"Immagine da su",image_size:"Dimensioni immagine (Opzionale)",compact_view:"Vista compatta",compact_view_aria_label_on:"Attiva vista compatta",compact_view_aria_label_off:"Disattiva vista compatta",show_name:"Mostra nome",show_name_aria_label_on:"Attiva mostra nome",show_name_aria_label_off:"Disatttiva mostra nome",show_status:"Mostra stato",show_status_aria_label_on:"Attiva mostra stato",show_status_aria_label_off:"Disattiva mostra stato",show_toolbar:"Mostra toolbar",show_toolbar_aria_label_on:"Attiva mostra toolbar",show_toolbar_aria_label_off:"Disattiva mostra toolbar",show_animation:"Mostra animazione",show_animation_aria_label_on:"Attiva animazione",show_animation_aria_label_off:"Disattiva animatione",code_only_note:"Nota: rendere disponibili le opzioni di 'actions', 'shortcuts' e 'stats' solo tramite l'editor di codice."},Jt={status:Tt,attr:Nt,common:Kt,action:It,error:Ct,warning:At,editor:Wt},Gt={docked:"Gestationeerd",edgecut:"Randroutine",error:"Storing",escaped_digital_fence:"Buiten werkgebied",idle:"Gereed",initializing:"Initialiseren",locked:"Vergrendeld",mowing:"Maaien",offline:"Offline",paused:"Gepauzeerd",rain_delay:"Regenvertraging",returning:"Terugkeren naar laadstation",searching_zone:"Zone zoeken",starting:"Opstarten",unavailable:"Niet beschikbaar",unknown:"Onbekend",zoning:"Zone instellen"},Yt={next_scheduled_start:"Volgende geplande start",party_mode:"Party Mode",zone:"Zone"},Bt={name:"Landroid Card",description:"Landroid card maakt het mogelijk om uw robotgrasmaaier te besturen.",not_available:"Grasmaaier is niet bereikbaar"},Lt={config:"Configuratie",edgecut:"Randroutine",locate:"Lokaliseer maaier",lock:"Vergrendeling in- of uitschakelen",multizone_distances:"Stel multizone afstand in",multizone_probabilities:"Stel multizone kansen in",ots:"Start eenmalig schema",pause:"Pauze",partymode:"Partymode in- of uitschakelen",raindelay:"Stel regenvertraging in",dock:"Terugkeren naar station",restart:"Herstart",resume:"Doorgaan",schedule:"Stel in of wijzig schema van de maaier",setzone:"Stel zone in",start_mowing:"Start",stop:"Stop",timeextension:"Tijdverlenging instellen",torque:"Stel koppel van de wielen in"},Ft={battery_low:"Batterij bijna leeg",battery_temperature_error:"Fout met batterijtemperatuur",battery_trunk_open_timeout:"Time-out voor open batterijkofferbak",blade_height_adjustment_blocked:"Hoogte-instelling mes geblokkeerd",blade_motor_blocked:"Motor mes is geblokkeerd",camera_error:"Camerafout",charge_error:"Fout bij opladen",charging_station_docking_error:"Dockingfout bij laadstation",close_door_to_go_home:"Sluit de deur om naar laadstation te gaan",close_door_to_mow:"Sluit de deur om te maaien",excessive_slope:"Er is een te grote helling gedetecteerd",hbi_error:"HBI fout",headlight_error:"Koplampfout",insufficient_sensor_data:"Onvoldoende sensorgegevens",lifted:"Opgetild",locked:"Maaier is vergrendeld",map_error:"Kaart fout",mapping_exploration_failed:"Kaartverkenning mislukt",mapping_exploration_required:"Verkenning in kaart brengen vereist",missing_charging_station:"Laadstation ontbreekt",missing_entity:"Opgeven van een entiteit is vereist!",no_error:"Geen fout",ota_error:"OTA fout",outside_wire:"Buiten de draad",rain_delay:"Regenvertraging actief",reverse_wire:"Draad is omgekeerd",rfid_reader_error:"Fout met RFID-lezer",timeout_finding_home:"Time-out tijdens het vinden van laadstation",training_start_disallowed:"Trainingsstart afgekeurd",trapped:"Vast",trapped_timeout:"Time-out terwijl hij vastzit",unknown:"Onbekend",unreachable_charging_station:"Laadstation onbereikbaar",unreachable_zone:"Onbereikbare zone",upside_down:"Maaier staat ondersteboven",wheel_motor_blocked:"Motor wiel is geblokkeerd",wire_missing:"Draad ontbreekt",wire_sync:"Draad synchronisatie"},Pt={actions_array:"WAARSCHUWING: 'actions' is gereserveerd om standaardacties voor bestaande knoppen te overschrijven. Als het uw bedoeling was om extra acties toe te voegen, gebruikt u in plaats daarvan de optie 'shortcuts'."},Ht={image_left:"Afbeelding links",image_left_aria_label_on:"Afbeelding links",image_left_aria_label_off:"Afbeelding boven",image_size:"Grootte afbeelding (optioneel)",compact_view:"Compacte weergave",compact_view_aria_label_on:"Compacte weergave aan",compact_view_aria_label_off:"Compacte weergave uit",show_name:"Toon naam",show_name_aria_label_on:"Naam weergeven",show_name_aria_label_off:"Naam verbergen",show_status:"Toon status",show_status_aria_label_on:"Status weergaven",show_status_aria_label_off:"Status verbergen",show_toolbar:"Toon werkbalk",show_toolbar_aria_label_on:"Werkbalk weergeven",show_toolbar_aria_label_off:"Werkbalk verbergen",show_animation:"Toon animatie",show_animation_aria_label_on:"Animatie aan",show_animation_aria_label_off:"Animatie uit",code_only_note:"Opmerking: Het instellen van 'actions', 'shortcuts' en 'stats' opties is alleen beschikbaar door de Code Editor te gebruiken."},Dt={status:Gt,attr:Yt,common:Bt,action:Lt,error:Ft,warning:Pt,editor:Ht},Xt={docked:"Zadokowany",edgecut:"Przycinanie obrzeży",error:"Błąd",escaped_digital_fence:"Poza cyfrowym płotem",idle:"Bezczynny",initializing:"Inicjalizacja",locked:"Zablokowany",mowing:"Koszenie",offline:"Offline",paused:"Wstrzymany",rain_delay:"Opóźnienie z powodu deszczu",returning:"Powrót do domu",searching_zone:"Poszukiwanie strefy",starting:"Rozpoczynanie",unavailable:"Niedostępne",unknown:"Nieznany",zoning:"Przyuczanie strefy"},Qt={next_scheduled_start:"Następny zaplanowany start",party_mode:"Tryb imprezy",zone:"Strefa"},$t={name:"Karta Landroida",description:"Karta Landroida umożliwia sterowanie automatyczną kosiarką.",not_available:"Kosiarka jest niedostępna"},ea={config:"Konfiguracja",edgecut:"Cięcie krawędzi",locate:"Zlokalizuj kosiarkę",lock:"Blokada",multizone_distances:"Ustaw odległość wielostrefową",multizone_probabilities:"Ustaw prawdopodobieństwa wielostrefowe",ots:"Rozpocznij harmonogram jednorazowy",pause:"Pauza",partymode:"Tryb imprezy",raindelay:"Ustaw opóźnienie deszczu",dock:"Powrót do doku",restart:"Restart",resume:"Kontynuowanie",schedule:"Ustaw lub zmień harmonogram kosiarki",setzone:"Ustaw strefę",start_mowing:"Start",stop:"Stop",timeextension:"Ustaw przedłużenie czasu",torque:"Ustaw moment obrotowy koła"},ta={battery_low:"Niski poziom baterii",battery_temperature_error:"Błąd temperatury akumulatora",battery_trunk_open_timeout:"Battery trunk open timeout",blade_height_adjustment_blocked:"Przekroczenie limitu czasu otwarcia pokrywy akumulatora",blade_motor_blocked:"Silnik ostrza jest zablokowany",camera_error:"Błąd kamery",charge_error:"Błąd ładowania",charging_station_docking_error:"Błąd stacji dokującej",close_door_to_go_home:"Zamknij drzwi, żeby wrócić do domu",close_door_to_mow:"Zamknij drzwi, aby kosić",excessive_slope:"Wykryto nadmierne nachylenie",hbi_error:"Błąd HBI",headlight_error:"Błąd reflektora",insufficient_sensor_data:"Niewystarczające dane czujnika",lifted:"Podniesiony",locked:"Kosiarka jest zablokowana",map_error:"Błąd mapy",mapping_exploration_failed:"Mapowanie nie powiodło się",mapping_exploration_required:"Wymagane mapowanie",missing_charging_station:"Brak stacji ładowania",missing_entity:"Określenie encji jest wymagane",no_error:"Brak błędów",ota_error:"Błąd OTA",outside_wire:"Drut zewnętrzny",rain_delay:"Opóźnienie deszczu aktywne",reverse_wire:"Drut jest odwrócony",rfid_reader_error:"Błąd czytnika RFID",timeout_finding_home:"Przekroczono limit czasu podczas szukania stacji dokującej",training_start_disallowed:"Rozpoczęcie treningu niedozwolone",trapped:"Uwięziony",trapped_timeout:"Upłynął limit czasu od uwięzienia",unknown:"Nieznany",unreachable_charging_station:"Niedostępna stacja ładowania",unreachable_zone:"Strefa niedostępna",upside_down:"Kosiarka jest do góry nogami",wheel_motor_blocked:"Silnik koła jest zablokowany",wire_missing:"Brak przewodu",wire_sync:"Synchronizacja przewodowa"},aa={actions_array:"OSTRZEŻENIE: 'actions' jest zarezerwowane do zastąpienia domyślnych akcji dla istniejących przycisków. Jeśli Twoim zamiarem było dodanie dodatkowych działań, zamiast tego użyj opcji 'shortcuts'."},ia={image_left:"Obraz po lewej stronie",image_left_aria_label_on:"Obraz po lewej stronie",image_left_aria_label_off:"Obraz z góry",image_size:"Rozmiar obrazu (opcjonalnie)",compact_view:"Widok kompaktowy",compact_view_aria_label_on:"Włącz widok kompaktowy",compact_view_aria_label_off:"Wyłącz widok kompaktowy",show_name:"Pokaż nazwę",show_name_aria_label_on:"Włącz wyświetlanie nazwy",show_name_aria_label_off:"Wyłącz wyświetlanie nazwy",show_status:"Pokaż Status",show_status_aria_label_on:"Włącz wyświetlanie statusu",show_status_aria_label_off:"Wyłącz wyświetlanie statusu",show_toolbar:"Pokaż Narzędzia",show_toolbar_aria_label_on:"Włącz wyświetlanie narzędzi",show_toolbar_aria_label_off:"Wyłącz wyświetlanie narzędzi",show_animation:"Pokaż Animacje",show_animation_aria_label_on:"Włącz wyświetlanie animacji",show_animation_aria_label_off:"Wyłącz wyświetlanie animacji",code_only_note:"Uwaga: Ustawienia 'actions', 'shortcuts' i 'stats' są dostępne wyłącznie za pomocą edytora kodu."},ra={status:Xt,attr:Qt,common:$t,action:ea,error:ta,warning:aa,editor:ia},oa={docked:"На базе",edgecut:"Обрезка кромки",error:"Ошибка",escaped_digital_fence:"Вышел за цифровой забор",idle:"Ожидание",initializing:"Инициализация",locked:"Заблокирован",mowing:"Стрижка",offline:"Не в сети",paused:"Пауза",rain_delay:"Задержка из-за дождя",returning:"Возвращается",searching_zone:"Поиск зоны",starting:"Запуск",unavailable:"Недоступен",unknown:"Неизвестно",zoning:"Обучение зонам"},na={next_scheduled_start:"Следующий запуск",party_mode:"Режим сна",zone:"Зона"},sa={name:"Landroid Card",description:"Landroid Card позволяет управлять роботы-газонокосилкой.",not_available:"Газонокосилка недоступна"},la={config:"Конфигурация",edgecut:"Обрезка кромки",locate:"Найти",lock:"Блокировать",multizone_distances:"Задать дистанцию зон",multizone_probabilities:"Задать частоту стрижки зон",ots:"Запуск одноразовой стрижки",pause:"Пауза",partymode:"Сон",raindelay:"Задать задержку после дождя",dock:"На базу",restart:"Перезапустить",resume:"Продолжить",schedule:"Задать/изменить план стрижки",setzone:"Задать зону",start_mowing:"Запуск",stop:"Стоп",timeextension:"Увеличить время стрижки",torque:"Задать крутящий момент колеса"},da={battery_low:"Низкий заряд батареи",battery_temperature_error:"Ошибка температуры батареи",battery_trunk_open_timeout:"Тайм-аут открытия отсека батареи",blade_height_adjustment_blocked:"Регулировка высоты лезвия заблокирована",blade_motor_blocked:"Мотор лезвия заблокирован",camera_error:"Ошибка камеры",charge_error:"Ошибка зарядки",charging_station_docking_error:"Ошибка стыковки с зарядной станцией",close_door_to_go_home:"Закройте дверь для возврата домой",close_door_to_mow:"Закройте дверь для кошения",excessive_slope:"Обнаружен чрезмерный уклон",hbi_error:"Ошибка HBI",headlight_error:"Ошибка переднего фонаря",insufficient_sensor_data:"Недостаточно данных с датчиков",lifted:"Поднят!",locked:"Косилка заблокирована",map_error:"Ошибка карты",mapping_exploration_failed:"Исследование карты не удалось",mapping_exploration_required:"Требуется исследование карты",missing_charging_station:"Отсутствует зарядная станция",missing_entity:"Объект является обязательным полем!",no_error:"Ошибок нет",ota_error:"Ошибка OTA",outside_wire:"За пределами провода",rain_delay:"Активна задержка из-за дождя",reverse_wire:"Провод перевёрнут",rfid_reader_error:"Ошибка считывателя RFID",timeout_finding_home:"Тайм-аут при поиске дома",training_start_disallowed:"Запуск обучения запрещен",trapped:"Застрял",trapped_timeout:"Тайм-аут, пока был застрявшим",unknown:"Неизвестно",unreachable_charging_station:"Зарядная станция недоступна",unreachable_zone:"Зона недоступна",upside_down:"Косилка перевернута",wheel_motor_blocked:"Мотор колеса заблокирован",wire_missing:"Провод отсутствует",wire_sync:"Синхронизация провода"},ca={actions_array:"ВНИМАНИЕ: 'actions' зарезервированы для переопределения действий по умолчанию для существующих кнопок. Если вы намеревались добавить дополнительные действия, вместо этого используйте опцию 'shortcuts'."},ba={image_left:"Изображение слева",image_left_aria_label_on:"Изображение слева",image_left_aria_label_off:"Изображение сверху",image_size:"Размер изображения (Опциональное)",compact_view:"Компактный просмотр",compact_view_aria_label_on:"Включить компактный просмотр",compact_view_aria_label_off:"Выключить компактный просмотр",show_name:"Показывать название",show_name_aria_label_on:"Показать название",show_name_aria_label_off:"Скрыть название",show_status:"Показать статус",show_status_aria_label_on:"Показать статус",show_status_aria_label_off:"Скрыть статус",show_toolbar:"Показывать панель действий",show_toolbar_aria_label_on:"Показать панель действий",show_toolbar_aria_label_off:"Скрыть панель действий",show_animation:"Анимировать действия",show_animation_aria_label_on:"Включить анимацию",show_animation_aria_label_off:"Отключить анимацию",code_only_note:"Внимание: Опции 'actions', 'shortcuts' и 'stats' доступны исключительно через редактор кода."},ua={status:oa,attr:na,common:sa,action:la,error:da,warning:ca,editor:ba},ma={docked:"Zasidrano",edgecut:"Rezanje robov",error:"Napaka",escaped_digital_fence:"Pobegla digitalna ograja",idle:"Nedejaven",initializing:"Inicializacija",locked:"Zaklenjeno",mowing:"Košnja",offline:"Brez povezave",paused:"Zaustavljeno",rain_delay:"Dežna zamuda",returning:"Vrnitev domov",searching_zone:"Iskanje območja",starting:"Začetek",unavailable:"Nedostopno",unknown:"Neznano",zoning:"Območje"},ha={next_scheduled_start:"Naslednji načrtovani začetek",party_mode:"Način zabave",zone:"Cona"},pa={name:"Landroid Card",description:"Kartica Landroid vam omogoča nadzor vaše robotske kosilnice.",not_available:"Kosilnica ni na voljo"},ga={config:"Konfiguracija",edgecut:"Rezanje robov",locate:"Poiščite kosilnico",lock:"Zaklepanje",multizone_distances:"Nastavite večconsko razdaljo",multizone_probabilities:"Nastavite večconske verjetnosti",ots:"Zaženite enkratni razpored",pause:"Pavza",partymode:"Zabavni način",raindelay:"Set rain delay",dock:"Dok",restart:"Restart",resume:"Nadaljuj",schedule:"Nastavite ali spremenite urnik kosilnice",setzone:"Nastavite cono",start_mowing:"Začetek",stop:"Stop",timeextension:"Nastavite podaljšanje časa",torque:"Nastavite navor kolesa"},_a={battery_low:"Battery low",battery_temperature_error:"Battery temperature error",battery_trunk_open_timeout:"Časovna omejitev odprtega prtljažnika baterije",blade_height_adjustment_blocked:"Blade height adjustment blocked",blade_motor_blocked:"Blade motor is blocked",camera_error:"Camera error",charge_error:"Error charging",charging_station_docking_error:"Charging station docking error",close_door_to_go_home:"Close door to go home",close_door_to_mow:"Close door to mow",excessive_slope:"Excessive slope detected",hbi_error:"HBI error",headlight_error:"Headlight error",insufficient_sensor_data:"Insufficient sensor data",lifted:"Dvignjen!",locked:"Mower is locked",map_error:"Map error",mapping_exploration_failed:"Mapping exploration failed",mapping_exploration_required:"Mapping exploration required",missing_charging_station:"Missing charging station",missing_entity:"Določanje entitete je obvezno!",no_error:"No error",ota_error:"OTA error",outside_wire:"Outside wire",rain_delay:"Rain delay active",reverse_wire:"Wire is reversed",rfid_reader_error:"RFID reader error",timeout_finding_home:"Timed out while finding home",training_start_disallowed:"Training start disallowed",trapped:"Ujet",trapped_timeout:"Timed out while trapped",unknown:"Unknown",unreachable_charging_station:"Unreachable charging station",unreachable_zone:"Unreachable zone",upside_down:"Mower is upside down",wheel_motor_blocked:"Wheel motor is blocked",wire_missing:"Wire missing",wire_sync:"Wire sync"},fa={actions_array:"OPOZORILO: »dejanja« so rezervirana za preglasitev privzetih dejanj za obstoječe gumbe. Če ste želeli dodati dodatna dejanja, namesto tega uporabite možnost »bližnjice«.."},va={image_left:"Image on the left",image_left_aria_label_on:"Image on the left",image_left_aria_label_off:"Image from above",image_size:"Image size (Optional)",compact_view:"Kompakten pogled",compact_view_aria_label_on:"Vklopi kompaktni pogled",compact_view_aria_label_off:"Izklopi kompaktni pogled",show_name:"Prikaži ime",show_name_aria_label_on:"Vklopi prikazno ime",show_name_aria_label_off:"Izklopi prikazno ime",show_status:"Prikaži stanje",show_status_aria_label_on:"Vklop stanja prikaza",show_status_aria_label_off:"Izklop stanja prikaza",show_toolbar:"Prikaži orodno vrstico",show_toolbar_aria_label_on:"Vklopite orodno vrstico zaslona",show_toolbar_aria_label_off:"Izklop orodne vrstice zaslona",show_animation:"Prikaži animacijo",show_animation_aria_label_on:"Vklopi animacijo",show_animation_aria_label_off:"Izklopi animacijo",code_only_note:"Opomba: Nastavitev 'actions', 'shortcuts' in možnosti 'stats' so na voljo izključno z urejevalnikom kod."},ka={status:ma,attr:ha,common:pa,action:ga,error:_a,warning:fa,editor:va},ya={docked:"Dockad",edgecut:"Kantklippning",error:"Fel",escaped_digital_fence:"Escaped digital fence",idle:"Inaktiv",initializing:"Initialiserar",locked:"Låst",mowing:"Klipper",offline:"Offline",paused:"Pausad",rain_delay:"Regnfördröjning",returning:"Återvänder hem",searching_zone:"Sökning i zon",starting:"Startar",unavailable:"Unavailable",unknown:"Okänd",zoning:"Zonindelning"},za={next_scheduled_start:"Nästa schemalagda start",party_mode:"Partyläge",zone:"Zon"},wa={name:"Landroid Card",description:"Landroid card ger dig möjlighet att kontrollera din robotgräsklippare.",not_available:"Gräsklippare är inte tillgänglig"},Sa={config:"Configuration",edgecut:"Kantklippning",locate:"Hitta gräsklippare",lock:"Lås",multizone_distances:"Set multizone distance",multizone_probabilities:"Set multizone probabilities",ots:"Start One-Time-Schedule",pause:"Pausa",partymode:"Partyläge",raindelay:"Set rain delay",dock:"Docka",restart:"Restart",resume:"Fortsätt",schedule:"Set or change the schedule of the mower",setzone:"Set zone",start_mowing:"Starta",stop:"Stoppa",timeextension:"Set time extension",torque:"Set wheel torque"},ja={battery_low:"Battery low",battery_temperature_error:"Battery temperature error",battery_trunk_open_timeout:"Battery trunk open timeout",blade_height_adjustment_blocked:"Blade height adjustment blocked",blade_motor_blocked:"Blade motor is blocked",camera_error:"Camera error",charge_error:"Error charging",charging_station_docking_error:"Charging station docking error",close_door_to_go_home:"Close door to go home",close_door_to_mow:"Close door to mow",excessive_slope:"Excessive slope detected",hbi_error:"HBI error",headlight_error:"Headlight error",insufficient_sensor_data:"Insufficient sensor data",lifted:"Upplyft",locked:"Mower is locked",map_error:"Map error",mapping_exploration_failed:"Mapping exploration failed",mapping_exploration_required:"Mapping exploration required",missing_charging_station:"Missing charging station",missing_entity:"Entitet krävs",no_error:"No error",ota_error:"OTA error",outside_wire:"Outside wire",rain_delay:"Rain delay active",reverse_wire:"Wire is reversed",rfid_reader_error:"RFID reader error",timeout_finding_home:"Timed out while finding home",training_start_disallowed:"Training start disallowed",trapped:"Fastnad",trapped_timeout:"Timed out while trapped",unknown:"Unknown",unreachable_charging_station:"Unreachable charging station",unreachable_zone:"Unreachable zone",upside_down:"Mower is upside down",wheel_motor_blocked:"Wheel motor is blocked",wire_missing:"Wire missing",wire_sync:"Wire sync"},Ea={actions_array:"VARNING: 'actions' är reserverat för att åsidosätta standardåtgärder för existerande knappar. Om din avsikt var att lägga till ytterligare åtgärder, använd alternativet 'shortcuts' istället."},xa={image_left:"Image on the left",image_left_aria_label_on:"Image on the left",image_left_aria_label_off:"Image from above",image_size:"Image size (Optional)",compact_view:"Kompakt vy",compact_view_aria_label_on:"Slå på kompakt vy",compact_view_aria_label_off:"Slå av kompakt vy",show_name:"Visa namn",show_name_aria_label_on:"Slå på visning av namn",show_name_aria_label_off:"Slå av visning av namn",show_status:"Visa status",show_status_aria_label_on:"Slå på visning av status",show_status_aria_label_off:"Slå av visning av status",show_toolbar:"Visa verktygsfält",show_toolbar_aria_label_on:"Slå på visning av verktygsfält",show_toolbar_aria_label_off:"Slå av visning av verktygsfält",show_animation:"Visa animation",show_animation_aria_label_on:"Slå på animation",show_animation_aria_label_off:"Slå av animation",code_only_note:"Obs: Inställningsalternativ till 'actions', 'shortcuts' och 'stats' är endast tillgängliga via kodeditorn."},Ua={status:ya,attr:za,common:wa,action:Sa,error:ja,warning:Ea,editor:xa};const Va="en",qa={image:"default",image_size:"4",show_animation:!0,show_status:!0,show_toolbar:!0};var Oa={cs:Object.freeze({__proto__:null,action:Ue,attr:Ee,common:xe,default:Ze,editor:Oe,error:Ve,status:je,warning:qe}),da:Object.freeze({__proto__:null,action:Ne,attr:Re,common:Te,default:Ae,editor:Ce,error:Ke,status:Me,warning:Ie}),de:Object.freeze({__proto__:null,action:Ye,attr:Je,common:Ge,default:Pe,editor:Fe,error:Be,status:We,warning:Le}),en:Object.freeze({__proto__:null,action:Qe,attr:De,common:Xe,default:at,editor:tt,error:$e,status:He,warning:et}),et:Object.freeze({__proto__:null,action:nt,attr:rt,common:ot,default:ct,editor:dt,error:st,status:it,warning:lt}),es:Object.freeze({__proto__:null,action:ht,attr:ut,common:mt,default:ft,editor:_t,error:pt,status:bt,warning:gt}),fr:Object.freeze({__proto__:null,action:zt,attr:kt,common:yt,default:Et,editor:jt,error:wt,status:vt,warning:St}),hu:Object.freeze({__proto__:null,action:qt,attr:Ut,common:Vt,default:Rt,editor:Mt,error:Ot,status:xt,warning:Zt}),it:Object.freeze({__proto__:null,action:It,attr:Nt,common:Kt,default:Jt,editor:Wt,error:Ct,status:Tt,warning:At}),nl:Object.freeze({__proto__:null,action:Lt,attr:Yt,common:Bt,default:Dt,editor:Ht,error:Ft,status:Gt,warning:Pt}),pl:Object.freeze({__proto__:null,action:ea,attr:Qt,common:$t,default:ra,editor:ia,error:ta,status:Xt,warning:aa}),ru:Object.freeze({__proto__:null,action:la,attr:na,common:sa,default:ua,editor:ba,error:da,status:oa,warning:ca}),sl:Object.freeze({__proto__:null,action:ga,attr:ha,common:pa,default:ka,editor:va,error:_a,status:ma,warning:fa}),sv:Object.freeze({__proto__:null,action:Sa,attr:za,common:wa,default:Ua,editor:xa,error:ja,status:ya,warning:Ea})};function Za(e,t,a){const[i,r]=e.toLowerCase().split(".");let o;try{o=JSON.parse(localStorage.getItem("selectedLanguage"))}catch(e){console.warn(e),o=localStorage.getItem("selectedLanguage")}const n=(o||navigator.language.split("-")[0]||Va).replace(/['"]+/g,"").replace("-","_");let s;try{s=Oa[n][i][r]}catch(e){console.warn(e),s=Oa[Va][i][r]}return void 0===s&&(s=Oa[Va][i][r]),void 0===s?r:(s=s.replace(t,a),s)}const Ma=o`
  :host {
    --lc-background: var(
      --ha-card-background,
      var(--card-background-color, white)
    );
    --lc-primary-text-color: var(--primary-text-color);
    --lc-secondary-text-color: var(--secondary-text-color);
    --lc-icon-color: var(--secondary-text-color);
    /* --lc-toolbar-background: var(--lc-background); */
    --lc-toolbar-text-color: var(--secondary-text-color);
    --lc-toolbar-icon-color: var(--secondary-text-color);
    --lc-divider-color: var(--entities-divider-color, var(--divider-color));
    --lc-spacing: 10px;
    display: flex;
    flex: 1 1 0%;
    flex-direction: column;
    background: var(--lc-background);
    box-shadow: var(--ha-card-box-shadow, none);
    box-sizing: border-box;
    border-radius: var(--ha-card-border-radius, 12px);
    border-width: var(--ha-card-border-width, 1px);
    border-style: solid;
    border-color: var(--ha-card-border-color, var(--divider-color, #e0e0e0));
    transition: all 0.3s ease-out 0s;
    position: relative;
  }

  ha-card {
    height: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    background: var(--lc-background);
    /* flex: 1;
    position: relative;
    overflow: hidden; */
  }

  .preview {
    /* background: var(--lc-background); */
    position: relative;
    text-align: center;

    &.not-available {
      filter: grayscale(1);
    }
  }

  .tips {
    display: flex;
    gap: var(--lc-spacing);
    flex-grow: 1;
    flex-wrap: wrap;
    padding: var(--lc-spacing);
    justify-content: space-between;
    align-items: baseline;

    & .tip {
      cursor: pointer;
      & div {
        display: inline-block;
        vertical-align: middle;
        padding: 0 1px;
      }
      & state-badge {
        width: unset;
      }
    }
  }

  .camera {
    max-width: 95%;
    image-rendering: crisp-edges;
    cursor: pointer;
  }

  @keyframes mowing {
    0% {
      transform: rotate(0) translate(0);
    }
    5% {
      transform: rotate(0) translate(0, -5px);
    }
    10% {
      transform: rotate(0) translate(0, 5px);
    }
    15% {
      transform: rotate(0) translate(0);
    }
    /* Turn left */
    20% {
      transform: rotate(10deg) translate(0);
    }
    25% {
      transform: rotate(10deg) translate(0, -5px);
    }
    30% {
      transform: rotate(10deg) translate(0, 5px);
    }
    35% {
      transform: rotate(10deg) translate(0);
    }
    40% {
      transform: rotate(0) translate(0);
    }
    /* Turn right */
    45% {
      transform: rotate(-10deg) translate(0);
    }
    50% {
      transform: rotate(-10deg) translate(0, -5px);
    }
    55% {
      transform: rotate(-10deg) translate(0, 5px);
    }
    60% {
      transform: rotate(-10deg) translate(0);
    }
    70% {
      transform: rotate(0deg) translate(0);
    }
    /* Staying still */
    100% {
      transform: rotate(0deg);
    }
  }

  @keyframes returning {
    0% {
      transform: rotate(0);
    }
    25% {
      transform: rotate(10deg);
    }
    50% {
      transform: rotate(0);
    }
    75% {
      transform: rotate(-10deg);
    }
    100% {
      transform: rotate(0);
    }
  }

  .landroid {
    display: block;
    max-width: 90%;
    max-height: 400px;
    image-rendering: crisp-edges;
    margin: var(--lc-spacing) auto;
    cursor: pointer;
    filter: brightness(0.9);
  }

  .landroid.on,
  .landroid.auto,
  .landroid.edgecut,
  .landroid.mowing,
  .landroid.starting,
  .landroid.zoning {
    animation: mowing 5s linear infinite;
  }

  .landroid.initializing,
  .landroid.returning,
  .landroid.searching_zone {
    animation: returning 2s linear infinite;
  }

  .landroid.idle,
  .landroid.paused {
    opacity: 100%;
  }

  .landroid.docked,
  .landroid.rain_delay {
    opacity: 50%;
  }

  .landroid.offline,
  .landroid.error,
  .landroid.escaped_digital_fence {
    opacity: 25%;
  }

  .fill-gap {
    flex-grow: 1;
  }

  .status {
    display: flex;
    align-items: center;
    justify-content: center;
    direction: ltr;
    cursor: pointer;
  }

  .status-text {
    color: var(--lc-secondary-text-color);
    /* white-space: nowrap; */
    text-overflow: ellipsis;
    overflow: hidden;
    margin-left: calc(28px + var(--lc-spacing)); /* size + margin of spinner */
  }

  .status ha-circular-progress {
    --mdc-theme-primary: var(--lc-secondary-text-color) !important;
    margin-left: var(--lc-spacing);
  }

  .landroid-name {
    text-align: center;
    font-weight: bold;
    color: var(--lc-primary-text-color);
    font-size: 16px;
    cursor: pointer;
  }

  .not-available .offline {
    text-align: center;
    color: var(--lc-primary-text-color);
    font-size: 16px;
  }

  .metadata {
    margin: var(--lc-spacing) auto;
  }

  .stats {
    border-top: 1px solid var(--lc-divider-color);
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    color: var(--lc-secondary-text-color);
  }

  .stats-block {
    cursor: pointer;
    margin: var(--lc-spacing) 0px;
    padding: 0px 2px;
    text-align: center;
    border-right: 1px solid var(--lc-divider-color);
    flex-grow: 1;

    &:last-of-type {
      border-right: 0px;
    }
  }

  .stats-value {
    /* font-size: 20px; */
    color: var(--lc-primary-text-color);
  }

  .stats-subtitle {
    font-size: 12px;
    /* color: var(--lc-primary-text-color); */
  }

  ha-icon {
    color: var(--lc-icon-color);
    cursor: pointer;
  }

  .toolbar {
    /* background: var(--lc-toolbar-background); */
    min-height: 30px;
    display: flex;
    flex-direction: row;
    flex-flow: row wrap;
    flex-wrap: wrap;
    justify-content: space-evenly;
    padding: 5px;
    border-top: 1px solid var(--lc-divider-color);
  }

  .toolbar ha-icon-button {
    color: var(--lc-toolbar-text-color);
    flex-direction: column;
    width: 44px;
    height: 44px;
    --mdc-icon-button-size: 44px;
  }

  .toolbar ha-button {
    color: var(--lc-toolbar-text-color);
    display: flex;
    align-items: center;
    margin-right: 10px;
    padding: 10px;
    /* padding: 15px 10px; */
    cursor: pointer;

    & ha-icon {
      margin-right: 5px;
      color: var(--lc-toolbar-icon-color);
    }
  }

  .toolbar ha-icon,
  .toolbar ha-icon-button ha-icon {
    color: var(--lc-toolbar-icon-color);
    display: flex;
  }
`;var Ra="1.2.4";const Ta=o`
  .entities {
    padding-top: 10px;
    padding-bottom: 10px;
    display: flex;
    justify-content: space-between;
  }

  .entities ha-formfield {
    display: block;
    margin-bottom: 10px;
    margin-left: 10px;
  }

  ha-textfield,
  ha-select {
    width: 100%;
  }

  .entities .column {
    width: 49%;
  }

  .side-by-side ha-formfield,
  .entities ha-form-string {
    width: 50%;
  }

  .side-by-side {
    display: flex;
    align-items: flex-end;
    padding-top: 10px;
    padding-bottom: 10px;
  }

  .option {
    display: flex;
    align-items: center;
  }
`;function Na(e){return"[object Object]"===Object.prototype.toString.call(e)}const Ka="lawn_mower",Ia="start_mowing",Ca="pause",Aa="dock",Wa="edgecut",Ja={[Ia]:{icon:"mdi:play",action:Ka+"."+Ia},[Wa]:{icon:"mdi:motion-play",action:"button.press"},[Ca]:{icon:"mdi:pause",action:Ka+"."+Ca},[Aa]:{icon:"mdi:home-import-outline",action:Ka+"."+Aa}},Ga="next_scheduled_start",Ya="rainsensor_remaining",Ba="battery",La="info",Fa="statistics",Pa={[Ba]:{labelPosition:1,visibility:!1,entities:["battery","battery_total_charge_cycles","battery_temperature","battery_voltage","battery_charging"]},[La]:{labelPosition:2,visibility:!1,entities:["rssi",Ya,"rainsensor_triggered",Ga,"pitch","roll","yaw","error","online","last_update"]},[Fa]:{labelPosition:0,visibility:!1,entities:["total_worktime","distance_driven","blades_total_on_time","blades_current_on_time","blades_reset_at","blades_reset_at_hours"]}},Ha="rain_delay",Da="mowing",Xa="docked",Qa="unavailable";class $a extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n          height: 4px;\n          overflow: hidden;\n        }\n\n        #progress {\n          width: 0;\n          height: 100%;\n          background-color: var(--mdc-theme-primary, #6200ee);\n          transition: width 0.3s ease;\n        }\n      </style>\n      <div id="progress"></div>\n    ',this.progressElement=this.shadowRoot.getElementById("progress")}static get observedAttributes(){return["progress"]}attributeChangedCallback(e,t,a){"progress"===e&&this.setProgressBarWidth(a)}setProgressBarWidth(e){const t=parseFloat(e),a=isNaN(t)?0:Math.min(100,Math.max(0,t));this.progressElement.style.width=`${a}%`}}customElements.define("lc-linear-progress",$a);const ei="landroid-card-editor";customElements.define(ei,class extends oe{static get styles(){return Ta}static get properties(){return{hass:{},config:{}}}setConfig(e){const t={...qa,...e},a=this.entities()||[];let i=!1;if(!t?.entity&&a.length>0&&(t.entity=a[0],i=!0),i){const e=[...this.entitiesForMower(t?.entity||"")];e.length>0&&(t.settings=e)}this.config=t}entitiesForMower(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.config.entity;if(!e)return[];return["select","switch","number","button"].flatMap(t=>Object.keys(this.hass.states).filter(a=>a.startsWith(`${t}.${e.split(".")[1]}`))).sort()}entities(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"lawn_mower";if(!this.hass||!this.hass.states)throw new Error("Home Assistant instance is not available");const t=Object.keys(this.hass.states).filter(t=>t.startsWith(`${e}.`));return"camera"===e&&t.unshift(""),t.sort()}firstUpdated(){this._firstRendered=!0}renderSwitch(e){return null==e?G:W`
      <ha-formfield
        .name=${e}
        label=${Za("editor."+e)}
        title=${Za("editor."+e+"_aria_label_"+(this.config&&this.config[e]?"off":"on"))}
      >
        <ha-switch
          @change=${this.configChanged}
          .checked=${!!this.config&&this.config[e]}
          .configValue=${e}
        >
          ${Za("editor."+e)}
        </ha-switch>
      </ha-formfield>
    `}renderSettings(){if(!this.config)return G;const e=(this.entitiesForMower()?["",...this.entitiesForMower()]:[""]).map(e=>W`
        <mwc-list-item .value="${e}">${e}</mwc-list-item>
      `);return(this.config.settings?[...this.config.settings,""]:[""]).map((t,a)=>W`
        <div class="entities">
          <ha-select
            label="${this.hass.localize("ui.components.entity.entity-picker.entity")}"
            .configValue="${"settings"}"
            data-index="${a}"
            .value="${t||""}"
            @selected="${this.configChanged}"
            @closed="${e=>e.stopPropagation()}"
          >
            ${e}
          </ha-select>
        </div>
      `)}render(){if(!this.hass||!this.config)return G;const e=this.entities().map(e=>W`
        <mwc-list-item
          .value="${e}"
          ?selected=${e===this.config.entity}
        >
          ${e}
        </mwc-list-item>
      `),t=this.entities("camera").map(e=>W`
        <mwc-list-item
          .value="${e}"
          ?selected=${e===this.config.camera}
        >
          ${e}
        </mwc-list-item>
      `),a=["1","2","3","4","5","6","7","8"].map(e=>W`
        <mwc-list-item
          .value="${e}"
          ?selected=${e===this.config.image_size}
        >
          ${e}
        </mwc-list-item>
      `);return W`
      <div class="card-config">
        <div class="entities">
          <ha-select
            label="${this.hass.localize("ui.components.entity.entity-picker.entity")}
              (${this.hass.localize("ui.panel.lovelace.editor.card.config.required")})"
            .configValue="${"entity"}"
            .value="${this.config.entity}"
            @selected="${this.configChanged}"
            @closed="${e=>e.stopPropagation()}"
          >
            ${e}
          </ha-select>
        </div>

        <div class="entities">
          <ha-select
            label="${this.hass.localize("ui.panel.lovelace.editor.card.generic.camera_image")}"
            class="column"
            .configValue="${"camera"}"
            .value="${this.config.camera}"
            @selected="${this.configChanged}"
            @closed="${e=>e.stopPropagation()}"
          >
            ${t}
          </ha-select>

          <ha-select
            label="${Za("editor.image_size")}"
            class="column"
            .configValue="${"image_size"}"
            .value="${this.config.image_size}"
            @selected="${this.configChanged}"
            @closed="${e=>e.stopPropagation()}"
          >
            ${a}
          </ha-select>
        </div>

        <div class="entities">
          <ha-textfield
            label="${this.hass.localize("ui.panel.lovelace.editor.card.generic.image_entity")}"
            class="textfield"
            .data="${this.config.image}"
            .configValue="${"image"}"
            .value="${this.config.image}"
            @change="${this.configChanged}"
          ></ha-textfield>
        </div>

        <div class="side-by-side">
          ${this.renderSwitch("show_animation")}
          ${this.renderSwitch("image_left")}
        </div>

        <div class="side-by-side">
          ${this.renderSwitch("show_name")} ${this.renderSwitch("show_status")}
        </div>

        <div class="side-by-side">
          ${this.renderSwitch("show_toolbar")}
          ${this.renderSwitch("compact_view")}
        </div>
        <h3>
          ${this.hass.localize("ui.panel.lovelace.editor.card.generic.entities")}
        </h3>
        ${this.renderSettings()}
      </div>
    `}configChanged(e){if(!(this.config&&this.hass&&this._firstRendered&&e.target))return;const{target:t}=e,a=t.value,i=t.getAttribute("data-index");if(t.configValue)if("settings"===t.configValue&&null!==i){const e=this.config.settings?[...this.config.settings]:[];""===a?e.splice(i,1):e[i]=a,0===e.length?delete this.config.settings:this.config={...this.config,settings:e}}else""===a?delete this.config[t.configValue]:this.config={...this.config,[t.configValue]:void 0!==t.checked?t.checked:a};de(this,"config-changed",{config:this.config})}}),function(e="ha-template"){customElements.get(e)||customElements.define(e,fe)}(),console.info(`%c LANDROID-CARD %c ${Ra}`,"color: white; background: #ec6a36; font-weight: 700; border: 1px #ec6a36 solid; border-radius: 4px 0px 0px 4px;","color: #ec6a36; background: white; font-weight: 700; border: 1px #ec6a36 solid; border-radius: 0px 4px 4px 0px;");customElements.define("landroid-card",class extends oe{static get properties(){return{hass:Object,config:Object,requestInProgress:Boolean,showConfigCard:Boolean}}static get styles(){return Ma}static async getConfigElement(){return document.createElement(ei)}static getStubConfig(e,t){return{entity:t.filter(e=>"lawn_mower"===e.split(".")[0])[0]||"",image:"default"}}get entity(){return this.hass?.states[this.config.entity]||void 0}get associatedEntities(){const{device_id:e}=this.hass.entities[this.config.entity];if(!e)return console.warn(`%c LANDROID-CARD %c ${Ra} `,`Entity ${this.entity.entity_id} doesn't have a device_id attribute or only the entity in device.`),{};return Object.values(this.hass.entities).filter(t=>t.device_id===e).map(e=>e.entity_id).reduce((e,t)=>(e[t]=this.hass.states[t],e),{})}get lang(){const e=localStorage.getItem("selectedLanguage");return(this.hass?.locale?.language||e||Va).replace(/['"]+/g,"").replace("_","-")}get RTL(){const e=this.hass.translationMetadata.translations[this.lang];return e?.isRTL?"rtl":"ltr"}get camera(){return this.hass?.states[this.config.camera]}get image(){const{image:e="default"}=this.config;return"default"===e?"data:image/svg+xml,%3c%3fxml version='1.0' encoding='UTF-8' standalone='no'%3f%3e%3c!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3e%3csvg version='1.1' id='Layer_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='490px' height='490px' viewBox='0 0 490 490' enable-background='new 0 0 490 490' xml:space='preserve'%3e %3cimage id='image0' width='490' height='490' x='0' y='0' href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAeoAAAHqCAQAAABhZMWxAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAAAmJLR0QA/4ePzL8AAAAHdElNRQfmBg4OCy3P43gYAACAAElEQVR42uzdd5wkVdUG4Kc6TA6bc87AknPOGRQQlCSCiKAiIEGSqKiIisongooZFBMGRAVFEElKBsk5xwU276Turvr%2bqOqemd1ZmLQ7vTBv/zZOd/WtW/e959wTGcQgBjGIQQxiEIMYxCAGsZoQDPQABrFK8c7PNxroIQ6ivzFI6jULQac/Oz69qMPvVvj/t7/eyq624p%2bDWAMwSOryRYCgE%2bEikbDHVwmkStdRuk73rxVfofjJ4u/RINHLFYOkLi8EpV8ro1xapQqVKpM/K1TKysoGWRVRuuO1gmyUCSpkZGVKtBQJoqggp01ePshHOTk5eW2lX21atcpp06pN20roG0h10g8GSV4mGCT1QKI4%2b13TocZQQzWoVRvURbVBrZqoOqgJaqKqoDaqjaqCGjWqo8qSNE6tcPVUSU53ftJhB2kdBVEUBoJQJNSqRbPmqDlqCZqjJi2Kv5ZZZpkmyyy10AKLUysT9V0p8oNYbRgk9WpCWmH52V5%2buafUmGCaKcEkY4OhQZ2aqEaVShVhpQoVCTU7/uqEQFR6S1AS%2bARC%2bZ4POQoEEUFEFAVR1Ba2Bm1ao5xWTZo1BYujN7zhda8Fr0eve8OyLlk%2bSPHVjEFSrw4U5WTnJZ9VH9RHNcFIU00LppgWjAuqVUVVUUWY7nyBlLQKWRlpWdmoSrVqDUZoNNRIWRmVUiJpZKVlRKWDeCD0ljZB8q%2b8EHkE8t6ywAJvWKRJs1Z5oYK8Nrl47B2QlhKgIJQwNCenTU5OLnjDs573XPScVy0JlkXNQVPU2uVMDJ7IVyEGSb1qEQgEQSHyAX%2b3LCUTVEQjjAnGRGOCKcE000wKGmSiIOykOlcZHg2TUaFao2HBWCNM0qBaLLIrZaRUqRCokl6OIdFKBhJL7Wi5h54TaUkO0s2aEo4u8bIXvOYtSzTLW2a%2bJbG8jyAlIy0VECoIhcUdKxKK0s3mRS97NXrFy9FrXve6NyyS66AwpJJ3D5K735EZ6AG8a1GSSIEgEw2dNCwzyVSTTDAuGGN0MCJKdVzPtUaZEI0KGtRpNNaMYIoKaVlVstLS0ontLEqYUPyztReDW36oRd2%2baCZPIS%2bU16JNq4IlnvakeRZYFiz0pnne0oqMjAqBdFStRmWwJFicXqJQr9705PLLgnnR68HrXo1eCF6IXvS6xRZpWm6eBtFvGJTU/Yvll%2bhws1JToxnBzHC6URo0qIx/kA4r1AZjTDbXKNXBECONM0qVlJS0oGTLKhK54xd0/vuK0rcnWJlLung2T5V%2bzyvICS0zL5Hir3jaS%2bZbJkqM7IE660czveYZL0SLNGtq37yWWmpp8KaXguc8Ez0bvZB6PrOsrX0oqWS3GkSfMEjq/kJsmyok/6owKdjYRqnZ0ZRwnFoVMgSqDQ1HGxVMt7aJQb1GQ4xQJUp8WB2lcNDh0sU/%2b0Le7iNKVPX47%2b2/B6VXUXduMd9Cb1rieQ95zqsWaJVRKWuiA0y3OJrnec9Fr3gtWBAsja8UatMWvJV6JXgpeiZ8OHrQs5aWvjIlaD%2byD6LnGCR13xEkFqgIKaNMtlVqh2BWMDw/RJbAULXGReubYZQpwWRV0upkRAiFJfEUrHDh1UPid0JHkrcTHCU/WqBgmWbLPOcZL3vCc161xDJTfcJG0saJPBs95UWPeyJYaImF8eXaUotTS6JXo/%2bFdwX/i14xX1tyaYNyu3cohzWz5qKjsp0KJkfr2Cq1k7lBTSGAWlNMsLmtjDHcMGkFKYSJKFrZBcsdXfMspShkIzlLzPOwazzmWQvxEVsYb4axqi31qmfd5BFvecFryefTkabwUXdE93jYYxaXLhuJ0iUVaBDvjDVjFZUjAkQBolrjg01sZlMbRtUgmhysb4rNbGiUBimRvHClcrdcJHLP0Fl%2bL4/YOr7EQs%2b5zSPu8RimWd9G1rKZiVhgsYf8x0uejh6xoDirgmfcG93tDo%2bV5HYwKLG7jzVvLQ08YmUb6k1LrRttZaNompGIKqNpwdY2DNY1R61KoZyCzrEiayaFu4POZ/FIJC0jEGoz3z0edIO7tWgwzSw7%2baChyGnyqic9Hj3oNi9HLbHQbwte8IT/BneHT05//oT8idIKsV9ukN7vgHfn6lp1iLVnQSqaYuv0ltFG4XSNsmnDwyl2CbYIJpikUZh4b4sH7ncvkVeGIsFjBqYTxfw1z3jIP/3PAil1tnGS2YZIaZO31IvecGd0veejt1LLoNkb6Ucq7x1210v3eiXxchd9e4NYCd5bK60viC1CBQy1frBnestwZjhCJmuiDaO5tglmGqpaqJAIkxWt1%2b81FINd4r/HVvO0nMXm%2bZ//uMszFpjoFFtZV5UWeVktFpjv9ugej3syeFNIq9fSz0R3h/9OPRC%2bhJjYgzJ7JXivrreeoqhyz7RTsGewWThMJXOtY1MbWV8NdDLmDE5sZ3TkX0qgoOAFj7rTHf4r7yN2savR8lqRlZf3hgc87H6PeRhaU0s9Hv7LLe6ywGDYykoxuPa6i7TN7R3sFm0gQ1W0g52C3U1WJVIoSeagS9fUIIqIlpPcFVotcZe/%2bYfnbGZnu9tIvSYh0tJCTZ7zb7dGt3ojntj5wX%2bjf/m7RwatZ11jcP29HYocHWnT4IBgp3AKwkn2DrYPtjVCpKDQoY7Be%2b3c3Dt0JHYkkJHS5lX/9kN3G2VDe9vXeJGcvJS0tMAi97kn%2brO7o0IKudQT0a3B1eF9Xk9MF4Myu4TBVbgypJIz2wQ7pvYNtiyMF1RF06MPBHsFa6tSSKw2g4TuHTpSW0LdN9zmMrdpNtqePm6OKkvE1sk49v1F90V/d0P0cipPlJrnrvAvbva0HNJJHM97HoMrsSsEUgoYZ5fUfsGWhdGC4TaM9g92N1qFfIf46EEy9w0d3WApWYs95Ndu9aysDznaplo1ySaznBFY4jl/dWP0QLAAqQXB/eH10TUe1YrUoF18kNRdIV5lw%2b0efDDYPBzDKNs7wM4aRR1yBwcJ3T/obCNPSct7xg1u9hdVjnKKyZYKFVPMAxm85Xo3utWTCJZ4ynXR1e5QGFTEB0m9POLVlfa%2b4HDbRCOkpkX72CHYynBtyfl5kMyrClESWxJIC7zkDtf6pRne5xxDNJd8WHFYS9Yij7jZDdHNQUibZ93gCv8Z6LsYeAyuTiQ5f0FNtAw2Ck4I9gxHMSL6mP2COarlBwm9WhB1yo1Ja3Gvy1xuvCN8ynCB1qTeYUz%2bCgUvuye6zHUKgSj9QuEfLvWgnPdwaOngCi0iNSr8evqoaZlDwyOiaZG6aC/HBJupkksUxEFCrx60x6IFUjJybnShO4zwUYeZqlWrTIf3pGXNc130U3dpDgKpVwpXucJ9mt%2brqvjgKpUSBjt4OXpylD2DI4Mtw8qUbaKjg/ep1ZYQeXCaVj/aT9kZza71Hbdb1yn2MtJiqVJuJpG0wHxXuTy6OyhIhdFjroiu8qjovWg6S/f9Ems6UkEUbWnZFq9%2bpuJThXWjzFwn%2bUKwhUC%2blC08KKMHCimRgrT17WCEO/3cAxqso2P8XkokVG1juwYTLfQSo4LNg7lSXtT03nt077kb7uL%2bI0Mc4XDrqRwVHRIcZl3kpAbjw8oARdt4QVbgLn/0E5HDnWWcZu3HoviUnVHhIVf7VfRYIPJ66h/hj93qPRac8t6W1DFrNwq%2bVvGxwvR0ejfnBUeYICdKKB0MUnqAEZSeQ6hgii1sZanfuNGWJiJfqpMa54HljLKFbYKx0QsW1kdz09tGdZ6wzHtod37P3GiXdx6p9sHUaeE6TIk%2bG%2bynEYWktvUgygdF41kogyUe8TGv%2b7LDDNOsvfZR0SWW1eY534l%2bHywUtPmXCypvbsm/V%2bT1e1VSBwRRMMNZqdPCyWn7uDDYS1Vpx1%2bTsGJpgpW/Ok/BmmMpaO86EolUmmY3b7jAnSaYrL3CW3vXhMAouwabeNrL6WhGeodcvRc75Ha9q/FeJTWpYJfo3OCDUX1jdHJwnmnaLN8pdqAQ9cLFGiSlhTPSMh1e6Q6vlFSpuVZvBdZA2hmKJQ8jbUba00hXulKrjdRpK6nhRRQw2y6qPBi1DAm2tpalXozbjry78R7Yt7q458hQh6Y%2bFa4l2sBpwV6qtEkPsOxqN/fEKFJw5e2z2pMYc5q0JK8oabATu4OyxbqISevLQEZGtRqVXZYhXv7a7X1ro1Ll0471XFb/EooSw1lGwa0udLNtfdUmliZhKUGnd1Vo9U8XRncoBMGz0WUu85x3eWDKe4zUGfnUp8PFEy87qeLwtlGZaD%2bnB%2btrE5YMY6sLHWOn2qt9Z1R1aJrSpEVBXkGo2ZMe8Zy3LLJYi0iznEioQKnYcNDhz%2bLdxNHUUXLuDJImPTEBslIKJSlfLaVCjXrDDDPGWubICqSlZWRVy5ZG31KqCNhx21l9dcnjxmSVXvJ9l6nxHftoEpXurmPQaYWn/Cr6kdcDi4N/Rhe5ebRFqZZ3rf/6vUXq2Ii6dnBOsE9YNzX6RPBBo%2bUpLfhVj/Z4qTBJXwhkSmThOW9pkrPM427ziIWWaJVVrUJGSrUqkSo1UirUqpKWVSObyOW4gFda0Y8bF//LJ03x4vfETfBy2qQVLJHTok0Bzdq0yssJRFq0aJWXUqPRRBvbzCgZlRpNUp%2bMOO7aUShtFauD2u20Tmtzv3Pd4geO0iYnrX3LLL4ro81/fDv6ZyCsfLT1ogt%2bfkXb/e/asJT3FqlTwmCT6GupnUIbBxfaPFFUV88ktCcjxOkIWYGCpXIWeN6rlmj1lOs8BapNVKPeSMMMMc4ko1VKqVQjlJEVSatQIZbwwdt%2b84o/DURyAnGDvFZhclYNtckroKDNa172mtc1e8t8i73lTVBvG5sbosZws4xUrUYGuSTtZXX5%2bIu27lec6g/O83ENWlfYWIrFGBa6yP9FTUGqKfyRr3t1tTz2AcB7i9RsG3zdllG0nQuCDbWspnixjt2psrJY5FmveMXjnvOWVz2vWYUGM00z2jBjzTRZIKNKRRISmVZUsztvEMXveKf76JgD3j6ezlbjjn8v1okItSWt8vIWedprXvGalz3lBa0yxplotElmGWO8ddSKtCWSu%2bP3rJp5jdsVVXjDl/3QB3zBHC2dPBjtrq6MlMudG70UZBWuDs9z17vzZP1eIXUgkrZn8KVoQ9EhwTmmyiVBoKuK0sUzXSgtm5TlaHO3uzzqRfMssEDBEBOsa4axJhptvGyikqeSzlphh4TD4q10vK3%2bGuvK/tXuTIpP3iEKCkILPed1CzzhXo9bhFrDTTbVHLubKj7U5JLwkFW1dRa7kGXkXOLL1vF9G2mig9GsSOyCQNZtvhb9M5JK3R5%2b0zWa331Gs/cGqVNCFT6UOjNcS/Tx4POGJy3XV9UExEstL1Ajo%2bANi/3TNZ60GJFaE61jQ5ONMNTIxBLd3iKvY4O8jhbq1W3KW7EjZnsvzKI0jLzpVfO94h7/84KlIpXG2sSHzDJUjYKlJJlV/T/%2bdlqn/Ny5qvzc1pq6UMKD5BS%2b0FdcGhWC9OOF77vcgndb0sd7g9RUOTJ1cjizyglOV6ttFYWYtEc%2b5VWoxRNecqsrPK/acGNNsrZ1zNKgRl2yzMIu11S5RZ4v7z2PSip7KtEsmi3xukc84HmveNp8Dfa3j9nmYImCdNIvs3/vq2gQC2Rd56uedJndLevSSRmr4W2%2b67vR60H6jcLPXOg1qUwYvmuYXT5rZlUi67jUqeGk0dEZwcdk5JNGyP2pvnYsoxeolrLM7zzsD54zzhzrWddYMwxXKUMHtboz1ow4r5WFx6TF3XxbPOcxT3rQQx43yUE2coAqea3L3V//3Gv7uTnraSe41y/tvoK0Lj7zUArXOyd6IEi3Fv7oXI%2b/m5Tw8l8/fb2/CMelPh%2bOHes8h8oLpfudOO0hGRVCTW50rYfdZoQ9bGVTIw1VlXiUw%2bS9xeG9Gx7B8pta8RS9wFvudb/fe8n2Nra/jVTJlcxo/S2vQ5EKTzvWY35pF81dnOaL46zyuE%2b4RUr637lTPnPv3cEt0btDD383rKi3v7vI4amvheOHRucHRyRGm/41MMUnuthD3OQG17vD89rsZS9zzVKZGLwKHb753ULm5WejI7VjcqcReN71rvRfQ6xlV7uYo1qoTf9GCBQDeSo86hiv%2bKE9NHWKM%2bv43rxaLzo1%2bmMUpNwy%2b/Nv3fLGu6TE8LtvZXW%2bu8CHgq9E0xrDL6SOESRxVf2FKPHzZtRa4gl/dZUXVFjLXraxthqFUmjlu7/nZedZ6WhaC6SlLPCoG/zFc%2bpt4wgbGCWnRTo5DPUXseOUjwd90ot%2bbldLVjhbt2/FleY702VhlHKnL/tHh%2brPazDezesrhf2D86LZtdHpwUnSyVmqf1B0kuQNlXOd3/qbrCk2sq%2bNNCShme14N0/0289S8W9paW3m%2b7s/ecibNnK0vY1Oyv/2p1kwEqryoI951S/suBKTGRRUWOZLfqBV6v7wy67yLmi79%2b7N0gpEtg%2b%2bFK1XFZ6ZOklG1E8SoV3JLKhW68%2b%2b7Fyv2dFHnO79ZqjsZM9%2bL9c4az/sxCWHAvU2sot1jPCyn7lFaG0NSS24ooTvy2wVz/Q5E2ziBpfb3IxSDlewwjsLKmwl425tY1IbRG96sI8DKAOs4cN/m/uKrJv6VrhjQ/rs4DgZYZcnq96hWJu6ynUucqPxDrGFdY1AoeTLfber2T1Dx37VKRnLvOgWl7vPpj7hQOl%2bLPJY9FxXu8eRQr%2bynlZdV7GJhFLa/Mzno2VB6qXwc36RxMyusXhXSuqqoDpqG5/6SrhnOnN2cFLJidEfMjqujFIh5WXHOV/kbJ%2b3s1mqFYQdspYGKd0R7RJbkjg5ygZ2s56b/NTNZpoiRdLtrm8bYpGROZOt43fus42hSe5aZxQLJWVtYmbwr7C5MdjKm/430LPVN7zrSJ0SBXtFe9XddnbF4YXKQ4PPqVCQ7geSxS6TvBoFDzjfp813rK/bUYMgSXhMDRL6bdGx7lsBjda3n5Fu9yPPG2q0Sjn6fFAqbq1t5qj1Q0ttraqTM7HjeOJv21gU3BCm6qzrZU%2bsyb6tdx2pI4LHM7cdF5yYr986%2bnowRr5fosdiSgfqPegiZ3jSgb5p/%2bQ8SOekiEGsDB0TR2KZXWcL%2b2jxJ78x30iThf2U3x6g1aZe9gsjbSzVhfej3cWYt5FXg/ulh1oreMHTAz1Tvce7jtQCUerg1BfCUTOjbwQbJpTu2/KIpUtBhZxfO931dnKujxqntbRM3svmsN6gPROsINRoF9t41R/cIGd9FQr6Gigbn94jKeu7wzXWM1O%2by403/pZQlW085MkoNTqa7mnPDPQc9RbvNlLHNu/zwxlDwwtSe8j1S35QXJ623qtO9T3TnepT1hOVaoP3b0DLewXFqLP4JF0wxXame8pvPGxjY%2bUSC0Vvn17x6nnDbeDvHrCf6i71tmIEXE69Td0ZvBymxpvhAa%2bU4onXKLy7SJ0SmR58OdoyFXwudVSy2/eFbkU7alqdG3zQ4z7lFNuo0yaOdB4kc9/QXrO7TZ05djDKtX5glPVUlDbl3s5y/HzaTDPVNyy200qj/qOE1sNt6K7gNelJZrjbvDWR1u8mUgciNcHpwQeDiuOCs6T7bCArUrpS5Hf2t6Nv2t%2bIxKXVn3FQ72V0LNcfGGZ9%2b5jni162tlEKoj4doOIrt1pblfNNtEnSv3TFURTHMN72bg1eD4NpRrvZ0jXvEb97SB2gIjjKp6Mhu7lAXZ8NZMX82yr3O8N5TvEls5IQiuVrhAyib2ifzUjaKDsZ6ueuNsGspDRib2e6%2bKwKNveg39nW%2bKR6W9DlOwMFE2zmd9oEa8m5S%2btAz05P8W4hdYAg2M/Z0eSh0deD9ZOM6d6fpovlgbKucpoXfMMn1Q62zFuFaNdy8zK2sbH7/cgym6rp0Fyn57MefyqvVoPfedYualcSMFwcQc546eD6QGC2ecHDQWHNetjvHlJHNg2%2bGs3lyOCIUmBiXygdClT6pdON9m37kKjzg81tVw2K5qrYIp43zQ6W%2bYlHbG5k0kW%2bN7Pebgab7gV/MsKmXZaGavduE9rcq%2b6Tro0me8qza9a5%2bt1Caob6RrATOwbnGt1BRe45ijHBaTV%2b7izb%2brxN5Uu7%2byCdVy2Kp9u8obbX4ErX2srIPkrruMr5VNd7wIYml5Jwu/r%2b2Gq%2bhwc8HqVHR6Pc5/U16bG/C0idlkpFkVOCj0bZ0cG3bJzEJPXFsBJKSbvYOU5wspkKJEa3NejZrrEoytaCtM2t7SaXWNc6Sf5176R1rIJP0OBHhthaZqVlGop28DqT/N3iIJgWVLlV85rz6N8FpI5SUWgbX02NqHKaDySOrN4bVuLcuxoXON/XfEJtYusexOpG3HB%2btm086LfmmpT8f%2b81sNBsD7vO1qaWmjgsj9hcl9JmqmHBdVFBNMer7ltzVPA1nNQpUfAh64186AsVW%2baDXXxRbRKy0FvEhelaXODHPu9o%2bWTnHjSMrW4U5zxnlD3c6CfWNyVJ%2bOjd9chrMMVFqm2ftDdauQoeyNvY88F9UVBhPXd6fqBnpLtYw0ktECz14iGLjw7rx/mqtTpEefUGsQc65wLfd5Jjk0LCg5QeGAQlVbjW7m52hW1NTkxmvXkicYrHBIv82EbmrMS1FaPYVnCGvwcLw9QQ492aXZhJPlPeWPNJHS1aa9Gp5gbOCg6R65MxKxIoqPV933GME2SSmhyDxrGBQrvRrNFObvATW5nQZcmD7iCSUlBpuqvc6/0rdW3F3xyfwica6i9BKkpNCdsOvWObtjuDTNkncK3ppKYi%2bEjqkKhqR18IqpPoo95Tuk2ja5zkQGerle/QbG0QA4NicmTOULu63hW2MyEpedDTJxMTtcUEeZeZauNOxSBXfHdcTXyGF90fSJn0wDN3Pi4qd0qv6SIoEFnPD2xZGf0q2Dtp%2bNb7AIWcOvfZ0za%2bbYxCr682iP5FsUJpped8ROBSM5Oo8J5fqVhAYXuL3GC0tpUWjI7fF6r0it08GaW4PjopekTZV0VZ0yV11hHBodIHBker1DF8oGcIkpijZ7zPbN81odQBapDSA4/ic8gZaYKfecYuXZY86M6V4rCiWq3%2boNGWb5MJVuwf1mqM6a4JWpgYNbk9aZVaxliTSR1gVupL0fghzgo2kC/9Z88R93Zo8gmLXGpW4hEdVLzLB8UCRbPxcw02Uwwp6Q2tC8a5ytN2N/xtwlAkteiazfWI/0VBxgQPezoo89StNZnUqVQUfSbYL0p9IPioCr33TscF8QLf8mtfsKtWwSClywzF7OvQZh52pXXMKqXW9vRKEYaY52rDbc7bnquLq2CiK4OWMBiqzq0WlTOlrcExFSlhuHlwcJgZYm8jSlU8e45YIat3jUvtb4%2bSn3uQ0uWHtFClM430VY/JrLQj2dsjDgM9WIPrPC0jepurFK3gazuIIBDs6UPT0vsoZ%2bqU78jeHgFqgk8GU0Vb275DMn1vLhXKetElxvm4UR1ijAdRXohEUpqt63wvuEQh0ad6%2bqziMJQZPuBud3QjiTYuN3y4YUEkqPCJyk0aCcp3019T1e%2b00B7BSVF9vdOCzZKQk95Mc6x6V7vI1T5tH6HB03S5oj3fai0t/s9s6/VKBY9P1XUqXKHS1uq6kSZSMNZbbpeJwmFv1j34D21R2S6RNVNSpxSMDI4wWrRhsGMS5dMb2Ro/3gpP%2bo0tHZicoQYpXb6In3Kzk%2b3vm16T7YUKHm8NS%2b3kg/7uBel3uEKcXFLjI9ZSkIqCvTMHKOPz2ZpJ6khg12i7KMj6mNFJjZPeubLijpW/8IZTjVboQ/DKIFYHYjdTXo1PesKFb%2bNnfjtEUkIZe2hzSym6f%2bXvDqQtsaH3iYKsqD7/4WB6l90BygJrIqkDkQk%2bGIwQzbFZHxI4IpGCBg/5scNspm2g72wQ3UTaUps7ys/8S4ZeyGrSljnApn7tlXfYGOJTd0qbQ0yJkz%2b3ivZLHC5liDWR1BG2t1kqxb7BJIU%2bmMhi7/QXpBwpO6h2rzGIjZtHGOcH3pDpZXpHXo3tPOD2JBz47RBJabK%2bvRSCoaGa4H3mpMrUmrrmkTrAaHsHo0Njgl2SPbb3/umMW13rZGtrVaYb7yBWQCCtyYZ2d7e/lBrv9fQaGU0%2bZZSfW/iO4SRB8v6TDRUGKdHGwS5hZXk6SdY8UsOWtsukInvYSL7XcjpKbv9cGzlQWGp1O4jyR7H7xtFqXeX1xNTVs6cX52yNtasHPN%2bNK8Tn8GmOszQYGamN3mdGedKnPEe1cgQidQ5MjQlU2kp1n5LmI2mPeMDuxiVJm4OSes1AkGRureOD7vMvvelrHYegtPq8110u945ej/jnrT5uiFxQyZbB9mF2oGeiK6x5pGZLO6ZTotk20XMTSRHxvlzpLCPtMNB3NYheIC5ncYI211v0jm6prhAXLhpnllvMk33HK8RBK8McZZlhkYroIKMHeha6wppF6kCkyqHGZqMgWDtJj%2bytnC6odqsnbGP22wb1D6I8EYjkjPIZf3NXN0xdXaOgwhEe81%2b6cYW4X8vu8oKggi1srwzVuzWL1CmRbe2eDhpU2dCQXruzoqQW2Z8ssLM64WBg6BqIQCjtMLWuLnU37Skiadtoc2tyAHtnc1nONBuhMVIVHKJe2dF6TSJ1oKAq%2bKCxVeHQYJx1pHoZ0B8vh0rPusdIG8sOJnCskQikLDPNx1zhXtlebsuhyWa7zbNJKcK3/0ZyxtjJfPUyUbS1PcvPE7omkRqpDezBWsEi080tFTLoOSKhKvd4wM4m9TKFbxADj7jg0B4qXZWYunoehJIz1PYe9r9uqfCBgipbqDI2qAkNcWDQUG60XpNIHUmH%2b0VjU9E0BVON0NsM6kgkrcXdWhLlu3fnsUEMNCJpS21lT7/wtEyP10MkkNdgR5G7Le6GCh8ItNjGtp42NyDYIdpskNS9RYDpqd2kd1AIsjbvk/JNhdfdaBPrJZ7usnoqg%2bgmillbR8gnjq2erYhiccGpJrkpSe14%2b5UQu8FG2NAbpqeCKBppe5XltYDWHFJHKXY3hS28pdFGSepFbyV11iP%2bZzfj%2b%2bDpHsTAI5LWajtz/NZrvUjuiDO0Z9rc495InFxvh9hDXrCZUZ43NxKldjKlvBS9NYXUAeH49C5h47qmBS%2bZZVQfT8KRx1XYXKoPNVMGMfCIaVhhK097MPE191RW5wwxR7PbtXQjqjCStsyeJnvd/oEgWNsm5eU8WVNIDVtFG0ntquANu2jQ26bBkUiFeX5mM2v3qaH5IMoBsediGwX/0NqrauApoU0Nd682unWqJmVj8zQH0xQag50MGehZ6Ig1hdSRumCbcHS9XTyI9fS%2bzGCcm9XiAVsYNkjqNR5xZNm6xrjHG1I9ltVx/tXOZnvMm91S4OP2eR%2bTFzowEqTXN22gZ6Ej1gxSpzA52FJ2i2hTT5qQxJL1NkA0peB3Rto9aWhaRprTIHqMuC7JeBt40e2JOt6TbTqu%2bV5tvOc9pDuBx4FAm3UM8YDhQUp%2bhg3KSTKsCaQORATbhNMzdtHiWTuZJOzDSTgQ%2bq45ZpQa4A1izUYkZS%2bL3JtoXj31VqeEdsbT3fx0vGb28Kix1qYxtaEGZWNvXRNITWSIHQwbF%2b0TXOcJG0r1oZZMJO0pS%2b1tuPxguuW7ADHFtjLUQ17uRWpHJK3Z4Rrd283e8nFO2PFe8qrZsHGpeXYZYE0gdYC50SbMNttrKszpQ6x2JFTh%2b7K2T5Ity2R7HUSfEGq0kUdKvuaeWsBDtYZ4IDlVv7MCTmSYtHvMjNLC2cHs8uFS2QxkpQhEgmAbUzPR3kHoARuY3scs6sD9xhidBBYOYs1HJKfBnl7ykrfruLHyzwcKdjbfwm4XR8ob4v0eNDYYQWO0vqoef%2b0qwppB6jHRXtJj7OZR19goCezsbcx3pWe9alND%2blAIaRD9iygxWIalV9QjE2Zc8GK2lAcs7ka21YqfD0Q%2b5i23dVMLjOTV%2bZAnFUwMpYINVZdLzbLyJzWsm9pctJdZXrTE2tJ9CBAtqPAX86yvqptXKC63Qo%2bX2iC6gyhRl/MiGVlZWRmRQtLXsjuzHddBmWhd/9PUC1LHT3isgts0dVMBjzBc3iITEE0ztlw6V5c/qUPpYN%2boIm2bIO11Dbbsw1k4Ekp5TNra3fRIQg6VqmWRlxMm1B4kd19RJHROSoMKyyy2wEJNKjWoUEjkZnfs0U2meZ%2bHze9VYaq4PuksTyZVVN7p87EjbIqJnjZVIBhnne0NKwvF751TSAcWgcjY1G4Fm9pSsz%2bba3JSJLDniAsYveVpc8xIcrNW3sQ0/vpQoFGTZ%2bXUGKERkeYVkvLL4mmuQSjObySvUp357nWXuyzTpMIw61jXWqZp01pKiXynCmKRceZ73Nq9Ku%2bf1%2bAYX/aa8d7Z1x1JWWa6Q/3Oqakh0aLGaN1Nf/uC%2bQM9scqf1BHBNsaxXTDd826yh2wSeNKbSs8FtW72oN1UvMOJOv5JQY0lLnODZ%2bVVGW2c4daxgyEirYlCPkjonqF9xiIZtR53rVs8ZJkaw7HUXX6vwVw7%2bpBpWrqxicfvmKza873S4gIFGZtb7H827Mb6irO7IiM9a4RR4YJ0MPebQy0oB9truZOalF0KNcNsjhaLzFTVh4pikcBr5pnxjifqCAV17vcld0kZrcI8z3sL9YaZZAcHGSMtrS1pUh/0oqblew0xWQqolBb5n%2b%2b6xxuy9rKvoYZIa7HAa%2b71Lxf6tXO9X6jtHeY3kNJkK3Pdr7UXcQxB0rWDx%2bS6FZcWC4VGLDApeFy0VmZa4Z4BZ7RyJ3UgMjO9bj61lk3wkhrrSsvpHXVCaTlPy5itVn6l7yuepIe42ZHqHWsXQ6W0KXjR457ysEfc4XwjfNw%2bhhuBpXLSiTtlUHovj6j0Zx6NeNUTzvKoBms5wjamGpk8k3gO9/QR1/mbY/zEJaZaKkhMYF3PbUqroaa4yXNm9sJQFigYaZxn5FTJv6NuEEiJTFTlVVsH/2RKfop7BiX1OyEQ2TycEljPMDl/NcyYXkvDCBXmuddYo9%2bGePH/txniHvvZ2pnWTzr%2bBgLr2EmbZZ71jDs86iKn2txx5thERkGr/DssvvciYnNYKJBWh4f82zfNs66j7W6OYTLynaK5IpWmO9YH/M2F9vEDmydms7c/Mk3wppfM6vEqCdBssj3cYqFxuvf88iYY51GfCs7NqTBhwPmMcid1JJtaNxw6zN6qNbvTUNV9OFGHMhZ6zDRjrKxlbXH51bveR2zvmybIyXd6Z4VqI2xuf81e9gc3%2b6isD9ncpqYbrqCl5O18b6vk7bFdBSm18t5wp9v8zHy7%2bKatNKhUUJCjU8huKnFojXaMTZ1kH990kEpFt1FXTy6tYGc/96aM1h6bUuNYwwme9ahx3VpjcZfroR7VJCPHZJm3UQBXG8qZ1Cmh8daWmWAtBbxslhF0w2zSFeIFs8Cb9jdmpSUWgiTf%2bloft5mLjNbawc7dvkQjpDUYai2L3OdmV/ulCda1uW1sok6bKCnA8N6mdCQlUKXZNW52u7s0OtheNjZUqKCl9DSjTpI6nuu8nPX82lm%2bZKHjZIQrefqBQLPt1Lur1Gm85yNulPdaNz8dCNUZ7QFNRqZeEUyIGr018Ap4OZMapoczBJtHI4KCJZaZbGgfan0Hch7SZryqlZzLI4Sq3O80M51rlNYk2qj43s4mlIK8lKF2trOPedi1/u42l5lqNx9Rr1qoRdGI9t4hd1FHyatQqU2rX7nSQ5aZ44t2M0dGQVtSHKgrVbdom0iJtBnle870f8b4IAmtu/pMXp0q91uc1HLvCeInNBqvdPuzoWpDLdJmfPAKE4P61FuFgZ78MiZ1IJQO1o1GVdtZhbQ7pExMGs72Tv1OyXlUleGlcIYVl0UkY6HPyTnVbG1dLp9ibHGU/DTeIMabbFufcK9r3eerLrSjI61njIIlUom39b1A7PgJtalQZ6kH/cqvNBlpO%2b%2b3uTFS8loVt7q302XiJ52SU%2bFcaad7wYlJ9EDQxbsDkQYvWqhRz%2bO7ApEphnu5m20XYxfpaMu0WdtdUmMLdQNP6XImNTRE66sfZXYQSbtTYESfzqiB0PNGmJ3IgOWvEseJpV3kHmfZ6R2rogTJ70HiACuoNMdM%2b3rIbf7nLr%2b2ro/ZxdpYJChlEL07qd1u4c4JDDHfTS53paE2sYVtradBqJAcfYqz9/aIN9C0vDrnSfuWoY7sYLFY/t2B9VxtUVIBpaemsoIGwz3kTaO9Mz3jzWWsyDLrB0Sjquve7zcDrn%2bXL6kDce%2by9IxofJBX7QUZI9F7eRdY6lkTTO4yISR2alS7xQ8d5sPaz3Xd/7ZITqTaZrY030PucqsTjbe/ve2B5lKI6bvL8dUx2TGQVYeL/dGN1nGyzWxinIIoUbh77m6KVeusczX5mrXsoElsWFteh8o51NXdDPVc8R4KqjR63nxjun3XtTJeNTcQqU4PGVUGqQHlS%2bqIYKYJkSlJ0aG3VBkv28Gw0lME3vCyuaqSnT7o9HWBUErkS9Z2mvoehbgEHa5STP%2bot51tHO12f3OZX9nMbj5grEBe%2bC4rTBwIkZKStsxjfuU/breR79jFZFmFpKRf71x9xffnVPqcJ5zqx%2bZqW8mpen1tHrN9jzfNOKu6wWiPWtStT8YlqmtlzEvuf%2bmIiww8q8uV1IGIaLrR2WhDGYEWCwwxrk%2bFAgNvajFZ5QpXiRJVKuVTHvULo7X06gzcWaVsE6i3h1183C1%2b5PMutbH9bKdRpbYkWGVNltdFB2CkUkabN/3FVR60zFZ%2bZSvj5EuELr6/97GAKa3GONlxvuzbiQfDCs8xEHqqG/2mu0JBgwkKWrr9yUidCgvkEQqGp9P5AT9WlyupoS6YFVUODddJZaU8YKFpXcrY7iMwH9MTZ2LQ6SeRSJ2L/cxFttfWrUDBlX1L8YrxKS0UmGt973OLq9zsHyY50F6ma7BEKNPrbxpYxGPOC9VLe9MD/uov3jLcHg62mTp5rQnNej%2bb7bMaCaQ129OJznelE7tI7IltJVkva1XRY4kZyKkzUrPXdK%2bNfSzbq7WoiENTh%2bXT3TiMr2KUM6nHBnMiE4wUqvSSJsOT4fZeUr%2bg3qzEd9oRkUi1G3zR4Q4ulffv/SJs/3S8XeTljHeo/d3p725xgYvt4QD7KBrQ1ixix2PNCTTgQXf7o%2bvVW8/h9jJLlTCRdu2Sua93VzSZtTrBXX5gM1vIrUC9SMpQS%2bRV9oLURIbLejYp6//OY45Uy1oqq9EChspoWy2P4G1QzqQeHc1m42CEgsDrmgzpY/p35Fb1RloxGzuS9qZzTXKEqn7ugll0fuWF0ra2lcfc4RZ/9Uf72N8H0NRF8YXyoni0wr8zahX8zo3%2b6XmzfMQWdjRaoCCXREb39z0ULR/nOtAFfiOjsIKsptFCrep77NSKkk/XeEGL2m59IpLBMlkNFgiGRul%2bvuVeoFxJHWFmMDKKNtSoRWSBNjNV9TrVMSbNkxpWYiardoanfMUmSeeP/l2QReUxVMDa5trHI%2b7zO1f7pt0dZ1SS310s5ROVAiA6HxNW1/S326jbrdpxqEhKSiTtbj90r8dV2t1ZNjBJvbh%2bSWqVxb7H89hqLV92kO8nKvjyknqkF7T1wsoe32GDjFe1dit8JRCpUYtRJnleMEQ61QsPef%2biXEntmvT71s%2bnqqNhQRqBRfImq9Da6/N0JLLIVLWdLM9RcpL6k997v32kV5Fduiiv49DHwAg72sJBbnaFi3zfeAfb2lBjVEqpkBJ0qNc1EIWU4uYyaemEpAV5BQss9LrfucYSgU0cYzOT1SFMgnCKEXirZgOKr73UAU71VZvbMtF2259nynRPJSHYPTd0FgxXa0ESSdid0aSFlmg0AakhhcxAU7qMSb12NliLccYJpTV7Q52hfbKexqSYo7rDThoJtKn1lC%2ba6QRDSnU2VsWSbI8gJxTKGO/D9vCwv7nN95yr2lpmm2yyqYbIqlKpSqVKmQFRx9s0adIkZ6GnPel5d3tZ3mhzbG97UzVKJ%2bmUxUPNqk5giTtyhI7xN/9ntiGd0iQjgTHavGpyr0yqORMMsSRZLd2n9UiTENaPzMx2q4GV1mVL6u/UmMlapitIW%2bQtdWq6PdUrIpL2upyZqpPSdO3hBgVnaPE1U7UlsnRVLcp2x04xMSRvlLF2scwDbvSo5/zTW1pVqDPCGHVGqVerXrWUmtWWBFSpYLH5XvGa1y3ymryUiSbazma20qhRVXIPTaWNcHWkr0QkpYQO8yXXOLTTZhn/fZE3E0t4T59P3mg1XtBUCmF9%2b7EEWhRUqVGNKDu8ZlO3DrA9pDxJHYgunJUeypSgUUGFJd5UKZv8sDeIVLpRzuhOlulQhbyPucu3bdTBn7qqb6%2bojoeq3O1PmmzuUFtaaoEnPOcN873sZfM8JbJYs6wWBbWWrY75R6O0JWpUqDPU2vY13jBzTFErKyWr1Z/cbqEjbKkpIfPqmr2Yfu93pUttY0oSo1/8eYXQsl7mB%2bQMMdSzmpP%2b52%2bPSMpiSw1JhEEm81jtYwywV6s8SY2KDfNVjJRWkNJiieFq%2b3CmjKTcKTS0lI9dDNU83m2%2bYs/kRLi6HEtxPliFJ53tKVV%2b5Wt28RkTTVTQKrTAIsssVpDXIqVVqLIHYRF9GVtKlTgHKVBhiGFGyoqEMjIKWnzPL7xgiIybfNuuvbZ19H6ErWZ6v4v81knLGcWqFSzTu9i1QKRKzjyFbkjqQGCpnFrp2DiYCWrTA55SXbakzm8UVg43KzmzNFliah9JHXlehYZSyEKgoN6Z/uoLPtiF73rVohjB9kPz/Ei921zjF35qd2eZZBjqTFyN4%2bkuFnvJb3xTyhRH2MM4pzvNFdZKKnutHmrHqnXB0YljcG3NiVWegkBBUy/zqQOBSq1eE3Rriw%2bkZFQVYw0yUe1AU7p8SZ0O5gqmRxsGcUxtq2Wmqu81qWOpvMQQ1aX47EiFh/3WNg6SkrN6HYwRav3Ld3zbDgrWdYTHXO56G9rWZzR2o0rW6kagzS/82nA7%2bbBN1Uupc7oPutBFMol1f3XRmoKxznaiX/mCIXJJfEGlOoG8XJKJ15MRxe9skLJ4hajDlSHWpHKqAmSD6oGO/C5PUgcio6Mh1CVVtlmiyXiVfXRo5YxNLOjFhPrfWGI3tQqrcTlK7iltkbNt6SB5eSl1NrOeF1ztagcPfFhSF0grmOVkB1pbrZwQS21qZzf4t720rPY5bLW3eb5hvv1MNiwJe5kvUKteTnOnEXW3n%2bUQtEgnusc7ISUtU7T8p6Pq1TYBK0W5knpyUEuDyiRQZJ4WVX1YMrFa1WqauiRcIbajv6XC2jL9HEPWndEU1DrXY35mVJI8EirImOU0h7ktKalTTkgpGGlj01Ro1VzSIwKfcrvf2NCI1Zp7FutbOYfJ%2bqqrTTFKmxYFb2r1R002s71AmGTFdW82A1TJWZgEIXUHUaL3EWUMkrpLBJgc1TE2qEyiepYJuxW2tzJEMhZYZqrKTjUrAymNUqtV1Y0E8mrd7mf2s1Op10d8hmsTGOOg1Taano08JUyqfrZ3zcjZ0IF%2baHeHJNRZvbQOHGxtv3aneZpFshrN8oD71RptnG18wEhZ7U63d7rmcCktK62FtjzCpM9aLaJ0UDXwW3GZkjqYHNZWWluFJoG8t6TU9GGxhGrd6031iiES8eOt0eYxM/S0GELvUdQSci5V52jVWksJ/XEoabRc7dLyQpwC2e6Rjg2Mh7vSn2xj3GrVLoobYWRjMy1KDmdxQNFz7vOI5/zPrb5ipDN9SKpbRA0NwVJ5Fd0aRVpGhYIaFdrSqZpowFWsciR1RDAuqmgwVyqRDotVquuT7TvtWcsM63CNlND6Mu6392q22%2bYM8Tt/9EkbyHVo59a9Aj8Di%2bXLEAVotZYTfdatDteyGt2C7XlwbWrUdgr9nW1HBQs85gVP%2bY1vWM8GXRZWWP6aoUZBknHfnRVXUBAK1anSlomqVsutvy3Kj9SBgspoJA3R8KBYfaRFtYY%2bbYCRN%2bQ6XSOl2b6%2b5T/mGZuEka6OaKhIlVf90nAHqOwy4KW8ab38HQVCrT7s9y62gzE9OIv2x3cXYwxXDPcIZI02RkpK6ArzkiSZYjRhx3nuWJo4MiRpltz9QNFQwRB1FqeDqoGX1OXmNUkONcEQakt5MgXL1Gvsw2KJBBbL67iNBiJ1PuFR/yyFBK7qp1GsjvkHNzrCrD50BSsXxB7jNvW%2b6ik/lHmH1JMV28uHJVnX03bz8XdXJBHyK74qZWWQtYs2BZWlSPpKVapVSguWewKB0DC0dlPjiMeZljdCA%2blgUFKvBI3REGqT2mSBgqVqk0oWvU%2b8bJZOosdjxIrjga7wMzuZJLca1MYIGc/5mbXsrfJdQOp4HrOW2toBfmR3W2tOeop1vvMgSSiNY7crZFboIx3/PJc8ieAdvcxxkOZN5pWqtHb9rox5ml3pNbnSfOc0G2sLEzrcRfxnpFqgTT4pR/3Od5%2bSkTNKA6moKoVwQKV1%2bZE6wFBDGau2VN85Z4jGPirIrUnmaxFxoGaDC%2bzmAhfIdkgLWFWIF8lfPebr5ibhDWtSxZOV31VGk/Pc4AKzNCYaVjF9pVjYP1KpLvnMGxbKycuXaJ6WllFtuIbkc0vlpZM6bl23Xsi4yKXvEGkdJd9%2blb%2bVDJIZLZpV2M%2b5JnaqdRaJVMmq7AE14so24wxBqiI/4I%2bzLEkdDImGMEe9FgRaLShFfvc2%2bIS8hk6BpvHjbbWe85xpgjOSBP9VR7IoSRu82G72L93NgK%2bBPiNITtajHeNbrnGkZaWSivHWGSZlg%2be7xTxNXvAfz1isTZt8Mi9ZWTWGW8fmhqkzxWZgibBE7OVLRgTukPJ%2bE9%2bmIGU8tmYVHRpBtPqFtT3mP142NXEqtt9LnXQPn02QFF8krNgsXVf414AmX5YfqSMMU5U2Mwk8TFvsNVM6GEV6d9E21ctZ0ONHXHCUN3zPZId1wzraFwTyGpyhyfFGJ3lA7w4EiSPpSH9ymS1N61CkIFCL1/zIox5ylzYZ4022sRpVKtSpEGrRrFneEs/5l/kYYXuTbO99AqGW5MlFy9GaoQ63bQfFenkUJXUqUdLzav3Zz3zCoy5yn407Ff6PUCNK1O93rn0Sr8n2lNMok85kBjgcsNxIHQiJhsmk1SX5VGlN5pccFr0vkVDQsJznMb5WKO0znne%2b2Tbqde/r7qCgyl1%2b5OM209LNhIE1BYFQwUjHOdsNpif5XClN5vu1v3vNExrs6f2GGWeyWilpQcnOEclrEShoM98rXvGq6/3Bj0031QftZChJmEe7s6lodMu9DamL44vbI5FT7R5LTLG3//qJvcxKTvGxVkEoo7KbQqR4pi4inf1vVnKdgUK5kZpIOmiMUpWGKuYytWpT1yfbd0qgxTDVy9kv4nCPgkpf90Gf8n3rlVI7%2bp9uBRV%2bbLhjVVkm0yEBdE1Hsad3xr6u9Ae7mmOJx9ziag/LG2svnzfHnFLh3vZOJUVkVSUUmWB9kcAnPOYp1/uPfxtma3vYznCVmoXLGdGCFazYXaH93W/Kq/eMp833Y0drVCGQkk4IWkg2gO49m7DDqTzKpLPBACdflh%2bpqYjqpdIl23cgZ5lMLMR7hUhazkLDpZcjdfzI0vKGusBJTnSJ9bq03vYXUpo8YJgh2jS/C9rmFc1gbSoNFXnOEsO1uN2PXGeZUfZwkHWNkpUXJokqnZvWRiXZW5SVEBhiK9s62HNu9mc3%2brOJDvE%2bs6UsTeqltxO6J/1UmmRUecibql3ocrVqNWo0zCgjjNQmlO9Wmcui%2bk3sHw6y%2bQHn1IAPoAtUBA1RukpdUNzNc8Juhux1jUjGEksM69LxES%2bMVhu5yLFO9GMzSukK/Uu2tJwj3OUgB9nFNmbIaZIulVBas8hdNDrFDWvrLHCDf7teYLyvuFadbW1vB5NUiZK2eO2fDZM/ScuKOjkUU4kRs6CgTcpM0xzqPv9yky/7sUMcbF1L6LAVdB%2bxTlEp7VU5s6yrYIkllnpNs2at2hTc4za7J0p9xy1%2b%2bacUm9M6VL3LDDynBnwAyyEQqdAgVRtVBMUpLKCyDws%2bztBqTlrFr/jTGM3mutyxPuRKMyxbBWaslBab%2bZYv%2bLdf2ci2Drdx0tZVt05w5YKiCh23/q31mN%2b41f1qTfeGK1U5zO62NjQ58XZsuhNIqexwrVavqjCuw/%2bEWhVzn4pn4awtbeEwN7jKt1zpEz5VIlNviiHUSVmEub6hUYtF3rLEYs0WiTzvIm%2boUZOMp7kU597xKbU7wZT%2bHQySuktkNUgN01iSqwXU9kGSxeXhWlS9TYBCHIoy00990v6usL5llm8x31cEUppt7mJvuduNLvM7a/mUvZGSLxmByldmRx1kYzo5Hz/sfP/xlo2dZp4r1DjKrjYwLClUEJTkcSqRyM%2b70p3ma5YXadMirUZKoEKt8fa2p6y0LPLyCW3yIlN81C7u8RfnuMYXbZ1Yrnsa6RHKJifhOB0jq8HEUj2cKs/6lvN8XxzUe5xDk%2bdXtLYUkmxyyRWKR0WiTFJKbwBRjqSuiOoEY6KaUg5sgT6p37GMzHWSD51RLLbfYrKfOtoBfmnTpL9m/9Gr2JJ1hlk2drhn3erHjtDgWIcaoUZWqza97Q65atHeGyyrCksscrvTvaLGgfYz0WlusYvTzFRNKWcqo1KkyZuWutoPLUZe2jgTDTHWaDUKFnvdq97wrPtdIyNvfcdbxxD1qkVahWID1GRT7G1/X7ajbyZe6Pb2wO%2bMMLmLqiSsKUzo3f7ZvDwmmS6w2B8tdJ9lcja2U%2bIWqzJCJvne%2bPOBZI1mgvRAJ1%2bWI6kzQXVkmppOboaaPlyw6PgoRnB1hfhslNJmjMsc5jDftFuXXTJ6j%2bJVCgpSGmxsQ/u51W9d5Hw72tXWphmhYKny6q9VDJsJVauw2LPu9Q9/EZnraPsa5jcO0%2bBC71efSLFUctae71H/829/96YxxnufTY3QaKgGNWpKS7BZk2WWmG%2bJF9zoER%2b1xFw729Zc45NKqikFkaz9bOjbPqfZTBVJOaruaTjxk85qr2fQuUF9MZr7IB%2bT8pR/etpFJsq4nKT84gjHOF6jvPZjQvLp9MA33ilHUlcEFZHRsloTc1VIsq/2DrFCG3ZLTQu0GO4nPumzquyhud%2bjzIoKbKRNZKLD7ONu/3SXU42ys81tY0Ms7WDWG1hqxxtrpEbaE/7rTjd6zHQfsofNjfGwE/zd%2b5xmjnzS2yIUaTTPH13nRi%2bbbg8b2MpYQ9WXrtxkgSWapNUYYojhyf/nfdACD/mf%2b/3cJebaxd62EGhJCgy2mejrtvdFz7vG2hq09cAKEsgq0ru4bXc0hsVbWEpGStZ4zzvB7k7yhENMknK3H5rjg6UrtG/9g2fqrlEVpSXBg%2b0hBpk%2bnTRjk0r1O7Y3jf2krca51PHO1GLvpAdm/9I6vqtY/YvU2NEOXvd3t7nJH8yxqR0coEprcs7u7xF0B%2b0FGlMClVJudJV73KfK9j5qS%2btJq/F751jkMz5uZEK5OGSy4Cd%2b4x5ZWzrJNmarjkv%2buN/tXvCmJgs1a9IqrVKNOg3qjTLdjsYaZqq9LHO7m9zoB/5gW5%2b0iRYFgZS8tIOM800/8JzzTUpi9LrjhArl3mGLj0r3vsRhbvKyGcZ7wm62l/UvV3vA%2bzqZz2L1O0oPfOZjuZE6QlWQiVRo77cQSanVV3kVx3%2b/kxWj2Nx8tB/4jBO1OmAVJV7EV0uJs3FTRvuo/T3iVv/1D39wgfc5zGTV2rQqdpFcHdRuN1BGsqq1afMTV3hMwRyfsY11jJXTpt5PnWOWr9lBVrM08moEHneshwz1UbuZZVJSEfZvrvCMhRYmdxyfuCtFlngDyywVqjHUUFs60jQN9rCNQzzkN/7mWh9yphHaklKRTTZziSv8wBG%2baz1N3aB1kYjvFIFWfOWMM1RT4urKy0nLJckoFSWLPjGZgnSQGTxTr4jqKKsT%2bULZXrQQ74goiR8OvVNOXLwkMtqMcLHTnWGqzTokKPQv2okdm2fqbWk9H/Oov7vND13gAJ80wyiRpkRCrVqFvGgOI1AjbbGn/dxPpE3xATvawCjV8lqEGv3AiY5ykmnywqSxbK23fM6vreXT9jDHUIH5nnCJvwtVm2gPI401wRRZoayMSCsKlnjWixZ6wb2u8HNDfNruplrPHNu7099c5UpfcrDKRCvIGel4G/mcQ/zKBpZ260l1P1AlXjlh0iawPcilPWCmQkWxb3okGDxTd4mgKsp0rt4QyfQx%2bCSS7hCW%2bQ7fn0jrNkN80X1OcbkJ3a4C3Yv77fB7KFSlxhY2ttCjfu%2b/trahk8yxlgZ5LYrVrPt/PO2ErpKR86RH/NbvTLSH/WxkrAqRfJL20uASJzndCRqT%2bi1xDNZffMZbznaAMeqEnnK3H7jZdHvbzVSjjZDqFEvXfi%2bB9UUK8l73uvv8zRd8xjH2t6Hx9rKTB3zbMa7zBWtpFknLC%2bzkEp92sF9aPzlb99cGvGJ1lI7Ra7EkzyVBpWnIDErqrpANkjQ22tvT9MVPHbdSqehQHPid3x%2bItBjrbMf4hvPVdMq67W90LhUQ%2b09HGWcLi13lakert6ftbGGWKi1J9dP%2bXzyhQL28p93tFtd72kbOsp/ZKpFP0l1CaQXf8hVnOFFdQqM4mvoSP7aZS2ynSuC/rnGVx%2b3qfPuYrFJaLjFZrjw%2bOi1tqpm2cIT7/cU//MgeDrCHMbbwPVv5vgOdYX%2bVSRetFuv7vhN8zI9t1M2zdU%2bezsprh8c1XOL/rTRo/e4KEVEmSCv1y4h38npVpR5YPUcgVNmjgszFb8rZ1YH%2baGf76E0XxZ6NsjgFQaKO52SMdKwPudPfXetPZtrYtnY3rlRcoO9dqwPtduCsRf7gZnd6RNoezrG90TLatClWYY1re1/ou07wCTVy0kkO3D%2bc61HH%2b7jx0l7yXdd4wba%2bbEfVUnJadaTI8s%2bzY2hLThuqbWsrn/QnP3GyXzvER4xwgh180fFucVZiHouLH17qREf5pfU16Q8rSPdKKrU38I1JHaQGJfWKyEp1PlNHCiqkk8qbPUdcar072bHtiN%2bZV%2btoN7nM5kYnkn5Vo2ggTCWLO1Bvdzs4xt1%2b7zo3%2bYHJdrKbRkHprNdbxKEYBSx0h3971EtypjjDNuaql1dITq9B6XzZ4Hu%2b43DHalRIivTV%2b4WzDPF9uxqm2eX%2bz6s293k7aVBIClAsL0E7j7tjtZTYelCQF5joBPu6zo%2bc4S9Ot7n1/dj3fN8rLjA7SWNtM8PXHOsIl1u3j9K6PUS1u%2b8OxIIoSA1K6q7HlOootygabnqvfhfUqNXUo0/FMWZNtrCnX7nDPqt1EorUTieJDSlrWcs%2bnvAvt7vHjc6QNVSdRnXq6dGWVby/yDI5b1pqmSZptSbb167mGi0jp1V7ne9i86IGv3WGg51omLx4W6j1LV%2b1h09bV7V5Pusqc3zZvkYKE6W9eGDozijbUztinSUw3bH28D1XO8xZDjHcZ81yoQ%2b5yLZaBdJares7PuFoPzdHS5%2bMm6keRCcUpXXi0hok9YoIMu0Cub3IfV%2b91BmZHma5FlXSNse62j/sqmq1tpXpOIYoiZpusJkNvOlhz3nJixZYaJHXpTr4s7uLUKWMNlUyJhhmrEmmmGu8CqFCkiTZbhIqlje%2b0ad8yJnGJk0HIhXO8U0nO85oGbc61lIn288cUZLn1LFKeE/vPkYbJvuKPf3UCe51pjE%2bYKrPO9LPbKNNSkqbzX3P8U7xA%2bN7bdyMa6b1ZDbbz9QG1e8uEMTu%2b8RJkEjqTKmLRW9QrGTZm2yelBZrW9vN3jS5x9Kw3yYlWWihUMo440VymrRZnLTX63lSQyQtLScjUKtGRRK1Fybn585SNVa9s5p92ha%2bYGRioorU%2bZYf%2bKoj1ajwe58yzbdsKyNHyQXX17tPJaa17axrc5/3su8ZYzM/dqJP%2b5W5icLdYitfdKTv%2bLJsLzfhuIpLRaexF8OguprnYiJpRiBKRSntC3dAUH6kJhUEUaLDFM1VqV4t2yLam8T0/JNxhNmpDvQ/01ZxDbN3Gkl7y54Y9QIj9L4YY%2bdzY5gszq7SSWJKpzT5tEVON1qzTHK%2b/o6vOtMnUOX7vmxnnzMj2Wr6ywbd3mssNMyJpjjHB/2fjYz1Ux9zsJ/bJEmQbLarj/qZDRzWi6081keeVKEmmaHi/Xfc5JYvtRH/NCsQpQc%2boWPAQ9pWRLwvx7tN/EiaBKViwasb8XLeVMHvLenT1tLVtSXxZN17hUnR%2b1hehHLatGnT0unVqi3xnb79q01OPomMihMci6fD5U%2b%2bUQeb998cbz1t0iKhBj9xtuN8HFXOcbYDXGhmkmnWv26lYhRYXov9/FTkYNdIaXCpcY7wvyQFKJRxjHV92x3J9tSTJxbf/fUaDLVcVHcSDd61CS0gTk5JDfyZugxJHQVIzr/xpLYOYN3NWEKmbe5RC5MAlj7fIUmxvFY5gSo1vXjVll51nV5VJGGMxezs7rw6Rkstf4cxoWr82%2bXe7xCVyXbU4BdO8xEnyEo5008c71zDkoyp/i5/XLxiGk028VPrON21IsP8SKMTPKJS3C9khnM0%2baFFPXxi8QbQ4i6TTepwJg8UVFvXIg8odCn/A%2bLSwquuEla3UX7qdxCkl99b49PfQCFe0Ec50Rsm6Fs6ZFGZyyd1sKHJM0ntk/4ZbZ1ppREu7VAzuy%2bjjlR4wXdVOs44LWKT2TVOtKfPGSLtM37jfB9U0WvHY/eREmkxzSXOcKKL7W6i8xzjbBcapyCl2a4%2b5ut28SHdt7lHAjmNfuFph5nSwYISCaV8xKO%2bZaIDlztbF%2buhZATF08uAovxIHUWBYHn/ZX8qvT1FfJqcZZ57rd8nlbIYtV0p402XekSLFq96XUs/jrfGRCNVaLB1EnPVXoO791XT0/7jBudYJyl%2bkPa6081xqmHSvuRyZ/mgjHy/Kt0rG09saRnn8z7lFMNsYhsn%2b4KfOCWR1k2Oca1v28kYrd0UCYGCCvP80gj7qiyVYYqZWjDK15zjMzYodXlr/2nsAA1iX9gAo/xILYhWtDEOZMep%2bJSZEXitl9bUovU9ldRE/YUfe8Vraow2x%2baG9dI239U3ZS0z3xOe85qf%2boI5TreZAvJJd%2baef1MgbYnzbOHDsvICoVpne8uXzJb2az92nI8mCR2rIzwn9p63mO47jvYVPzLcMZ51qS2ScoGhob5tOxf4amKReecnFwqkfcs9vmpDIZ2kcaDNCP/n8w53hKpOFe/iJ1wvO0jqrhFFojLQYdrHIyZLhSW90heixGpbIe8xv3aFxcbY346GGWKUNk39SIRISrW8hRZ5ztX%2b632mOMruJsslpOvZKTNWtS/3kv8zTrO0gmqX%2boeP2VaVO3zeJj6tPqmYvnqi7oopsnNd6P3OcqEhTnSL/7O2CfICLTZ1oc/Yxy6auiEWQpFaP/Azx/tgEn/YuYpoWl61rznSOaIkbzyeo/gZVwqIXVoDijIkdWwpG3ATYglBkuWV7WUwQ5z5VOVlP/dT833AR6UU/M%2bvvWyBRdr6TVITqZHSaKSZtvdpJ3nBd5xsfZ9wkExixOrJ6EMpz/isD9hCq5RQlcf9wGSHabTE51X4guGlJJPVo1MVab3E1i70UTOdYqozHe63TknGkLOPb7rYuoYuV4VsxVmLJe33ne5UJyWUDpf7RgJtKn3b4W7S0sFDU1wjSA0Gn3SBWP3O9f1C/TkmxXqf6R5K66Lx5d/Od59NfMZI1/mTBxSMMtwoM5Iqp/2jflNlgbe84gHfN9z29vYz/3C5U9zpS4Yk5RS7uz1F8ob4mgofU5Eotml/8pjvmazVl9zuh9brkPCx%2bp5JTOvFDne3b5ljT%2b9ziAttbUs5gRZjHOtzbnLQ28btx46wet91nhOcKJtoNEEX3xloMcrXHO8md9mmgwc7Uhu7tAat3ysiioKoXArudRhVUs%2by57twmyH%2b6tPqfcf6rvEzT5nrcBuYaaRh6kqGlv4YZbz5LDLP6x7zX/9zvc191BUud6nnfNdUTT3Qgwpq3ekvPmBtheQ0/ZhLfMieqt3oIqfaV5tV2y%2b0axQjzVqd5E5ftqGpzvYv33CZuqQM1bbG%2bq1tjHib/i6BvEY/92Wf8pmSZWBlBSrTWm3s2z7uApPMKt11nOcuGFS/u8JAay8rQUGhlDvVvdsIEjn3O0fa2tfV%2b7g7be6zNjYm6Q4W9qsPJD69Z9UYI7CzD3jDLX7kWB9xmvV81sEutU7J7fTOJAxl/Vqzw1XLibuMfEvgU0Z52Qm28XHpPqTF9v1%2b09pM9iknuNRZZjjPp/ze0fJSmmzo/X7qAbuuJB8%2bzuyu83tnONgnZOVLloGunnSsHTTZzhz3esVsUXK2LvpoBtXvLhB32yn0/UL9Oypxjejuyrhim9xGf3WUQ3zV4/Y11vdsa0RSpbKY%2bLisHxuqBbKqklZvaWONNde%2brvJlL/quqx3vRBebI9cNPTHOkr7d1d5vSiLpKjzoZ862lsjlXnCOcdpWs%2bLd%2bX4jac329wd/todt7eMCv7CPEfIiFfbxN1faXG2XkfuBUI2HfNW6jtX4jsa%2bYgGNMHFhxQmlsTUhltQDr2SWH6mjKB9E5SiuUz0yMRWjsP7mKPv4orscbjPnW18LarzpmcTxtMCLlvTTWohkNZhkmFHWMsN4NZpMdIq5jvRh33WpXX3e94woxeyt/FoQus1zztaYUCJyjtkOVeVBP7CfbRMD2UC6HCORSic43O%2bsY7hjnO7PPq4gsMwWprnZ09bvMgglktbiMi86x%2bwkerxzIkv8q6CtFPkfyJXkciQjm2z18foIgoFeu%2bVHakE5MpoklLJ7iANBK93tTNOd42Yn29/njbNMvRaXuc4tXjZSnbGGG9Yh0KEvCFVrdr955mGObR1oazlNdneVYxzkUhf6lK/6ktqkIufKZVKoyjx/sZY5snKodIubnGCKwPe02slQeQbgPN15pORtYCvX2MfedjLan%2b1hgpxQoy3d5eaE1Cs%2bqQoP%2bIUP2KFTdlrHbpaBSF2ps1aMvMWGGS6VxNrHVA8Hz9QrQSjSjwpp/yBS0NZt9Tu2Ec93gUW%2bZ5Fj7eMrhmvV6B8ucbN629ncOkYarbqUvNf3UWZElnnVMx5zk8v9zV5OMdEyW/m%2bY5zhIif7ug19%2bB3OwbHR7TH3Osh0BYG8rO8ZaU9V7naTdWyXhOMMrGEzPhc3%2bohrXW8rUxzgx%2b42WV5aiyP82B2O7FIBTyn4HfZTnTSPaK/WWoyFD2X83vyEuoTqLPWMw40jiXPvsGEMqt8rIioE/bPC%2bxWBShXdNGnFcrrG5a5zsqH2tLWvGabFEBf7ptBHHGyaxiSAIS%2bpGd3XmRPTergR1vU%2bh7nfZf7of75jrsW2dr4TfMM33eQ8W5qZ5EQHK7laoM31MjYxRF6o0sPus44pcv5qkROMKC30gUZomc3s4hqH2si2vucmO6kTyZtmQw943KZd9D1NaXaF9WyharnOqqG8lIKhfm4Zri%2bp75EaI33YR5PUFortWlMG1e8uEYQdc4bLA3FD3Vw3zwVx%2bt%2bbfm%2bSwx2vylnGaDXE153nAMeapVFOQU5BpkMbmv5AaIlYfowz3jb%2b7esO8AM7arGH45xvK%2bfY3aW%2bJmXlxRQDacvcaIqtxZpKvau85f0meMPNpjmgn0feV9T7pAM9YnM72tGNjk785wXH%2b6CnbNHFZ1IK3pT2rJScqJTgWvCSR73uWfM1O9tupY6XsUms3nCVHfp8tGsrA03psiR1FA1sAkdXCJK85%2b4Wossb4h9u8FMv%2bLdTbaKgzrd903E%2bbaxWLQn16y3zDy/IWaqpD86tSKBWtVrr2ATLxKWG673PWs5whp9YR%2bBwf3aFfRzlNw6wZbJRBV1eMeVZz9nahKRXx0J3SVvkGg95xGZukR1gxbsjQmmtxvqjRrWG%2bZd7rZOoy%2bvKudUBXYQORUIZN9i8gxgJVGvCDNUqbGE/x6hbbp5i%2brcXm%2brQJGrAJ6QMSS2KonIbWCSQ7YH6XWWe79rW7g4wy77SApc514ecZFip0mW1113rj27QZrjxfTA3xZ0iFnvNIiO83x52UZWkXoRmu9T7neA3RpnsaJ9yg5P9zq9t%2bjayOpDyuGXWUa0gVOc6t1vg1OTnf/O3gX4sXeIJf03%2bdrMPJPaKWut41DJDV9AA41Z4E%2bykTq16NeoMM8IFXnC5EfKyGgVJu4IVP1sMEy012wsG/dTLo9iesp8MR/2J7huzIlUedKPv%2bbcXHWptKff4qu2dbHiSCBipcb1vuM0GvmKOScbIJnlUvRkbac1e9YT7/NkfHeyziQc5pcU4lzjAOb5muP393h/sanu3e8H0lZZoiqQ8pMb2SWZW4Dmv%2b4AdhCTNassPBWlx%2b4fv%2bJ%2b3TFKQ1%2bAYZ3vO8C491QUbuECVuDB1bGyswkhjtAqSoKOVea/jtvWDhrK3ReylLkdSF7pl/Y6jvW8w2tYulre9tIwfWOJkM5ImcpEqf3O6WhfZzRi9LYzY%2bXtrDDfXAT7qZ37pVV81LanvttQWPusztnWwMbZ1vuds7Vr/MX0ltusIbf5jjKmJ8j3PDdI%2b6CC5kr92IJ9GOinDuOK4yan1H7/xiKlJyum63nKbDelCAS%2b6K%2bMKqlHSiD5KSj6ldFXiqR2hfFJ5tT9aK/QHypDUUajsgk%2bKRWO7996MJt%2b1sYL/GWWaSre6zgE2TKzNoSp/coYZvmID%2baR1ef8gwBSfN9c5vuDbRsgLpCx1rL%2b70HZm2UylB20ocr8PSXe5oUQCeS9Zz5DEOr/Uk6abVvLKDizSlqqQLaWndEZBaAt/LGXAhxo1eqjLHLWO7WiLDQtjVTpVihZ7%2byCd9hN1QDDw1u9y1KAEkdLeVx4IBN12OgVS3jDPTuZ5yc6GyLhS6OOqk7DQGo/7irE%2bb11tpZjk9kXU%2b1cx5TB0iDNc4%2bKk9FBKqNLx3nKtZXayvr8aYpb7PLeSrlxxXlrObNVJvPMiL5pr0mqvfd4VCqrc5HhLVXYZUJzS4gBD3ZlsQC0m2d5zSbhN18%2b386v7aD9RR28jz1cnypDU8UbXly6Xq2RUSbn8d0Yk5R411vGqxTY1wtNutIdZSamftDZXeMrRNpUvKbL9EyYaJGQMtPiIT/qN11UlekaLzY3wB2%2boMs793jLdi95ciac6VOFBreaUuoU%2b5C0TkoqdA/0KRV53maPNU6%2b9Dmr7K2%2bcav/2sixy6m3lMW/2Sx3ylT33THy0GnBODfgAVkQUlWNCR1Q6L73ToogEHlOhxitaVKhwk4ftIJssvqxn/cne9kwS9/s7A6CYcpDxaYtcqkUqSfkfYkPPe1WkUbNWwzRpWWnoSdbVmo1TtBC/jInJXQy0ghmfcoe42wdcJy2VuBujTj8fZbFFSVnnSI15nl2l%2bRbhoKReKcLSb2WEoBQO%2bE4PLZDylAqVFsiqxTzTbFXqUpnykOdtYlhiU%2b5/gsSjbDXCB/zJK4ltNpKyhRZ3CEwWyhtv2UpLNIUiT8kaVnoSTRj1tiaj1Ys2I3xDwZEuFiY1w0q%2bYjBLQXPJUVgv8soq9asn/aIGfHLKkdSF8jOUFStGdre/9esqZDWp0ajgMRON0d707nFDbdJBqqyK0VJQ7QDPuaM06ki9Ni8KbaxCylgtmldyhUhgsUYNpa7eywwxQbFt68AjwE6utJUv%2b6zX1XSgdayiby5M6r8FAsOlvblKRx%2bWycyUIamDMCrLhI5QW1IM4J3f26xSWrO0Ogs8bHiHzxU8ZJip8b2usvHGOkAVniup%2bZFhspZoMVqAIW8zhjh/PG4NEJ9RXzDehNXUzre799hsogud6FcO9G91pQ0oDuvdWZvHS238GtRYtkrV745awkCiDEkdJ3SUy8LpjO55ZwMFaZUiOQVLva6uZKAJRF5QUzI/rSrE8qqKpAG75BSasUReJNSa%2bKJXPoaCusQwltLqCY3q9LYr2aq5x5SckU71I20%2b4udqdSwEOFyrpxLzZKhRg2WrdEuKsHzN%2boFAGZI6KJSDKWaFUSUOo%2b5Gfxd7SYUKWrVHIwUiLbIr8Q7353ghLa25VN4gkBImEWTFIkorUxnjTLOG0qEj7zVZ5ZKy0H6PKTkZ7/czmzjRN5PxRSUb%2bYJET8kZY6SmVbiRRiqTwKKBRhmSOoqCslO/49jqbLdJ2O6zXL5PYtGKvvokXnGLLAZZtBvnSvHKXXwmToQYmTjEyFsSt2pVXlpUsfTgLJc6xtm%2bXCo3Ed/D0qT7Zs4wwyxdRc2I41mJYw4GXlSXIakVgrAc9ruOiE%2bYbT1QmZcnS7Dc/6%2buJ9%2bebtCTby82thmRhJ4QaVHZ4wLJqx5Bcn6uVGGYei9qKZkFobV0pk6r1FQqWNTfo4irzpRHgGZ5jKIzwnKTBvEiT%2bt9N6rgHf69qtCeR9Sb8caleoq9oTNJH83yQVEbymt0l2%2b6zk5OMyShcTEQh2I%2bfF6Vin6OVezYo6O7qbmrGuVG6kAUhEEYlZ36HZSh6tld9KarSIisVxIzUyStTluH03k5IJaPkUZ/cKqcE3zEeLmSoSxCZeKnzlhkgZky/dhhNB5D3Cs8LvNfHqu23EiNKAzKLvWyWAq2PHbiVY9i8OpibSqTu28kmYHyoHTsZqw2z9l%2baiun2FyVtsRAWdx46mVFIhkLLEwcdP07hkpZFSVXWjlMTxmSOiiIymBmlh%2bVcjvnr%2bq7JW2hZarlharMsFAuCcgsh6cTCTR61Ic97zM%2bYpJcYhRrL%2bSbMkmlNpG0BRaqWQXW77xCZwk94JNTjoaysBxdWuWSgbP67peMVnnFrp8zveqlMtrcAi1%2bawfL/MiZxmtTTI8tHhH%2bp8paScmllMWaNPb76ONEn7ghU89aD646lCWpyzH4JEhUz/JY0KvjfiM1FltaspfXetNrvTYV9i8ikQqvONO2fmwvkbCkdhffkXGjCuNKivECrer7ffRF70Ks4qeKSYYDijJUvxXKMUx0TTaU9faOR5rvTbOTSif1Wr1WJvbvQKBKpdMdaYTWUkO79qiAAI8IVJVMZm8pJIGx/TuS9hG1xwwOLMpQUsex3%2bVlKIOUijJ4YKvvbiPbqLBAsSjuCLxSJs8lrc02rvZpw0qU7twiPhR4VqX6ZBsKtKoxw6rUtRKP/oDvemVI6ric0YDPzHKIgzHKQfVcPUhrsYMqjyZJLCkzZb2W9Msc6K0tJWe87aRLbWc7P5dISpsl1jJKXiAt5xkzje33TKqOVwvK5IBWjup3GIhE0cDveJ1RrPT8XkFouCpPaZMSYrLJ7veS6WXSaCHU2iEWvTOVCmr802I7qVcQqfKq68xV2%2b/bcrtHPP7XYIeOLhEVUlGkuUxMMqVR8Z4idWwxbvC0RYYLFVQY634vml0WVcreHgUZ/7DQBBkFkYx5nvE%2b2X63CUSysh1p1J/txnuJMiS1KCqQD9rKauEUK5%2b8VxCIZK3jFq8bLafNaFu7xaPWL0nqcpyNWEoWtHnEULNLaTWvKdhMNkk47V903uoHWk6XJ6kp0Cwso/SBONAw0%2b2W82s%2bYj1pW9e401yBgjobqfF1l4ikpMWhvOVE7GKEfgEpL9rOBAWBtCZXmmPjVZDuGsgtF3wy8MbUciR1GIWSHORyQTEXuXxGtDruuGA27nKIrEjOutbykGnqvOl/Jptadop44G4V1lLrGS02M1QokrbQX22nMUn16N95Wn4GBkndJYIw0irfoVHoQCM2h%2bTfQ2fquMTALBO8qslQoSazbeEpx9nP/Y4xyXeMUCgbUhdUu93hPuI0ead701Yqkkbyi7TaTNUq8LIXa363Y%2bDXbDmSOhTGebBVZTBBRbzXQk9iWg%2bxgf%2b4z65Js71dXOl2%2b9jUlv7qLbNW0iFj9SOS0%2bhRy%2bxhlLv8yxZmJeGbKT8x3EbSq6Xw9MBbv8vjiXRGJC95HOWDYr2S9xJCFfb0ojuSjlxN9jLFf72syh7SrrBEJK9QBq%2bcWo/4gd3NkHef1%2b1kfELivKtMMvNtqs309bl2%2bvyA7/zlSGqStjsDPjsdkJLtdjetdwsiKRub6D%2belRaIVDjAS/6n2d7WcYP7kvZx/dEyqC/NhgJpKf/wrPcb7y1/NccmApGCGn/ylk2NXIlhL9bAek/rVVtrrjcoR1KHCuTKrEdHIFU2WTir645pMd6%2b7vS8FNKafFK1KzSp9THz/E2%2bD121%2b3OkFZ5xia1tIuV%2bN9rZRqXGg1dL2zHJeV4exWJNvad1annX9IAvknIktSgUtcmVlbIbibT1i6GsqMivjrtrbxbUm88G8ursoNV/k7JGkWqnud618vaxgb97oNTWZqBQ7Dp5uQXeZ6YWPzXMgbJCoRqPeMQMc1aifBczr8NSbNjKXitHXCcmeUcw8JGQ5UjqMAgplGGoR381sWv/fXWMuS93m9ZiC9v6s%2bcTBbzgULP9WrMan/O0Pyn6tAcKcZjMI35pM/sJpP3bfjZO3FcZ13nOnkauxEoTSalOyhN2/Wp/58oaFIUlFb48jKnlSOpIgbZSZG85oBjW0D/XKhYwXPXSrW82%2b0hKizEO9rT/JGp2myG%2b4Aa/lreDU/3Av1QbKEdOrIeEMi7R7BijVTpcnY9IC1HpeX813m6JJ6Ur9TtjjqVCFbIdXmnp5G8VsoqplfnkVdBuOA1K4ygXMVSOLi1C8mUU6lGUQ/0xnkhKrbbEaLPqJFy8zNqEKns98lgGLnGEn/i%2bnY2TF2i2l/2dbzNrOdNdLra52iSmanUv6rhnWI2H/NMxdlLrd/7ia9ZJCi%2bl3e5WX7CevGgl7emrHOJzTjO6g8kscI95vqRGaKJdzVQQqC5FFBa0dCJxPL/Z%2bOcDzuxyJHUklPRVKA8E2jtu9OW2YqRMcV9iYFp1ilI8d21oLI27ffTdvY9ixewTHOUvjk%2boUu8I1/mhLxnuTAf4jAs0JA3dV%2bczi5NsqjznAJMcpd4zzrSzQ5MzboUmvzXFvm%2bzfUYCW0v7s4k6ms3q1fu3QJunbGUPLdLGmyotLh8xo1QSuN36HXSc%2bgFEOZI6jArCQqp8/NTFFPzeLNl2Q0vxzJWytus8liyiVbUG4ivPkzazFHQRdBhL96%2bT1uxgF/upnczWKqXJtj7kz3axp%2b18zhfNcnqnnpOrA3Ega5VWRwl8w0Stvm6ZMwzVKu7QfbO/O8vsJK6sKwTy1rGv233FZnKl0cdrr8qzdnOX21WIFFQLhVJm%2bqiDNIiQLtUW74tZsj9RlmfqICRXap8y8GgnZE83mihxhWVL5YUjzLbMvav0ZB1XzGryK2vbRNRhU0onfby6i9hY1OY8z/hRYnwKVfqo0b7tUa2O8H4/9AfZpOfk6qN0KCtyssd91foKLvN7R1tXnN%2bX1uYkG/rg25IttvAfoskNak0w1jjjjDPeeGONNVyFsSoc63vWVu0Qp/qMCf7PvxMXZ3sppUBQDl13ypPUCnHucrnI6qJyle9xpHMgVKlBS6l%2bVSC0vtn%2b5TmZVRS4ECV23xdcY19jSuXtWSJU3cN5jUQKtnSkX7pORWI%2bW98ZnnapJWqdboYvulmlwmpyb8WUTkk7y5%2bdaGdpd/q6zRyuUiiOBD/bS042TS4JUOn6SuRs48OudpUmrVq0lV55oSb7mqHaIdZR4QBn%2b7LjLPJw0sKnY1LLoKReGaIocWkNdFBDRxS7KPaU1DnDzPBWcn6OLagTHewO/1RsWdefyyBKFnwo60RzHKjYxjaSMl%2bruh6euYKk4tfRhvqRV5OSu23e5zN%2b6z%2bqTPNNQ5zuiaTOyKrejKPkWVT5pst9xJGq5J2v0mdNk5dSUOMel/mYvUrl/Vd2dykFtU6xm694UKNih9M4Wi2t1UTDLZAjsRtQIWdZErUQdLoaUWqF/17NKEtSB4U4rKxcJDUEsqp67NYK5FRbz/ykg1NR5T7E1i71H7WlmtH95S4rUrDBT93nRGuXPLBxX8a04T1uuBor4Gv7mJv9saTKRz5pT2e5Dev5nhYne0RdyX6wqhAlwR51fuw7DnKqIbIu8KDTbCknJZS1yClG%2bWjSB/ztOZaS1%2bibNnaa21R2uoP45B4mldmK23BIh1ldrpzRKrvz7qLcSB3PTigK5cqK1L29nVBknIfdV%2br0HGg11jdUOMO/NKgoLZ%2b%2bv%2bKrVCr4vrN82AeS5VeU30%2bqsFHS6q9nDyVS8FE7ucQdCVHyKlxkuEPdrGAdv/OaQ9ygllVcSDiUVeVbznaALxgq40LfcKxDkw0ykPZtDznVtG6topjCNX5grIP9Q8VyFu1gud87q/LLu7YGI8q6Qqig9HjKB5HmXpypUwJzhP6rGMAQyGi2rp8KfdJJHlOhQqWqfnjFfZ1u91HneJ9TVXU4xgSa3WiYtXtc2iCOLcsZ5XShr5snI5TWqtFlJjvRX%2bTM8RN1jvcrkspg/Xu%2bjDetWO1%2by6nOd5CzDdfsPOc5znGJBKfSn/3IPvYqbWfvdH/QpsZPbOE09ybSurtNi7v%2b%2b8ChHF1akVBULh2bikNKqxD0QndIa7Kz3fzVMYaW0h8ymq3jp871S1dbyz626WOly1gSv%2bUa15on5RRHaky6MUpO1K94zS6GlU6GPbt62lIbO8PpLvQVhDJaTXKhk3xFpV2t7xLn%2bazbnGGiJUnRo/5Z6lESaJJS40ZnedXJjtNgiW/7vmN8Vk2pmPFTvmK64w3X1m2pFUhpVe8rjnS675vam/IPwWA10ZUhEsWl48oHsX%2b5NyffWE7u7hR/9WHtAYUpzWb5jmv9xeNO1yrVh7riEYnbrNEYu9vPdtLJaTqmVathfmyxQ9T1gmhFT33eR7zshzZ1sCVIa7a2bznTKb5pVzN91SWu8IKv2NBSeRl998YXz7I5WdV%2b7MsaneMDai3xBb9znOPVJyTMG%2bJiS51nbmL17j4ymkzzcWf7jq%2bo7Wa/6Wi5vw%2bSuktEhXJRZNoRJDK2p%2bOK/cWHusJ37W60XOlsnZIz1CF29bRnLbBYcx9OQ3EH6SGGmmaWalGiFRTbstd41O%2b83xbaSqf4nt1/fPIsONMSJxltx6TPVmiu83zO8X5lG5Ocaa5L7ebLjlRpKR2szz2fveJ3RxiizeGu9j7HWl%2btyJf8zicdqzHpd9lmiB%2b6wiV2TQJJur%2bhxM%2bkzaGu9Wd72TPpzd2dmWm/Qjm4tMqR1GEQRlEYlJOZLBDIdAgh6dknQ/WO8lm/cmLiX%2b1opx5hrO0U5PuofpOWEQkTz0F70GZBBqerdnI3T5ld30l8Lc71io/4lW0sA6ENXOp0RzjWx41wmO18zaf80cl2EWjt1Xe2fyKSRZOLXOFJX3KQkSo96yz/dqqPqkkOFJEhLnaSixxU8s13/1tj1b0gcJo7/N5Warpl8IuW27IGft2Wo6EskqdQRhFl8aB626EjktJsf3u7xJXSdLBIx9PfprlDgGLvEAgUtGpLNof2pVWQkXWe211oZrLYezsHgbS8Sl811Sdcl8iEQM5E33WgL/uI%2b2RN9x2XecWRDnalfOIODDtlN73d98TvyYtkVcp4znn2dI5prnGccSK/sJf/OM8nS8bAjMhXnOlrPpYcZHoeVRBJa7WxrfzHg0lwUMcVUBzd8rNSTiu1TEkdhaKoTPorJkOSSiKoez6mWCWrdY4ZvulalaJSAYiiXbp/CiUtnwMciLSpVHCeH/m07fpopwgSfaDVWF8z3FlulU3yn1oN8SXf8aCP%2bb4X1TnI7x3qbp%2b0px95UrN69SRxWl3ZxotOuVBOXlaDWm%2b53Wn29l15F/i%2bTVW422lONckfHa4oKdNafcMlPumoZFvrjT4Sh30WfMIr7u60AqNE9wm7%2bEy04kUGFOWofkdBYVUHMPQU7dG9vf18zmQXO9mnLXSUyCKZ0ul61Yw3kBcZ4iVf9Gcfd6y%2ble2Jr1uMwdrYBU7zaT%2bwvcXJlhc4xFjf9wV/8Rl7meNzDnaFm5wtsIsPmmYdtWLdJNIxWKNdCqbVSuEFL7rPzz1iqDk%2bbXcjDfGWH7pU4AifMElLMhoiX/IrR/ik6pLNv/eYqdpDWlUm/459C62yKjqMtuOslMNZuohyJLVYUpdPRelYUvelmH%2bAVrN9y7nOdIcP21prh77K/T9e8hpxpQs941gf19DBGt63awciOev5us85yv/ZV3Mi1Qp2MtNvXOHDjvJh69vIWp70b3e43dWG2s56ptvQnJVeP%2b8OD3rKrR7UZq6jbGZro9UJ/N7P3GBHh9lDTTJ/BRnVPutnjnOs0aW77P3qCWWNN69D4EqcDzZWk5dLekBHxTzs%2bH8Drv2WI6lDIZFCVAYJLwlil1bvDwRFJ9ZM3/RrF/q9Qxxjvdh8oK/1LNtRXMwpafzNJW6wof%2bzY79Rut0OnreuS33dJ9znZBVyAil5Ex1vN7/xa7%2bxn1NMtYH1veJpD7rPva6SMs5kDYapVa/REAXzLdBsocXme86bam3sGJuYYbZaoQp/d4l/me1bdjYh0QwoqPe8c/zbOQ5T3w%2bUJlRlplc7WL8DoQrHe9j5ZthyOV0gSkKlsmXSlqkcSR3FpC4v9TuOqeq9pC46TEb5hF391C/9zki72tsY2SQnrT%2bmrkJOzqN%2b6xGvG%2b5b9jA%2bsYf3V6pncaShcS40y7kedaERWkVScipsYIbD/MDl/uADjjHFaBNtbbGlnva0Fz3ofos0K5afKCTBn5NsaD8TTTVZnQahNgvd5%2bvuMNbX7WasiqRQYEFWtVscbqTLbCTb4S77NovpxEvdXvMmkDPFz3zIJ1ybZIIV7QJB8q2JZWTARVEZk7qcDGUSKdR7QhRpHcpYz/k%2b7Fp/92e/ktN/7ezjDOOMSllrOcGupgpLKR39d34v6gMFKSeqdq69fd6uqi2VRk619V3oCD/wBz8z1%2b62N0OdySbbSWSR1yywRIsWeVlpVSo0GGmMatBiodfc6yZ/s8AEJznUjKRwf6Ag0OBZl/u2dXzHRskRoD/usuj262hyjGP2J7jcAQ51oMpEU2jvT91/aTl9RVmSOjaUlUdr89Kg%2brxYikuANhkb28DHzfOGZ71pWb9J6rQGk41Xb7wGSq6y/s0fKnpkA6E2Rxvnq45yjA9bV5OCtEibtC1t5GFXutXFLjbWurYzW70RJq30VL3YUxZ71b3u9LQF6q1nD3sZI601%2bda8enl/dbF/GOFEG2hSrL7dfxVfl/%2b/tCbTXOkI3%2bhQUjhO0eybIbV/UY6kTgxl5aR%2bt1cT7duY2mOPWkXGGb8Kx5zTomP%2b0KooxhAv/5x9zHGBi/3Vxx1quKZEZrYKbGh9r7vdf93nJr81UqMxiXqdVqFSpUiLZnk5CzzrKQu9ITLJRta1o3XUI18KMaHRQ77rt2pUqzE0cTT1ZymlruqORklw74982AuJgzOSkZLtEH4y8Ku2HEkd9sHMvIoQJF7KvlEjKil2FQIZf3a1V%2bUU9Ff6SiSDrCpTHWYTobYkgHJV0Lp4vZRmM3zFXr7nc/7ms3ZSkEti51oFRjrAPl70lJc96gkv%2b7u2pJJMvF3GjzwjpdFIm1vHNFNNNzTRBiRe4oys0IW%2b5zVHmu0LJeV3VcvJ4rm5ydq%2b4Xg3ONY0cd3bop4VIUgN9OItR1JHCnF52/JQZuIhEaiR6cNuE1M6VCnrcV9zvWaVKg0zVkGhXzwhoXrzvWixm11utOMdZojmhNirTlrHaZj72dAf/dSBdnWOtVRoTYyLoVYpU00VWGKRpZos8JImy5JC%2brWq1BhijFq1GjSqFIo6JVVUylrq977mZVv5mt3d2%2bE825uikL1BoNVOvuckX/FVU4QdQlLKY8WWH6mD4pm6XKaI9mD/3rfdKUrpaq/7rdONtJt9TVSlXl2/jjVnqaVy7vQnp7nc%2bdZTX0pvWBXSupjI0Gq8jzvAZS63qaMdY4KhslqS6p6xPKtRq1iHpfN4olJ0fZRI57jKSEqVjDbzPOJz7rGFc%2bykVnVyV721F/TuM3EYyu5m%2b48XTOl0pUH1e2WIFOIw0fJB0aXVW3NWlCRvpF3rix72MR9T4wl/8bIWLf14r5FqWQ1mmmt3LzrPng7yWXOSPqKrYskVK4JECjIm%2bKxD/dDv/NiudrSJOcaiJVGi2%2b91Rd2k0KEtYrwJVMsoeNyD7vF3D9rSxd5vpJx8n2vD96Y9cRyxkO9g7%2b44p/0XcdAXlCOpRaEoKLuul3EZ995%2bOpSS8TOft7HzjXSVazyoQoPhhvWbnzr%2brtct9ZYqW9nPL1znLM853xZaVlkEG%2b2RBTmBqc5zuCtd4yxDbWNLk2xiOlqT5xor5SuOvfh7oEJa5C73e8pNHldtM5%2bwt7EKSZJqX0/R3bVYdywY1S6L0502qPbxD3w5o7IkdfkFn7Q/2N5%2bOsBFLradCz3jKE/b2OetY7RhavvtTuNZm2%2bRl9znz07zD2f6oTOc5iLrya3iniCxKSnSJmWutR3mPje4xU2yxppoPR%2bwTingpLOyWjQ1xRJ6mWv8w7Ne9KrFNrWNRU6zRWLT78sG2951NEDbO1pl49EWE2%2bLPUsCTbLqEg0s6njtQVJ3ibBjG7lyQCQlq7dhvXFdkt/7lq19wz%2bdbi0X2slYmY5NUPsNo7ClfX3ItX7vED/2a/v6kh8busrNj8VMrtjQOdNsu3rVo67zpHvd4WcitcZY1/bmygqSkvgFkbyF7vNvT5mvFaEGM01xky95zCleVZDXMVO8dyOM5XNWLd6y1MgVJG5M/HzSUiIUuM3XOxxgajzqPgeZSqea4kGkDOoAlBup442%2bEBevKSdSB8j2ajSRSNazvm6WL7nXWQ5yoomCVVqyKZK2jnXs5BSn%2bK4fOsTnfT2plLkq0bGvVB6Nhlnbrpo97XEvetpr5rnWnyyVT9Iw444aaTWqVWk022RTTDfLZL91s%2bFSwqSp4PKZXb0ZX1oWdXgr6Tqy4vxlDJU1XL2/eUmT73Q4IlVosK/j1IpkOsTUD9YoWzkKHa2q5YDYUNY763cgVOWHXnCpRY5yslOTjK9VeXdBoshu7ns%2b7FN%2b54tOsbMDNa2mWS0q16EQteqNtaWCFssssEyrxeZbaKkmaQ1qDTFcjQoNGtXLyAhVJbt8bKDqfALufWBmhcXajMASr5vZSX0OE13jLVdLeUab/zrGh5JTPHHJxaFGqZEXN6wvdNjKBprS5UrqqPzqSaR6XC27iFCVp1zpYMPtbysfl5Gni9JI3bl61M33F6Ozm2zgWw73DV/1axfaxtDVuOyKW3NcNyaWtNVqjUma5rQXEo4bBcVxR3EB/UibgorlorA73mGkohd5UXFl9EVaVAu86RnbJcFFKekkUCenyhOO1oKUg33emCSCvv0phMloM4mCXvz/QUndNQqicov9jtGbx5VX5/uaHeFiL/mSoaWSQpFQVjpxBuWkpFZawbKYy0QmKYmUUyzp15Wpp2iKSmuyiz39xcFO9nHXOHw1Jx4UDWjthMiX/taZqm06e3yDDrJ5xRDdQME4dT1OswkERshZosZIb3g26Ym51LNe8KJXzTfff012nLGyMjY1QlMX9pT4GaYEJZ2hPMRQ%2bZE60WDKJeMlRrFlac8fWkGV5/3dbjL%2bYGcbKoY05tTKaLZQQaBOg5xm9Sv9jiY5DUlEVqzORpZIk1QKWR5LFWugRU50pd87zSi/s6/hVr%2bS2PEknOpwAl3%2bPcW/LR%2bWsmKASUreZCPN66GfJCWyiUov2NB08/zeE94wz1JtSbhuRrU3beQIY7VJKSh0oREUq%2bG0h6l2XcNs9aP8SA35MvALdEL86NK9IHUo498ecZJbLbahcYkSmtfoaXe50QOaZa1lZzuY5G7PliRZ%2b7cz0dqG%2bZ/7XOcJgRl2toV1NAs84FEdF1Na1lgbkhiBCmbZ2X/kbeQ/XjBqQK0V3Yv/Cpb7V/tpt/P/N1jYw%2bDdlGV2Ndp/7G9T/zXPVaYaaZIhhhpupMkmOscr8tpK7QC6Mtq256qhtD4G1e%2buEVIOkTntiDt05HpsKIuVxteNsZ3zjLSltJyUnEa3Os7D1lNvCB7xC%2bv4idPconE5yRuYb6K/%2bZOzLDXNMIEn/NlwJ/q4Zqf4l6GlqUup94J6JztBtYJAmwaHOMqztvRPd9lIOciTns4jLcup8R0jurp/P/HsN7jbYu9zjQXGOtfGalXLJq16g6TlQfsTWPk22B6Yko2LPw%2b4PCpXUkdW4moYGBTNdj3daGIv7FNmGeZ5w8xQQEGtOxxthMtsqkoko8XzLna0N%2bzoXHUdfKJZBd9xq2/7h70caqw6tHjRn5yr1s5e8H5nSGkvqPOs63xXmzOSMreREfIeN0zBs90sUl8eKIaKVGBJJy97u/rb0ysGoiRye2fv9y0ne59sYqKLa6OGScGFdhPdytdiWjpxa4WD1u%2bVICBVCJVX5ZM4WKHnsd%2bRrEUeNE6ThRoSilV61VdU%2brotLfZz/7Kzg%2bxotIO9Ia9ahRmqhAI5r2gSedMfHe6LhlnmXhXWMt12Mr7hZRWqzVGr4BH/NcuW1rGbZX5iI/smRKjEYlOlLEgSHtcEFM/SBQ14TU6Fjga22MKfkdWToNG0wAdc7ybPuMphPiOttUPgac9KNodJPfNSi6NB9bsrhKGof4rk9RfiUMHefC5jgZfM0SKvUVWJ1A/ZyQwpN/qKvLv9XLWcF0XutI/Ip3xSVr3v%2bT%2btlmky22EaNPuhi1T6mCMN9Uk3uVaz0P%2b3d97xcVTXHv/ema3qknsvuGEbsOm9hhYIgUAogRAn1EBCC4%2baQqhJINQ0QnjhpZAQSiih9xKqMRhs417A3bItq26bOe%2bPO7O7kndXK2mlHZv97Qcha2dn79x7z73nnvI7bYRZz7W8yiAu5zuUcR5PM9Op/KiooJIY/TFpLXZndgF6DvhoZXdG8i6WE0Wf4g4TGnmOxVmTO1IlE9ya0vow1UAVt5FgJ37KQGKOD6I7NTbE8V0krd9FXy89KdQ6oizhEWUGtFCHMLtcdF57XKMYxIg6mcMAMSIYREkwmul8zEbWEmQo%2b1ODRYCX%2bRenMATFq6zlGDbxHoeyA7CRxxlJK49yCFWMYk9eZAs%2bBD%2bbWMlkPucpTsbH7lQRSQursGlDMIl76mDTeQ/2I0yCiXyV%2b3mSGTQnbdGCzTTe4c4s4uzmU/nR%2bV8qWYdTB/y2sBM/ZnTSlda9XnEdWoUljOoJvCnUNg5dnvRiAkJXoGtAJLqkfqccHpJ2MtO8lAMYzmJ8KCZyC28ylzlsRDiEC4hSw8nMSp7QxnAHb/Ee46jGpJHVnMgGXmUjJgkm8ISTfWVRTT/epo6TqETxBdA/6fkWR0n0RnJg/v1uMYw4a7D5PrP5AXHOAye2TxDOZzQNabMknbgXDP7NMr7NcGbxFAF24rBkLJ%2bFzX5MLUimubeOM94UasFWRNPI1IsPXd8x36F3rbIdPZhavKOM5BJu5gfcwiR2Zw/WsJw1PMKfiXIuRjIk0U0%2baEFRhq66YVGXVgRvpGOgUcQZxA8Zw96cgo8A/0uCie0i81Iqq2uz9Vo8wNa9LlQT531OZhK/4wYu4hEO4HAGO46sECel2QjSaaH0CHzMRs5mMv/kRcrZjSuS14hT3auQO2xJ/c4OG1uIoKkFvIB0dud8ri4jkrSf6h3DtaC7atqp%2bPkJXyXEVziLkeyGzeGcy%2b85mIEdnlpw1UebIGWE8BFyCtK2OUVntMnocHalgigt3MUDnM/BQGppwAmGVM7VFZTnCHbxAgShknIWE0Exibs4kNt5iZsI40s7ntnEEEKEHQ3P/Ww5axhJIzYm9dQTTEsgIXkO79k%2bvVVSbtE71MNCHffQKSU1ffJpjyJII60EMbCcrNsUcaHgYwMvsIwDmM/7LOF/2ZdbmEAlU3mZtzmgXfq9TYCRBNhClDAhKljAJgL4EWwWEMDvtC7OH7mPGFuwKOdMzqGSRDKqTPBh46cMP/UYGKygzVPFjTL1pEUt%2bzGHz9mJCMOpYAuDGUEDjQ5jjE6iHE0LCxnJWQx1Zo5NBY/zOaexIwo/NtP5ertluTBMq8oZXfeOxdd8PCvUOLxW3oCbI5zv1f35iATVNLGFiQxmAyFCtBADbIJ8wDlUU4tJHcIgZvIsOyCEkkTE6f5Ym4EM4lVOYRhVTOE5EuzPSCwSvE%2bZk8UUYj5/YwMHEWYkR7IrAccuIUCEKOU00IyPIB8QIcFKApQXu2s77fcgX%2bMp/s5PKeOffJ/DuZD5PEYUXQLQxEeYgzmB97iV2VzAIMfmPYcfchwX4HOE7kCmZCye17NlzZd0quEcm4o9az0s1PGtwiWLBx0Ekt9gCcJYYrRSjbCFSiaxmsHU0orLDVJLLV/je5Sxmnv5gJ3ZDz8WH5NgMpAysQkGLUzi6/yNDxlFJefQgI%2bLGEwZ/2Yp05jvqOA2iqn8gmEoAsSTDKWCEMGmlmYU1RgsxSDMBsoJFn0K5oLecQ9lGo/wdfbiB%2bzBrTzG7YyihkZH8wkwlPtZyJ0EuYj9uJgIJluYQS1X0M/pdyBpfCykdmKR4tMTt9FFhTeMyx1hY9EDmr/CQ0%2bu/FqjsJmCiZ8RhIhiMIHZfM4YGpgHGESYxHG8w2p25Th%2bwx%2b4h/0p52%2b8xtfY1TmFBwii8KFphb/DdG7k38A%2b3MU97Ek5T3ARE5mBhZ8gJgGnrI8fbZEwSNH2bCDABNaimAA0UE4ZW6ihDPCCypitL4U4g/kZBr/lV0S4nPe4hfE0s4FmGthMI00sYV/e4hq%2bwyE8xDpsyrmVWVzJNKLtlOLCH%2bm00TKevHvxJ61Xd2rBU7bvFDpvkcJmF5p4m92o5iVOYxRreZN9eJKPOARFnGqu4iecz3UczhEM52Nu4X1a%2bAaXUIXCx1K%2bgYmfT5iKSYwx3MLPOJ8bOJCjCPAcL7CO6dxKGX6e4DMUEeazt3PSTPF82/hp4kEmM4b7CDONBGvZhwHMZzSjnHOpN6F34hiH8Gtu4mEG08L9jGQ9DRzNCOKYWMB/%2bICpvMDrjOFBNjGCh/gDX%2bcbaT6E3nI8KSdEVLfXCwuk94RaAFvZ4uzUxe8iF/mzldgMYjDPcwQjeY/lHMo03uVq%2brGcBioQbEZwG4/wKM/zKIKPEOM4kWPoRwSLb7CCVmyiTORCBmMBO3IHz/B3/sNjQJiBnMkpDMDkAu5DsDHZg3MZlhRTN9XBxwLe51TKmMc4pvAMH3M79SzhSOfeXhVq9ylsvsoEDsdkI4sYw3q%2bzk3UsZLNTKCCb/BN1tLIO0SJ8DLL%2bDUDuJj%2bfVYSIo0HtRQmmhG22BAj0aOKGIWDNjUF8OdlLBMSlPN9fonFVB5mFidxAP/gbE7ktxzOcUQxEAZyPqfRTAuCjwC1VCIk8BHhOA6gDQPBYABuKdWhnMUJNBBHEaKKGrRb5kyOJ%2bY4vKrbBVG67J534OObvMNazqeSD4gwmf9iMAUzXXH0INzgyxg7MYp1RInTgslo%2bvEZV7KQKziTSdSyCmENLcDlCHAZu/V5VGJ3kn4KD4%2beqZWNh3KJUmS2%2bbRHO60OYROvsz8BXqGZb2PyZ77JQP7KekKO51moYRRT2YlJjKHS0QR0VccahjGEoY4lVztNLGz6MYGpTGEMNdjYGNgY1DGUIQyjn6N0p%2bLXbEL8hxc4jnHcyjBO4Ate4DCG8iZj2RvvEUdt3ffuMcJwgm4tErQh3MmLrOJ3fEaYIAMxCGIAv%2bFmFLXtytb1Hrznp/aoUCP5G6b6Atr6HcurTW4l4315hGlM4Q0%2bYA9O4EnquY53uIJ6Ag6lvUWMNtqIEEsWL9B7k0WcuOMBUGkGrwQR2mhLXu%2bGPG59NUM5z%2bcAAFDlSURBVFgkqGQOP2cE1/EUH3Elw3mITzgem7c5mBHtmLe8CnehSlWN1i0%2blsnUciTD0IcjN7tqf6an9Vhvw4eJP82lVfyNyJtCLVjtQ/6KDQHCebZHUEQZzMW8xxtcwAqeo5nvM5Ib2Z0reIYL2ZBWO9pIi/JK6QPp2bzpXJcdr892tU2UINW8w3eBu/mIa7iQ41jCH9mT4/gplZyCz2N2i2xwzVyptiosjuUefsHF1CXNVHoxiyXrWPcV3BwFJV4gSfCmUFs6%2bMQrdS/ddPxEXvFXWlWOcAhHcyc7cASPMZeduY7F3MS53Mn7fIOnUNRgYvXKy6aCWur5HScS4M9EuYD9OZ9y7mczM9jAv/kWuznVML3Ry/mORWpMEhzK9xjqUA6llrWOtT96Fxa2nrAdWlg8eNNQJghYyWioYsNNAPBloPXNdn2cAXyL7/Mst/F1LuGfHMGv%2bSkXcwdj%2bQnHcSKHcTxDeqXFcd7gPR5kNpdwLXP4DmO4hok8yx84mRkczhTOKUDcc18jtU/bGBj8hZV8nfFpy3%2bqPlZfPZUPw%2bF29YJA6xZ5EbbYFDh/pidwzU6JPNNLdLpEC1/lWP7AdP7F4fyQ%2bzgdH99nHdfwD57kHh7l9wwgiK%2bAoqXLokf5jA0cwfPszlP8mKH8nL2Zx%2bVM4wbuYS5/YmQHzi/vw11c3ey3X3EDFm9zGyPSji1936rU6b0UfJIdtrLFOVN7YadO1VbK13inea7CXMeJXMs/%2bQsz%2bD7XcAqDuZATOIIZPMR85jCTtURJFEy4bMooZzTHsSM78gYn8TEH8mN25xUuooZf8xQ/YQZ7Ed3GFO9U6Vj3/yuxCNGAchJgiqnZ9YWdPV94VKixIeGh2G/o2oDpvTrKGH7F97icP3MXF3AB13MUj3EDL/MGwziUEznSoTgoXCttTMKs5CE%2bYAM1XMEF%2bLmTG5nC3SzmxxzKhZQ7xxtvTMP8oNNqAk56RoJrKGcJ32cIcUyEAIEitMlIs8cDHpBsjwq12BRw9%2bo53NOnS3aQbxR4hH35BT9nBg/wJ67lEk7mEv7K4zzJbO7l90SooLZg7hebEK1spg3oz1iO4VzG8w538yxf4dd8xJXszBWMdqpSbFsQFJWYVDh51pX8khhhfGwhQiUrKXOICfsSChMfQaeFXoBHhVrZ3uLlcJkyzC6c29x4rpMp4yKO4Q7u4y5%2bydPM4CyOZy7vs5JVbKGJaIGEWsemVTCQQYxjb0awlou4nxp%2byLU8y5kczM%2bY6oi0dxbN/KCwGMAA2gjwb0YyzWEga%2bTvrGB3bIawir7dKpXjb4jjOrak6B4l7wl1MvbbS%2bqhGxAScf6VH1WCvjbOETzCFXyDu/gtJ/MIl/AnJvAdvo1JG60kkoEnPYf2YpdTRozf8gIL2MR5nMyO3MVP%2bB6XMcqp5eWVvu3Ks7UynpO4kX1Yy8UMJo4QoJlWjuZdJnIyH9G3Qq2XbsuJoPdGmKj3hBqS1u%2b4Z6adq3anR3Hl8yn3ut34Fz/iexzAhdzOCfyLF3iBcsqopJbablfUzPSNJqupJ0KELQzhm3ydwbzCOazjJ1xAObG0DK5tC7rFP2IJT7EXexFzqPdN%2bvEK1dzkpKcUp/yfeEav9KhQK1s8lRKoNSozGYaSH1KiE6WOO5jIXziVIziZyziPz3mXZWxhAysLaD8QKvEzkGp2ZRoDMXmLv7GA6dzMkSSccJNtUaS1epugkjuo40k%2bcFyMCkU5E7mO3ZPOrr5sU3r5vqJr3oBnhVqTBHtr4kk3rNSu99IgTiVXcgx/4TmeppJ9OJLDsAhT6ezUhZqMMTbRShSbj3mO2fjZmRs5kYHEU%2bGMxe7MbkHbKOKUcxOn8wYrnWj8fuzNbgygpQhPltqlk0tl0TvXw0LtjYTzFBSxbtP0KSescQq/5Hj%2by6e8x0uYhKhgIAMcZtCezwYbkwbqqaeNFnxM4HR25XCGo4kcjW10j071o44AMNmNXRCn5pUfP/F21a0zozdSPAQTAz/%2bVFRF0TvYo0Itjp%2b66P2Thp6cmlyRtVDsx35sZBFLWchaNtDMeocOuefQ1IX9mUgdoxnPcMZR6dhmt03jWEe4zxBxvMMmkHAWrFzPlp4UU8hecPU3K%2b0vxYY3hVqUuKuwdyAEu91d6XR3cRR17MPetDr5RBRQqINO9csAJmUoEs4O1jVrgJfh8pen/yU/RnbDid0vZC/onHWXpcegxHySDY76XXznQDpUWi2s7n0%2b9VO7QEKEeiW%2b3fXwJ5LfuD3s0e2h8vhLxz75lLUMdXLOC92SdHKKYsObQm2JrR1I3ugkja7EfmdD%2b6qKfVN9ZPvZo3uCOAYf8G8uTPZ%2bYUNzU6NayqfODFvZbqEZ70DlnXrZ2X3SSQ16/1USaIAIQ9mJ/2NpF2tZ5wM3e8yPiRd626NC7U312/BYi0rIH0KAE9nEnbQlixoVaizd2EFTl9gtulR7U6iljzTTLjaq%2by6tEooJnd3VzBF8i8f5KzaKeEE3DW%2bEh7rw6JkaC89Zv1Wv%2bDlL6H24VcGFq1jDDQQ4C5sItqMu93RU3T1IeST4xHs7tQAi4r0ztQ4z8MpqXEL%2bEBQhGllPHXdwLNfyYz7BpNqpHJqB5rcL904/oZeqXmaHrWyX4cJLsDymO3z50LngSca/CEEs/stelHMz1dzNQxzGPuzLBGzidD/ToH1IkuAFP7X3dmpIGsq8pewayYSOEvoerhuqsxmh0q4m%2bZko0ziAv7EaqOQnPMae/IcrOIXv8AStGJQRwMbqcnCyJH0MqW8vNrwq1AK2h%2biM9FAXknaohK7BTZyws%2b7WeoxsOgqlQhFhKKeygLfxYxHgMH7L3/kOFbzB2RzI5bxDA5VUEnd4QfMXbDN5LBOPiJNH1W8sV9VyM5ntpOGs76Oj3ET4gFOHoYRiwA3IhEy8oZJmyDQ7vKcwiXMIo/kPx%2bHHpo0Q%2b7EH6/mAD5nLI/yWnfku%2b7M70EIMHOoDKy1UJfN%2brJJhUs7fiy7ZXhVqG9LT2gwC%2bLFRyU5OR%2b%2bKuaCwUVSxjtUModBFy0vIBwY2J3ArJv4k/0x76LI7zezBaJa2e0fTJu/IQfydi9nXYQkXAoxmNCeyls/4kPe5mgpOZAozqMWHQRlh/E4pHcFOmm7bR6TpxcaJ7vfE6czDQm0lCY2CtDCX4RhU0N8JHXDtlXaa66t3hFsh%2bGnhBcoodypRltDXUMT4Hj/nd/yCWqytTteCTQ2P8DzXU92BHsrdHPbjn/yTahLi1vDQMuhjBIP5CsfwNs/wJx5kZ5bRxIvUEsdAKCNIlRrAIKwkoUV6bVG3aLA3FnuvCrXgrH%2bKFl5jFafgo4JB1NGPwQxmIlOowCBIGIVFjBg4VaYKG%2bssCGE%2b4/84iqEZplMJfQOLSu7gPBq4gkkdxljXL/sz17Ibh2cQLp0cOY0h3MsjoKTdZ/W9THwoYpi8y7sYwLlJ8fVhEGSovR/HG/tgEHcKMLh3SH0LHrCWeVGoVbr6XcVveZC9qSXCBhbSkixYalLFWKazLyMIMYxqQGghlman7nn/Cjrx4hZsxlPmcGAVfdy%2bdFDYxDmNhfyGdxmMahfFIJi08gVTuY5xGUZHH6EEizhr7c6%2byXQMbq0d3lhvfMxf7W%2bpa9QwmvGlhYe6ddQNfYMiw4tCnQzREQw%2b4nqO5B6GMpc7eZsgFkEUCXyEWMp7/AKDYRzIvtQyht2pACJEUAVwQelIpGoe40EGcAxB2ko28CJBYeHnCkbyCstpaBczYBNkKF/lZKYR2%2bqTgiJBJZ%2byHhVTr8jCXEMo2bSxgLkD0xr7/4FNXMd42pLUUJJ2APQCPCzUNnF8XA5cyRjWcgfvcARtLKOBzbQQwiTAICYzhI28zt%2bAAezLSMZwPGOAhENBIB1eXUGcal7lfOD4bbJUzfYDhYFFmHP4Bitp6LBTlzGIkaiMZMuKGDXM4WZiqCX2HbyHmd2klXmfFzAS1eylZnDov3yruIdJzncp7PZ59kUPBPeiUCtELIhTyz95m%2b8zDZN/8AzXcRpRttDGGpbwBatYzDLW8wXQj68wlNV8xFMo/kg/BvFdDneE0MbXIR2x80bokanmVc5hAwdxKQES2yHdwLYC93wbp5p%2bGU7NllNQVm31OZsa5nKUrFKqQe5Tb0tzV4M5BROLUzbWLf/D276fc%2bZ/1QPckjSPudegs7SKDu8JtaBAiRBiCfcygG9SxTweZTrHU0uCQSh2xiZCnPWsZAvzeJN1vIzCzyA5i2qW8l81i9cJU8XJ7EM/RnUx8UsT7K/lSW6lnt25hXFES3bvIiKdWySe5Qq9gLtwA0LCPMe5mJhYH4579Irmc5Wvy4FNFvASIvetuPnqpRPZ%2byE5Th1ABMHn5Nl7Z7n3nlADIAIBnmUmP2QSBq/wEX9gGG2OO8tHmDJgEOPYwq7sIx/LBzKPz9Vi47%2bYlDNUxttRtU6tUbeSoJzJLKSOGx3Wx0xIMlcA0MpGorzNGmA6N7BLhrNaCX2LzhyX6Y4m9yStiPE3fsWu8p6youqJxWvOBelerOJG4GzFGn5v7LlOfSYHKN0WEz96%2bSgZyrJBgViwmVcYwFFUsZpHmcb%2bxAgQAiDGZ3zOFtbKZ7KA1Ww2GpUzUFFaLWkMNZZhQphqqZKIijFbxdjMnUmG5pQ6lxtDOZAfsKtjPPHKWvzlRr7lCTVtwX3cwXdplCeUOdd6iXgPz7sKYRbrGfyZuPVKE0RRCAGPaHJeFGoAG5pp4iwmY7Kc17iXccAieYclbGa1WsBKGlIR/s1qg9ogG9RqWcUqJdLfGGvvoEa0DWyrQUGAoLOiStp%2b7HJLpRim9InbwKSCSkaxF3uwFzUkSgaybQruWdfHX/gVMziRgxRYT7GoAA4RVKusZfAStlCHa/1Oq4pa9PxLLwq1UiAQZSQn0Y82HqCGl%2bzH2GzUq7Vp3kOjUa2Q5WqFrJK1rDPWGRsSLcSIi%2bCzw6F%2bkRFqgIxiR8bExsUGYY5jT/z4CGDgx4fp/BYkhImfIODDB5iECNGfcfiJJQvKeUCzKiEv6HEK8z4/4hx%2bwrVWg8lCnsDqNCU%2bh3vElVZJGDGhxan1JvgJOsHM3qAz8qJQA1hKhJEMopU5/BnhYa3ZxGkzmtVSPpUFLJI10iiNNBJVCIeyPz9Dm0BUTFrv33j%2bwlbwj6leVd42wbze2ntHuVEFMRzqOXebF/wZyeg0yW6U7YUG/8sEAVqZzQl8k6tp4hEDSz0sH0EeBUaz6tCSthXr/ysnOCleMpR1BgGFUvIWx7Iz/yUBURaohWoRn9nzZIltU4foIFwjYA/Un3iRF8GxagpwusJiA9Hv199dvyLKZghKhapMC1pILcnZDSfbJ2v29g4beJM/M50f049rZLVik8xkOGZOJ4hCqKct21tTCKuZ7WaCmw4adyINS2fqzFBYmIg0qgqllrMcBKU2yUPyPkoU/ejPdA5TYS2TkrZupoupKH88/sTBD9REf6RAGaLaJ3Dm35yS2r2tQW%2bon1DNpYzgc17EFqNFLutc9RaTN3kVoz15t6AwlBUdOr9i9UzDECttzgkmAUIEEPf2peCTraD1mVc4QHYDA4WtBKnjQs4TpRM9qKMiM21NOhIv8fqmLVF8iFi6IEoXgk9SKAn0toRUWmQzezIRkyeYrdR6uVOOUF/tXNLUbnJq6j6pu1pKxV98jttZZqn2Aq%2brecVS86ToE8Z7Qq0QhqkjGCdKJWkRCDJUv60VnqA9hnAGpVgPRT1rsESixD8R96YlfDmgnNw%2bzUtWzjqekbgyX7XeV/uJrWSgGuQs8O0hKCw%2bIx5Qozqm7LjOT3OGCiZuZWH6Nu76zs20fxUbXhNqhajRXMNpUrEbhzjVGoHk0ikEeIbPjLUZQ%2bi1qqxPOBzK8cZymr1FIZ7ONi3t/uoFHsquoqO1oTfz2vNvU4zpHMCbQIA35F3YZD/P4XIUhkiTimVsn45WizNcjpVwhyOaoDCYKW%2bUq9NVhVyBnRpDGz8GCccqY%2bCFsjteE2phoFzO6YSPkpvUJOIO74RycmAFm0qWsZQ9qcp4OtYRuA28S1OYQY5Zu%2bjSIqR4J1P%2bcDNJgqObWCgzS19ZAdIDedJpK9JLC/W1eCsMWhnH0byJSZQ3pMHwfZB4R%2b0mZUH2VIOxMvaOYGDxOGPVNdQRxyR9qRV8LFM/4PWwOgWLX4qd%2bj7xXDqut4RaIQw39rDLdpHb1ThakpaN1E995B7Az5mcJRbbIsR8zqAJQ4orzdLud83hYmKgSRXbiBLHwsYmjomPtgJQEAsKH9IHtb01yVQCn5O/7ieAjyBBACwSTkHBFIVAX0x8lwDLB4RZIw8bqs16gS8UQrlcoQ7Mkmkn%2bGjkuTQSQSCt7XHGcz/f5U1lHGPfm9IbBdMJX9L7uRf2EG8JNaBQNrIzd7MOBRgIFiY45EYGft4lRBlhN9a2AyzChFI7fJG6OPXdJgYKE4MWPmEla9lEPevZRAstJLCwSGBi0lKg7/VlZHIr/BO6Qm06gTxhqujHIPpRx1B2YBQ%2bLIecwO6jvcxN%2b9DP/7IsV%2bZ861VaRSGKEGUYWYTaTwSTOZxPAMFHAsGfJC8yaeFARgBY6YKrq5YnSB0GS%2br3VhBshXpBopTjw8LEJoEPnLRHPz42MTSZaLc1tNvKpVUvRg/rb43jowyDJmA2z7KIVaynjQhxDHyU0Y8yKglTRogaqmgpwMR3hbr3yw5oyuRGmojSRpQoa1hIhATgI0wVgxjFVA5nFCHKSNAGDt1Ub7Ytde8tcpuhLPs55mMqUpx2mYXaxkLRxEeYWPiJYxMi5mgbISLMJg7Yqj2BURAfrU50mTfgOaHWXdPAzRxOHAg40ToagkkZP2QBBmaWnVocpjIAUX3d1bqtMRTVRFjIMh7mFVpR%2bKhjBDswnrH0p5wQYcLOMgUhT53KuvK0MSyEGAlaaSNCG2v5jIWsYhXzeJpfMJSTOJwhjESxBQOzD079AixkNSzlGdrwo1A6rj/bTm3gw2ZnbqMSmwAxUrNP8GPxNLeTojEEbWvX4%2bfYx%2bn1B8sDnhNq3Wn7cCLDM54LLcJU5GQx6X5dpJ7BnagWUAM8wzM8RD1DGc/ujGAUO1JJJQF8pCo4pU5vRZ8L3YACJ28uFXZrYJOgGYs1fMoaFjObW/kpUziNo9mVOC0Ov1dvPrMCvkAJr8pMcAOVss8M1%2bhXwWSqSXTYLvS7Y/mUhzDaRZrqA6FbmbrYp2kNTwo1DCZENKMKaRHCRnM/JrLYi03Hrtz3giJAJVHu53keZjTHsSPj2JHh%2bB07qe3UgNgWRTj7M3f8l6ICRR1TEFpZxOfM40Nu4i6O5UdMIU4sLf21N1ok%2buab5S%2baJtxlDNVzI9NObTomrzjxDDNLiFHHWNqPnGaahRYiKGyMQjoxug0PCrXrHslcOUk5u%2bEaKrMUNbMIsV6ndfTJyplK4vThYwsP8DdmMo5fcwijCToRR1HSd7PtOZrcdXLZzo4WZBd25atsZh5P82eeZX8uYA9CTjxB4ftCAX5QAs/zAQCi3aFrWE2MzC4tH01O1vzWUYf6SLd1GT2FTRlBEk45oKLLM%2bBJoU6Pq80MPys5I2NcELiMF1ugT2pUirPI%2bPDRxOPcx6fszO84nGGOyU7vy66zI/3p2nNcbetIFZ7RWlIq0DpBAoN%2bHMJ%2bnMFLPMCJHMCF7EWYiCMuhdRdFFCrfQBzXFIEARq5iECW79I280gyjKTjHVOfkg5/N6gkjA9tMvMCvNGKrZA7Plso5%2bAswSdakWrgZTb3gY7rVtkKE%2bNR7mIu47iFk%2biPRTRtirennbfTXE4GPo%2bs7z3tiVTtCpU0YaYOQYIQQ7Ezu3Miv%2bPfnMqxXMhetDouy8Lu135MEqh2kQoB9iV78IlJnL9kbUOmsdR/EWK0sDn1l6LX3vGoUOdGgv5cxWRiGcUhQZh5fMLmPigRr0W6nOXcwpOM5FK%2bwwiH3qZ9GGuq0J8QoiLtHg1ObaiuQjD7zPvbWUsUfirTnkpoxk7zQqQis%2bLEGclNfJ2/8jrvcBmnUEWrw9Fe2Loq6VAIYX7AwVmDT/w08DBml0VCEcBiC5ZDZ1RskfawUOeybafcVpkmgZHcJ3q/e22gitf4Ecs4nRnsiNlBoUy1QWEQRAFLeJnlbCZOG400EqU7%2b5Tgd3yrhUH7ClFd/aSfcmoI4qOaQezE4fiBmBNd0L5yZALFfkxlJr/hUl7iZibQXOAiCR3mhhJcDSJbnp5yfOjZbORCurciHSGgDdM5U5d26gxwY20DWazfKm91VfXqqVobRsr4Fb9gB37HoVQTx0qr5iVORLde/W228CeeZgP11BMnyCjCBCmjFqsbwmRT7ghNsaEznNpYRoLVbMGigiFUsxPnMhUwEeJpz2hgEyPMYezIQ9zN17ido4n0ihruQpGPm1NHyQWyRECoDOo3gI84DVjOeb348KBQK8BHkxM5nPqb7jCbckeByr7iqq2U38LCbYkfm/P5K1dxOoNRxJzJ4NrDbYKYWGxmMx9xCysx8DGF0xhDJVX0oxyAAMqpJdI1%2bDG7qbpn7neh%2bx4DvYDabKSRejbzLq/yMI%2bi%2bCrfYxS1hDGSgqs1mSiDuZADuJZvcxvfwke04Gp4%2bzbmnjc6w6ueOIlkgEwqiiDmCEv7iH6AanwOXYpK/igmPCjU2k75HVZgYuHDRvAhTuy3ibCGoeSnXPeOF1RP4CCf8GPe427OcBIo0vfoGGGCrGIe7/AsH1DLGM7lYIYxmH4dlDwByrrZU%2bFeGoXuYgBakT2VNaxnLk/xJn%2bnmqM5gt0YSRVNiFMz0iCBYjf%2bwRVcynIuoppoHwSSZkMCgw84FB8QIAoESZBAYROgjUPZSKpYQEroTaI0AqUKHVlho3iJcezp1IK2sNrFfgd4Le97FXpypAbS4N/8nAi/57ik1dd938KghpU8zbO8QZTduYrDGUedkz/VVvzFvNeQirYaykimcyKreJX3%2bS8PMomjOJJDMWhBOaMrxKnlNwzlLuZwPRMcF2AxSKQUQi17EsDCRwychA4DIUAbs1gOTiyg1ja096MMaCPh/L34g%2btBoVYI5dzIYckAEnHSFfXvFZzCR%2bTXd4XuX7fCYQV3cAdTuYy9naF1/c6CopLN3MkzzGcgx3EEBzAQk4RTyqc4ecZ9B3fhs0gAAcYzjhnM5lVe4QH%2bxUHM4DDiDgGQjpT38RMmcjtncyVfI4ZdeDdfHt1tIkzibmqIOwyFhrMv6%2bSVV7mMpRjYtrLdEkAKRTXiGMr8xe58wJNCbWCxN7snw%2bTbr9sJJ%2bCyr10HqXNyAD%2b3cjPHcC07JM/34rxbhsVv%2bANfMIJrOIAR9MdypnB6LNn2KtLpY6ZjsGKAwR5M55t8ysO8wEscxJVMI0ICE13NUnE6Y7iWy9jImU6GeV8vfcqx4/vAscWnNDBBOI5nuRdD2TFphGaJKL3ID8KkrYB%2biJ7Cg0ItQAVGO0NZCnbSN9uXXah34QR%2bKpjNJXzKZZzJYGLJczQkCBDiI37KW0zjHI5kOIE05vDtX5zbw7V0a1qLGDCakRzIhzzM6xzP//BdqmhGk%2bDbxNiHO7mFK1nG1VTS0qvW8ExwuXXsDEm9ihgV1OlHapP1UE8TeqHvj02zYyj0Ajwo1CmLdybPpXTiTSx8lpZWtBIoqtjIk5zDBP7BPpjJCg16MCto4gEuYSi3cizlBEg458N0G/6XC%2b3pmhJAJQexN/P5LZfwIlczDUUcw8ntmsJd/J3b%2bJCbmEyYVufsXYC%2bU51nabnsJUZGl1bSKWbQqtYKrY5txGaEc/b2ypHKcxGKkhz%2bXB2k822MHC%2bHg6LHsq2H2qIKP49wDt/ha9zPoeB4pBUKCz8%2bHuMkLmAGj3I6VRjJcqveGOhiw1XKbYQg0/g9f2UBR3A9XxBO2k2EOv6Hh1nOsfyEWQQJOqa3ng6km6VldDJrsgu9AToZxNmpI7SJHv3RaQwpXoC3dmoBVSk1sJk2anJcZlPPuiyhJRZhGrJE%2bObfkFToiIEfiyf4J89TzZ2cQA0tyROfYBNkHb/hAUbxEF%2bhggjK2WG8MsxegKvVCIKFwclM437u420u4zBwGElsWtmPJ7iPv/EcX%2bF77JxkcutJRTP9vfVszJql5afRydLKBK2vNQPiYzgbicSDy5xskXIUG2mhXyn4JBMM7HHGcHHqU2aDn1V8lwCQaXhsDOKsdn7rGtxJZyMYhPATZxPP8n8sJsHpfJdJQMwRaRASVPExl/EpX%2bVqxhOlzXm3JNJbI8WSbdPGDtzAjvyaH3AZ52JgObR/UcbyM/bnXh7kPxzMFQwjjOGQBqXHA%2bQPAZq4jPIcWVoQcWz2mVuu6QwlqA5lnmyODpkrUQKATYgmNmgGMw/AY0JtVzJNlUO5MnMMmeBjOMGsWVoGETY4NYPTEypsYlmoF9KhCDqpCV%2bwgae4lzaG8A2%2bzQTCji3XnVRRavmYM0hwFd%2biHxEogtV220IqMTOGwRlM4nZuI8olGM5yaRDF5Bh25Vme4BUeZRpnsTtjKQcsWjqpchcnSjyDh8RgMNVZsvAFA5uFOdst%2bEGUkkN5X22QIWuTxSYqafFQ9IHHhJo69jSwO4nMSTCYXzE%2bS5aWTZBFzGBhu05WQBnD82pEA%2b%2byhqX8jQUMYTr7chA7EyZGzLmXy0RWy2yOZDcuZV9Iq2LtleH1KrQomAgJ9uY2/sVvWMH11Dh6jo4WH8gZfJVPeYW3%2bT7CNzmQOsaycx7fMDDNQAdu9MOP2T%2bn%2br1TJ1lajul2B2pkHWyRqCrDxqAfX9CEFzK0wFtCrRB2YFwIEUPlNpNBBbVZeb/Dzk4rpG5jA%2b9xpsMllQ16dV/KLFoYxh58lwMZwiDAdjzSkvwPqnmWb/MVbmGooxhuq1xjxYGr8g7iIqZzAcv5DSMcoXPDfAZwBPuzmjm8zwc8SJyh7E1Nlv1WwyLA4lSEl/NdeketdSweW7fF79hBsgumwmIwTTQPVeP5QlipGuiHhWIgc9jombH3klADan%2bpqETzPuaGjZWF3TpFHtzxHorVnRrQbHzswtcYwlRGE8ZIku6k0v7dek1/5VKO55eUO/7qkkh3Da7GI9gcyV84jR9yKxPSaoLrogA%2bxjCO42hjJvP4nHWsTC9ItxVs/Gzs%2bF1K20qsLMYwHZAs5J55CQYrJc1hJrOBaH1wATsgGOzEy8kWFx/eEWqF4Jd9CEAzrZ248V2y12wUwVsPjYHFNO7JktDZ/vMVyQkVbzfMqYxjIcjvuIOzuJowiWQSQkmku4aU9aGRvfk9V3AVtzA%2b6d93SZESxDEIcRAHYaM6id%2bK04%2b/cr6TApT%2bbbkpgjvP6DZYyAhWIzuodWzcMvRzMRSY7EWEzZ5Z0r0l1FMZ7yMhjUqIZ2UTjXbbc2mjHC7S3M1IpJ3EOoZ2Coo41fyLWziWyylLRpV5Y0C3NaSqiLVyBK1cydX8mhEOn2fquKPJFVw9K5BzVzQxnSjsrs0R15gay8gmqqPiWqjBxBrNO2yKD53v2Mp3IMIHREtZWh1gYHMAwwKElLZTBrJems0tkQsuw2VXis6rrX7TebXVvMfF7MO1VBJ31veSSHcXKWt4lBOIcjn3cFsyhyu9b9OL8eWC7Tglu5odritxDM8xlgGgjTKa6qTO2GDbs41N1JKgjFEsorFEZ9QBNiZ7ECqzwwZUciXN%2bJw4HiuZpWVjEODtbnSem1HT9aLz7e%2bSoIL5fItduJkhafbuEnoCd0eOcBpRrmEK52UsQpRfX3d3lBMo5nAWQWx8WIDP2YltTOKMZQkmG9R4mRVWw2Qd0bXhegbSxkBO5zes7GBxLxa8ItQmFhOZAuXKIMzzbKYck4QTE%2bxHExnZ%2bDFpZBR9vyJq0p4w9ZzGAO5mVDLztyTWPYcr1i2cRT2XUMa3iNC3/SsYrOcxFAn8xBD8xMHJp04QwUcQk4GCwQBWElkTfp%2bpWPjZnUY%2bLEL2YCZ4RagVMJ0JfuqcVfK37JGRf8umnMtYTHFS6E0srmctDzLGcY2URLpQcBXtFi5jDv/DKPYl0qf2Ch/CdH5JhaMbpiAIAd7nBjYygtWqjNahao6xPlL7Et/ERBiIybzSmToNCgufmi7lAakiyAIO4GsMzGjhtAhTldNL2TtwOUz/yF%2b5hD2Jkj8BYgn5QedIJYAf8xHXcT9DO03tKSQUNhXslKGWlhbrXZjFfUznJQbL0kHKb6yxJ6xQmxlCCztxJO8wvdhdCHglS0shapDsBv3wq3HE8WMQz/ISx9SVDzdkoVQhrXqX8z53cwjfcggcilGGb3uG7lGTNsbzQz7jNzQDhRnHfO6gk2izzbsYihDCYAYqn2BIP2sj0c94H5MoVezKTFZ5Yq/2hlALMFaNh1r6M9zxL6ocL8hn/VaqUJVsFTY%2b1vM7glzCGMdAVjKSFRrK8SVHOJGv82%2bew%2b%2bQYvRUrPOZCe2NqVu/9OJSyT5sUWXIRKk3tzTyLnF8wAiEtZ6YEV4RaiW7S22lRJhIGZ2V3en75ukEy2d5nq%2bxR7KsWwm9Ab1fVnEBCR5llc6M8sR8UE4Gwf4EVQUMV600wRw2EKCF45nOsmI3EfCGUCsflBt7Ur4DptqPIF6wILZrIDZ%2bNvEQgziVQDIgooTegHKSZaZyMc/wLtmrtRSjbWAzhGEI%2bGSEvRxmMReDKAMZRX2xGwh4Q6hJwCgZixFnOCNyGsHcMrdCIuvZR9cXLpxzQX9fiDd5jh8wpQNFUQmFhzjC8w0m8CfWJqkme3ZPOp018U6XDx2yOpwdgQBMlk8N2cQifAgwGDpJCu0bFF2oFcjVVO4sw%2bvYzGQG5Iz6ds/aJnWUUUt1hlcdYeo6ycbqWguFMJu5gQP4ekn17gPoE2wrY7mM13i9IBF7CjCoIUwtNRlmTQ3l9M9any39LhZljKda/DBYRaUB/ibvUkecoyj3hAbnCZfWp/7EZPpVY6hpTlJdNujIa4uN/IL%2bGRwPoPOsNrKBQp3EtKPlYebxD4Y4ntMSeheCwqSZE/gHv2YfRvV4BxSgjXt4KksUoGASoy1r7l8KNkF2pEath2qGy9OcMVOdJVer7zCcMC0eOCkUXahFIf8ZzE4q0MxEJuHGAmejf9PUdVv4V07REloojFC7TpabOZB9HTJBL6zG2zd0flacGs7kHP7LDk64Zg9Y5xREeCqr2U0v3ZZTZifrXdDiP4LBrLKbTXss/6Oi6tQF5Zfbf2KlbBaUZE9a6CMUXagBzDHW1EplsRvjiCVZOjPBIEEQP/34AYOzpN/Z%2bFjHvawpiOjpOLLH2MzJ1CbzpkvobSgEH02cxG38iWOo2irKq%2bv3K%2bd7TMxRdD7C/%2bDL4WkWR4mPM5gdmI%2bBPY5yuUYWqx/WD30LwGQz8yiypdcTQm2Ppb8QYjy1rGcegRwdq00oFZzI5Cypbrro/D8KItQ6GS/A7xnDYZQMZH0JrbEFOYVf8jbHOsbP7va/Zhg7iq8ka6W0hy46fy2mY/TK3qYVNDOUibyifJIYqPaWF7lLlnK5GsJSeZ9Xkwb7oqH4Qi0oqVBmC2OZimITywh3Yv3W5opczCdW2pU9gcIixFss4XQGOYSwJbHuKwgGUU7nLv7JIfidnL3u3kvvxnYyWXbr9y1ys8DqhJ6ZbGAAo6lTWJhShSLCv5gn/dVsNqfdrmgouvUb9P5nM4pRxJmJUEW2FblrdtA8WJE6gWAT4AEMjsBfypvuY2iq/AEcyUd8hr9H218qKVLluKJzOqOxbGIxccZRpxV5cUhT5vCabM6LPqXX4Qmh1gubiSLOx1TRP6exAnIH8xUugFP7p5cwhxGM6pHyV0L3IAg%2b9mI9rztVT7sNhcpn3uS%2bhU0lNbxIG5W0q5yl7Wwqyc5QVHhEqF32izUsZzAVBXLh9/Rgo7AI8jEL2ZkaLLwW6bb9Q0dc747JZw6vdndHoBAjp7nBj2AWGzCShRqTb9peCXzziFBrmCxjC/sRRGGTyPrKt7ZgT/drnZu1mGb2prK0UxcBWoyHMZq5LOuRAp7PyLlRZ9nnnY3B0TTzXk7Ha7FRfENZEoLBXEyWMpt9qaIs65XBPupMIcB63mUgY/HlJKUtoXegvQ9V7Mdfmc/UnizTeWVpCX7qCGe9IsRCPmY8b3MI3qEE7ggPCTVYzGIAL7OOGJcSw8TGxEhTxi0UPt516hb3NrRQf8w0xjgnupJY9y20xlbBYfyWpZ1aWnIhn9mSwORTziGMRQALcTjKBBuTCJNZzSae5is8ymp8np0PHhJqH6tZw77Mw89/MQlgYmFgY2MijsMhgMlahvVBe7QytpKN7MXAHlbRLKG70LvhSEbwCRvp3/Ek28X75IYAm3kZEws/cYSAw/yuOcqeJ4LJUmqJ8hGmZw9kHhFqAcp4kThCBBM/v2Ia4tRNsPFBkjqhnItZRO93p2CQYD4x6jCKQKBUAmi7SIJqhrKIzQzstlDnAxOb6fyKauKYJACfU7VDMDF4nxtZzUaaGMUnzobjRXhEqPVaOJOx1GMAu3F00rHl2jz1UCYIU4lNb6vf2mMZZyVhhpVU76IixmAm8QwtvRwpYCCUMdnhKGtfRskGdmYmf6SMmezAbNowPSrUHrF%2b28BSVjGWjVRjEMQmSowYMaLOb1HnN5eOv3eFzK2ZtYqBjPJQmv6XD4o4ZUxkM/V0eynPa7LodKFYu3kXTc67CEII2IPFDKSJ9V7ZEbeCJ4RagCBzqaKcJnZw/PdG1lfe4twD86TWDZpZxgiGevb09GWA3jGrEZYS7dVR0At5tjnnFpAYR4R66tji2WXeE0KtAJN69iSCydhkWdhiQse4NbGUAU55%2b2K36MsKXfCwP0FWd6FkUqGR0g3rmMJyRtDiUeXbI0ItQBw/o5jNOKqLOHQp6EFsIcIIDzsvvgzQEeA7MJQNOWtd9k1boJJjWU85hifmaSZ4Qqj1uWkHqlnNPgQKsCu6J%2bCeKkgRLAbhK52oiwpFhHEMZgPxbo6Dnk%2bFGcUEQ2mjiYFp1VG9BU8ItU6IP5WlwOS8KAOlk5dzEhM36L67UyGKECrZvosMXZawnIZuL/eCiBtJ3tnM6QwJhjMEm5OoKHbHZIEnhBqgmkOYz2RG5gzzcNlEcYrSZn8JYFTYRhUh1V0jlz7rV5cEuugQIExL9wxlqo6HlFEOgtXJrMmn6opNDVNZzZ7UFrtbssATVnmFUMEslnAuFTlz11w2UYMKQgSz0BkZhEBQ/iOsYy7%2by/vyPEa39mohgY9qjJyp8yX0NnTPmzQ7TGX5Q/CphNxi/uQMa3%2bMBBAkmONqdzfPBYsA03iO1d4QngzwTLsqeAeDqZ1UfNZ5U0IjjzIsC5uoRZDPaVUBiQzk%2bhs28wRYqjs1jhRtBKnpNHW%2bhN6HwkebE37SlU8lBHXecVyhhgdQvMj6LCX3NL1kFCsvY9xoqvmsy0tMX8ETQq0p0pewN%2bM7ibHWFME2G7k253qqMDlQLbBXjTBvt4UnVbc2WmEdAapKZ2pPwEe0OykdisN81yQmjGcqT3Bnzkx9hRDtNBtPEWMw41lIrNhdkrWnPAABNiBMJ9iJRVFhE8CkHxczjHgW3u8Aq/gtk5hhXGbVj1U3skpWq27o38JyygmVMrQ8gRA2sa4eo%2bJMVFcldivnSmwe5zJ2zLFTR7iUUKeJvYo4dUzi/ZJQ54ICGpjEZCxUzk5VDvlcJScwlWgW9TvEJ/yVKKdQb15mM0l2pV5U123gQnMyfq0k0sWGiXTZMywWE2QPpU6VGTyAn8M5ghiZhdpPA1di5Gl/mUQZkWJ3SRZ4Qqj1DtyfgdidZL5I0imRIEYsi1D7iCNYmOxFnbEpYcSkScW70yohRsKzyfBfLlh5irQboSCAaiMiKsSBzrzSsyazUAtx5/%2bdfYtBjFFUlXbqzmE6rKLxHJ3qVhDOBwobgwAYTKWFAdD18AO3rEBpny4%2b8mX0c2l%2bFcCO1OIzMcivxnU%2bJlGd9hHycJyhR4Q65X9uHyCQ6Up3yLKxP6be0eSO%2bDiXGVSBMowu7rpFr6BSQhL5RlqLk4NtAczAIiROzfn0mbE13BmTee6l/1WSC4c3A0U9ItSqwxppEiSY0blgoRzOic5hsoUGwK7SJUaXsZHKLrRKCJQCRD0DledpVzunPiKBgV0JEMmzEo622AQJYm51sBNsDKeWqkr76UV4RKjTISg28DoVGddBmzI2JNPgOrtPCzEOYncBSz3OIuoZ2wX6YUUAy7O5OF82aM78fOBnHXOBPdldqpirnmdBFqNqe9goNvMaFRnqdglCgGVsCzTRHhRqCx/v8q0sJgtBEWUs%2bcWHG8DBXKmEGPN4vctBJP68J1IJvQ1B5XUc0gFKFrAnV6vB/JVX82SYs/Azm9PIVLBJHw1tlGdt3il4UKhNLHbkaIJZhDrEg7TR%2bSClBDh1GuraiVpR6dTlKoWJFh/5p%2bZIUjkOIMl/d/5JA5vRnJRx5umd%2bjnewV/sjugUHhRqhc04LqMmo/ptUc5HfEhPkjTyv9ZlryyFiRYftnOi7QztF3NIVcnqDAYWo/gR1RnVb5tyNvKOF0WmAzzYQm1btLJE4VrJHKx899x0w0ZXW1JGjEjek6KE3oSN39l580W6hySf0dM2bRsrQ1aB/ntX5l3x4EGhdgch8/6Ysjr2vpBpe2tryVTmCVj4e9m%2bIe3mXkd0ZXkoLjwo1JBenTDzO32HONFS6qUnYGPm7czsHtJ92cWfed1HybSbA0IARbREO1hkuMauUBfV7y8rSkKdAwo/Fq1sCyrX9gzl2FnK8JdGIg%2bUhDoHBIjRWIoqKzIEA6HZibcuoTOUhDonTCyaKe3UxYXgo4XmHEREJaSjJNQ5oRBa8s4PKqF3IJg00tpndcm3dXjU%2bt0ZOs/jKsTw67CTSMnyXWQIJptpJtjtce2cBrirRMFexjYp1IIiSMCpb9QRFj6C3eQPbQ9FCB9RSup3caEwaCFOBYFuEla4bqoAAQwykyT4CG5Dbqtc2CaF2iDCTDZmZT4JsdSJA%2bsZBB8mrR7Nmv3yQDBoooWKbvup9f5r8REh4mQT6haH%2b2RbH%2b1tUqhN1nM5Zpbu11k6Gwsk1H6asfCXBLuIEBSNtBLqgWqsKbBuxUdmsdVHrRgRz5IU5Y9tUqgTDOZuxmTZqW1CLOTKHn6H9oyGKafFYRMtoVgQcNTv7i6sWq02%2bTl75dipmzmSwHbgNtsmhVoIsCOTs6rfQUwCPYzY1sNeRg1teWbjltBbUEAbFuV5Mo1tDb0P%2bxjHrlmF2s8WfBiY2/xYb5NCrRAiRLJSBBfCYq0zdkL0o6U7FPIlFAw6SDSCRSXBbi7VLveYq15nEuoEbduF7XsbFWpdgcPMwCSlYRZgtdVF%2bAxq%2bZwGatkeDCjbJvTebOGnH2a3K1RrBdzAzJKVLc6s2R6s36XgkyzQQ2tQw0bWkU81xBJ6B5pIqAWT2tLCmhdKQp0DgqKKFjbRPZKFEgoBwUeEFZRTVuymbCMoCXUOCCa1tLGptEMUEYKfzayiqpSjlSdKQp0TBv1IEHHOdSUFvBjQ8WQbqCNUGoG8UBLqrBBsTAYCLfQVgVIJHSEIJi1sZkBJqPNESaizQiH4GI7BBqdmcWlK9T0UYNDCegZQ5il9ybumU08ItaTV0kr9JddLX9O70GJcTg1fsLkk1EWCHu0ITQyj3LGE99535TPz3J/5cYkXA57wUyunipGR7DSTAIFOamn1tjKsC6AF6McqNjOgD76xhK0hGFisAgZRliUarFDQszBAMENdlva1tASDhGfzATwh1Lo8znraMBCCmGziA/plFGqbij7aNxUKiwqGsII2jw7f9g%2bFIspCyqjCjcjvrbGwUTTxcdZaWkHWOL/52MAXfbK1dAeeEGodu9XCBkYjtKF4lxlZhk8wqWdYH7UrQQ2j%2bIjNvTqZSsgFg1YWUU2t8%2b/eGwUbHx/zrYxjrf/SBESw8bOKAGHait05GeERoRb608w89sLGwGZ//oeKLDt1OVewgr4h809QzQQa2Njt8MQSegK9FyZYygAGJc%2byvQUDi524kcoMoy0IYe7gIfwobBZiUlYS6uxQCP2p5hMiTpfVsie1Wc7UAfp3qaRo90lqFDbCAHwsJIbfo2aR7Rl6z2xhHVMZie0c1PJFVwmKDGxq2ZuaLGV3AgwFfPipZyF1ni2V5xmhNhjLx8xnuhO%2b35a16Lwb1J/vit2%2bllZXBFNbOPtTxxdE8ZcU8D6H3qlX0sYwKpPVLPP5FKSXbsrPBqPpNdoIZBFqgzg6tWQ9S9iJWcXunizwiEsLGjkIk08x0Z1r5njlJ1rpBWz10NpdFEuFQYxxDGYJrR52YWy/0Ar3fKIMxZdnNrW%2bSqdoust5fiOvr8418zS/mbCEJiZ5Y0fMAE%2b0SyG0Mo2ZvMWJGDm6P%2bVJTBAnniWfOk6CVAHal2kRQdQiyrsslgat7MgE/ksTQzLYREvoXWgdbjl%2bpuIjknNupH/GRwB4l%2bulnLkqit/Js9OzJnPqJcTzUtVNYnzEYCZ4tnCiJ4RaUDTzAhN5hOUOi1RmKEdYTeooy5G1U%2bvs%2bDVU8iZvOmN4IIO7OBBabRtAI58xkVJOdd9DEWEug9gFm3yPXDEGsxcv8R7vKQCT3Qlgo6jOOWv8GHko%2bCbNfMYw3mRTsTsnCzwi1AZR7ufnBJmf0/snKBLYNPC/DMrCSCL4Wc1mTBKEKadZzLlSb0yJDxgklaprO7VeQiahWOZUvywJdV9C0/jPZQRVWHm6FRUWfibgJ44xj4i9S9gc4ezEj/IJCbJxlEWIYDlVqLPDzxesYxj30%2bTR2eAJoQabIGtpYQRvMyqHCqRNGRabuCvrEOu/NpMM6EvYf5fXuYWDbLG7KNQKkyhHcxtzSRDw6CBuv1AoWtnMkU7cd/6l4/X/7UdYKXdSJoISbP4v%2bV5HCAqDBPE8yKvmUUGIZnweJbryhFArBJM4C5jAe1TnYHfWgZsBapnBgAw2SgAbP%2bv5BwL4sUBkE5/Tqj/f9VN1lLH05xM2MqxEQdinEGzCvIRwEIEsNJOZPqVS1u6NrENsUc4WcCLjsoyhYBLhRnyYOe8NzXzAIJqwMUkUu4sywhNCLUCCAczi69gsztEot6hpFWcyOSvxYDkf8x8MfDzJBsvw2TFdzKM74qi/7wAepgVflmWkhN6CjfAEIXbsAnuYcn7q47QklNWqnrC/ofz4OY6jsxIPBmjgVvw5KYIVsIUlHMuHVNBc7O7JAk/MUQXE2IU4rdSwFDOrAi6OcpV7iMUpsXIPN9iY8op6WfVgSTWIcxZtzMLGywl32xu0p8NkPXsylATdivYPMkv%2bTfxhdYe0YeTkTtEKeG7nlwCfUkY/mqgpdgdlhSeEWjdjOENZRn%2bacii5rt%2bxM9eD4OdNuVaUoV6XS%2bUL6W69FhSCxQhM/saWrFVBSig8FBblPMtCjqAKu3sscaZaq27haay71D%2bo7MQIJnQW3iLAR0xgJeX0xyp2F2WBR4RagDb2ZBEDMYh2evJVOV8ACT5VbUrekMuZ09OoEZsQM5jLEnzbCTP0tgELP48SY1p3RRpEDFnALeqVDYm3sJztorO5kx0KSLA3i9iBGo%2beqD0j1Apo5WhCRAnmGTmUHToTGpjNDczCRHqyuyps/JzEOt7o5dQ/70GrwBZxYlle1lYEF4X6ZpsQK5nNcUzurvKtb6R4X25Sn%2bgQ457NLAUMIsjn7OzhXACPCDWATS2jWcggekrIq/DpB/uI2bpifM8GUhFjFLvzIg3OXv1lgDiLo0WIamqyvMpJYPVCCK0iQZi3mMlRlHUh8CQL3mUOtk/CPWqn/uQ41lHJrs5TexGesH67UOzMUxzGBz3mlHAEL6ZE9XhCCIooAzmbi3iPI51p4c3hLBzEiZb3EWIO77ApQyyeIsDe7ItNC0ZB%2b0UAH828yiimOwUKe3RnkYQbYNz9%2byhsqjmSx9mZQVg9vFvvwVNCbTKJJyhjShdT7LZGd3Kyst8LwGYa5czkqC5liG3LEGzKWMX1vMAXWa%2bqYxpXcCQt2BgUKpBWkaCSeTzGCYzs%2bT4N4gYY90wDtBjHVG7n7KRz1YvwhFC7XRNnAjXMK6DIFEYt1Hv1WPblMU5jbC8zZXkDCpswH3Men/I1fkStY%2btI9QkoNvMFf%2bdUruVsAth5JVzkA80B9iqt7EWoy3nUhYfW/Gxs/DxOHTs7feTNWeAJoVbJdW8AO7CIzQwEohmVcIsYdpLRsa/aZxCnjgN4mbcY86VQwG0MNvMDVnM/JzjpEGz11DZBzuBybsbP2dB9K3U7aOV7E39gZ3ZBYRci6j6PyaIFN0YsYz61RSUhbF5hX2ppxLE6eHCz9oJQK1E6/MTGx858yCaWEmNg1g%2bE01Lf%2b6iJgOIARvIYx1DrWR7JQkGwKOcaPuQ2TiFOFD%2b2YzZr/%2bRxJnIDJ3If09mTeLK3egKFjY/XWMV3mdiHBimFEGRYVq1gC4tpxMdBlLGCOH6iiIdMzS6KL9QKodkWPytZwmh2wSTOTC5kJ2zHRKJXar1WGwSZhWCRL5dFISAYtDCdPXiF2Ry23ceAKywUHzOaE7GwUazBJEY5NVuFXLQxmTO5iTnsQ6IAAqi1oBj/oIaDnNDcvjFIWRgs5mpCJPCRQPBhOd9tYjCTZ6llKuMxWcYGDANUq3guzLD4Qg2ilsvGYOVK5nEwQ9iFd9iJl3kSIKnqtu%2b1kfkJtRRKOdIJAkG%2bwQs8wj7bPbWRRZgVrOVg%2bpMAyriZTdjsyY%2bwOpxwbco4nOt5k%2bPonxSC7kNhEeYNZrErezp365u%2btlGs4B4UQoAYQpC4o5QHiDKWKXzGdAYQYzFr7YRBg3zcJ03rErwg1MgK5sdHR1jAJioZRisTuJEgJmAkqftj2IBJmKv5Aj/5DHUhTW4GrRzNJN5lDrs7g729CrZNiGWsYQgmUcp4jCGMZCFNLGJMu/hovdwGgS1EgZ5qR27E99M0MoMBRPrQHGViM43rqUha8gPEk1Zui2HcwaeMoowNLKcVC5bzOp4r3VJ8oRZgtZoXPbzafJ9F7I2JYLNvVjbREAP5Iq/1u5BiJ876/QPO4y12c4h2tlcowEIck6TJG7xHNfUsYgDfddjCUv2iUYWvAAQ/muJgCS%2bwB/sQTxpRewrJw6lsIFSzFzXJY0T6c9qECAFgsoY5tCiBD9nkvZXdG/MyInPYZLKCRc60kByBiZK39buQa7yeWjGOYkceZin%2b7ToKXJGgPxU0I5i08TOG0kYZB/DdDkcP1/8LFc6U79k%2bLViEeZr5nE//vNlO8nmifL5dYTszL/2n%2b7JJ8ZCvI6YkxuvOBz2F4u/UoBD1iaxsGlAuH6ivJusVZQ4VSH%2bn04Eq6MFX237LuZwTeZGJ2/VerWhjMsP5lBaC2JTzFSJYjCXYwUioBWETMIyqHoeJKCzKWM6fOIQDiBUw0j4fuXNzAHPNPDBIsIgNgmINHxesywsILwg1IEvVkvi0MmZT71i6s1yHG%2bxnZWWTSr1TaGOWQohzKMdwL4cy0TlvbY/QSvAAXmcFU2klxvccP4TVQUeyMYjxd8oYhelYxrvfJ4IQ4HHmcAt1RCicKqnSZk0mkdWF%2bDpP6QWTJubTpCyYxbqCd30B4IWtRtN%2bz6K1Ta2VxTn9kik20SpCVFOZ4VVDkCpnvy8sdGpHFRexjH85vmqPaV4Fe1KTBBfi42dspgofFglnjzYczk39ClHOMzzMoezrUPr1RKRtylnAzzmT/bMwlHT/3qCoJEg1VRlmTRVhapxnys184mcTczVR1rs04MEp4I2dWmHJhzQ3ltfwHoM7IR60sWnlHdZk5f0OspwWeoPQV2HSxBF8jz9wElO2Y4ZRkwhf4adcxflcywgqHN6X9rCo533OYxrXM4ZYj8JEBb3H3EuY8ygjWrCgU/fuCWZiE8uyU/toxnJiI3LdBb5gGTas5zNihevxwsErQi0sUsusQW3Moy7HWqmNVRZrOTOP2xZe3LSekOAMnuFP3OIwoWyPYq0QEpxHhOt5ggMZ2YFaVyvhET5lEYdwu7PAdb8v9HId4n3%2byAx2KqDdO9XgJi7u9LII0U6EupnnELvV4DOWFqy7CwpvCLUAq/iAvbdIPYtV9sJjmrDARx3nMCiLsczGzxruZ10viJo2jrWxG1/hQQ7nGNoKup94B%2bLEXF/MJF7iQ553IsvaX9OPSZzBKYx2qmd0Xwj1Z9v4JYM4VnN2F3SxVAhlfJsdc7KJXkOQQCfqd4S3CKstqPmyuhc6vgDwilD7iMlHROKhFlmcg4hAkwkrqjidKVlIYy3CzOXRXhFqN7bM4Fs8w%2b/ZlQFZyOG3dbgJp4pjOYrNrOrgg9baVH8G4gfiPRRpzedeySO8xzEOAUFhe1XHdZ/IYVnCWQQ/W7gOk1x0dgKsZIO0KhrlU1oK2eOFgzeEWvfWLJYldqwnV9CIyyYqWCSynql13G5vFcnRZfP25jj%2bxTOcmYw42t4EWxwFOIZBfwZkucpO8n71jH7AIsAaHqCOb1FO4dMa9XywiTuKfab347hctbnwIRWySrGGT715ovaG9Rv0ljBfzYNWieQgHkwvSts5VC9Fh%2bgSbD%2bkP4%2bxwglD2d5EOp0/2y0sl%2bmVcmL1zJFl4%2bcZXuMk9ugVK0W%2blVI7ZxNdpS0pi9SKHj10L8IrQi34iMpMYhGj2YkjygWVx6s3GwsxduRiXuVlZ6fafqPLcs/cnqvJ%2bvRexhruYxdOdZI8e6M3ez5rFICsMUjIx7IBD7qzwDtCDTbwFmuj6Fw2Ty6BDvTgR/kOx3IrCwhup3u1%2b7TkFIKeZ0/rAkkPsZCrGeuox97sTQWU0wRNag6tHpKedvBOs2xgJkttEuCcib0LzYVSzjXEuZ0Gp/6St9vsTWjVu5LnuI5vc5BjIvNqTwoQIQFLZIF3m%2bkdoRYUEfWBnVAqnLNImRegwwUb2Y3reIK70EYYrxLReRfa6h1mBedxMJdiOvGE3tundVa1RTnNIjCXxcVuUXZ4R6gBkLdoVgSpxMhqmoknM7mKB612%2bmjmLM7jbl6gwskyLol1/tCn6QBNnEuInzK8gNSF3WsP2FmMghYxTMqolbhBnNk0e012UvCKS8vFfD5vqbFYiE1l1otCzhm2uAKkLaURrmE%2bV1PFfj2MqfpyQTsBbQwSXMc8fs5Ovdt/eUwWnTHfz0kh3RpNzKVeLMV63sNzJEYpeEmoBVjPzPjOBh9wKpNRDtldAjO5D/oI817%2bftFe7Hbl7DSV3MRZXM39TKK1JNZ5QpcKgDLu5n6u4ngnbbOYfWfhYwFX4CPu1J42HK3QwMTHh7wFKgEr%2bcTLQ%2bwloQaMLfYszrAC0%2bUj9V/82BjYWJjgnFlNFFFGECcfjrLeba0e1whTuYULuITbmEIrBsZ2GYxSOLhUA35M/pcb%2bR7nESxEHY4ewsZiFX/GxMJPHPA5wbGCnyiDGcVipTBeV82Wh4fXY0Jti1pgrLTGDuKnhDDAycryQTLMIcyPWYnPE0Kjaxq3cgi38BMu5VfsTouzCJX268zQGleUalq5i9s4nquoIOGBGHoTxc5cRy0xJwJcFzI2iOMnxihuYjFmNPGC8yAehbeEWiFsknrGmuxPPxIZhtkiyCA%2bL3hscHcbrN1bEY5jMJdwDlfxVcK04Cv6vuNNaHu3TS2L%2bAWP811%2bRK0TO15sGNjUcgBV7djx3EITCcL0B%2bz4yKXjeCWpmnsP3hJqQDAEKojTmqVChz8jIWExW6xLEezFr7mVsziZy5nstN6zi3kRYVEG/J1fUM%2bPOCe5Sxd/CdQ2kgjBDBU6IEaIAGCzu302r%2bDzaui394TajTg2nP86Qrq0pvfFRHFX8gh7czcP8hte5VR%2bwGAPTFPvQXOT3sBMduE6jsBIFsItfl%2b5epd%2bdWy3kVyk2/BshCjgQaHW6Mxl5aYYFCNLa2u4JEsxhnIR%2b/Bn7uN/GcvRTKHZE9PVC7Dx08qrvEsTA7mWrzESt/pW7/eRng8W8SxVRARFIgdHWXolMSNP1vliwaNC3VmujEktZZRlvaLO4SjrO7EGMLAwOZDd%2bZS/8yEPEiPiscNCsSBAgAA%2bRnM6hzIYkziqgOVvc0PPhSrChLNeY3o0mq2r8KhQ54ZBI48zLOPJR5vSvmALfasgpb4rip%2b9mM4mWrGIEt8OpkkhIAQIYlBNDWA5O2ZfOf90vvTLrM/BUdZKHNuz5q/8sU0KtVDPj/K6zugzuU5VcjAQoigGYEDaSezLDuWQ4VuOV6NvqSVEoJkb2qnR7d53yC%2bsrQoAbnvYJoVaUc1p9MuyU9v4qOdRNIdKX%2b%2bS7vlaSOBlY0qx4CZy9nV4juYoO4kxWeinBJMYv8S/bYpEO2yTTyBUcxY7ZuUoC/EZr1JfpIj7FGNICdlRjN4JcQoHZuET1xxldxapZYWFR4VaOnnXwE8gS9kbgwB%2bh6NiOxihEgoCXV/ER8Cxt3eE4Me/nTDYeFCoJe1nZrjkg5kHIPVOKQK7BBdu0Gc2oXVnTWYNS5LXbAvwoFArtHMhc60E2zG3kNX9UDiinRK2H7ineJVj3rj7eWYLuI3yorhkgAdbKcBC2hiUUXu2MPDlfWIt6d8l5A%2bdBVhOmVN0Ph02FWxgVrGbmBc8KNQ2ipncx%2blJD296dJlQTgP51acuCXUJXYGgaGEelSSS6bOu4m1g8wCveTiNIwUPCrVCGMcvuTnHNSPzy6cuiXQJXUAcg3fZD4MEAWLgZFXj/DaCISwrdiPzgEeFenfOoimpZOtgehutfBv8k1hepWq3DbNGCX2BfOaCic1YTqEMmzAWYBDFwsAmTCN78qRXa%2bK1gyeFGuBsKrMYysqYy6y8hFpJSaxL0MhnLhgIo7iEahL4cM1m7ntRqni32I%2bRFzwo1Pq0HM9QZRHASqullS2iLIGV55m7hC8L3Cwty0n13Pp9w6nAra3frtrtXmlhJf0uXocHhTqfelkGFYQJZbzKxqAiSYVUOlWXAG74bhnBLL4TcTK7U9d3/Py2Y6HxoFBrZPMnKoeY90M2Zsl/sgmwnDZKtu8SUtCc3vMoy5Gl1ZyM188%2b87YFeFaoc2Mt52eNF9MqUisg0ndZWiV4GwI0cg3%2bLPNGx5JFnVK32zY8KNT69JM7TLSMw6jLkaXVwMs0UDpVl%2bBCiRDkYAY6VUo7QjBI8GeHtoEM75fCRLsNcU7Dua/px5U5s7Tm8ykNjrrU1wMhncSmdwaF6VDrdPVTOAZCb35KfzJVQ7PvD0dlnM0BRLMmdGzhH/jxZXguN/xp29jDPSfUbgyPTSyL9TuGjUGYMswsQu2a0PqWnsAVZh05HMxixssHESyquvypVhTlXf5UG9KN72rB7MZ3gVuryl2yeuecqi3V7aGcwvbhLN%2bp6fpVsn1GhrsqEgVva2/Ac0KtB/sDNjE06zVhSArP1rDTkj6k3X27v3vm0259Z00jC/V8zEqaszjmssNmFLtSzX/4oguDYzGcA4nxEmu6xLU6nD0J8AibuvCpBKM5iEaeZ33e32NiYBCmklr6MZDqdu8W2lXkw3TOzu3H3501mYXaRhCCDMKf5b7zeLWg7ewteE6o9Y63hB%2byK4KNiY2FgV4pBR9BPnB4RTq/UwrtS6cXGoqAU373E95mqTSyjIVqVdLb2RUM4R6%2bxmUs6tKnaniNzZxKa5c%2b1Y8H2ZHTurgDTeBV3ua7NHfxyXxUUEedDKQ/ZZiEqWGwGkIlgYKq4wmqWNFBV8tHa7MwWchVhEjgJwr4HZ4UmyBxPmBOKfa7O9Cn4L2ZzWv4kkKtz3BugxOMIIGdhU0qlTqXngbSexAUMXmOZ2UZjbLOWKNiyn2WfOLeOt6tntXOMxt5t1tooJEIrQTynHR6cm5kE0Enfio/GFi0kWA9zZgojLx0Hzf0o4EGlrbrkCDlBPAV9IQtmLS0zw6QfHbqBMJK/ogPC38y9lscoW5jClP5sGCt7D14Tqj1tBnNxcRQJAhiESeMYAExTILcwUZqCRHsJPgkBYUt2E/aLzr/Khz0SdpW0aQokzDbVIt8IZ/JZ/YC2WjY%2bUxYQSkRTpKzzfB6FhDDisu98pAyRbJ/WpQSUZwh3zF8n6sISizD/imvKpX7O4WErU5UF8NatUSUsizu4XFtI1ZZP4MiYZ9lfzvqW8R6QVkR9evES4ghub5NUNiKCjWIAcYABqr%2bDLD6U2H6xC/%2bqD9qFnA42kEhRtrvTvCJPyvvdzUwhUupJE4AiwR%2bEs4I%2b2llV/7IhyC2x/nnPCfUogREcSjlGVZvRYIqHuNz3uTzLGT%2bNgFWOH7q1F2VHyNm9GKhlFa1UTWwgcX2PHuuLGATcRJ628xnEdHUENZ0VMy4kRsBDHspb%2bc%2bLGgV0z4AQ8wzALBgHv/t7Iih%2bCaP7GKbcKnTQSzmzdx%2bB4XCQo5QxnrjK6DbO3%2b/N9axNKdOkeJZxRSFoQwxRpmjqt4YYA6QgWog/VWZGIU%2bEgmiRFLB2gIkmIlFnMwuLR8txKnlCGoyGMqEOLVUgKDC9MPLlnDPCTVxSaA%2blNkcSutWHafVOJt1nJ3HrdImWqv8hxXKElX4yQNAPQtluazgCxId13A7369UthBjIzFDFLaSqIqJsnMfBhUCKiIbCRqALbrUWOcq%2bHiIswkMpcRWElcxMezOth%2bFEJGNBJUosQ3VTHwHMyGLJY8Tq2YHdtCPcU1vrEplK/f%2bvidAM5cnre5bv68wiZHIShFcwXs8I0pJbL71f%2bkP4zl4S6gFWCFPM3Fh/0vlDnUYbVupSnr3ruYk%2bgOZhsfGz0Yeod49UwvQYNxr%2byR98y4s2pLVyY2tDvJ5faWPhFzL88/NXGL4nNJ6tizo9MCqH/Bx5jiKpiiffJjPN94EL/AF2ApRCpHP8jiMC/AYHylDQDASceb9xUa6JpKiYBazQJvnenfDS/afQghzGiNyUARH%2bRU%2bfFvV0hKEELM4UxYq1cR98zbNA/GuUHsNCuivfmbUI%2bOsf0uTbJFGaUp7NYglJ8gYmS8ilmRCXERekyE2YtwTrA33jZ6k66r1wLSugInU9FlHF2o1N7tFxGyQdpBWvfhKNlP9Qdmm9RfJhWYpl0NkjbTIlnZzrlFaZb5MthD/FnXT4EEP4KPXDAEFgLd2ar0R18tdEjeuWlw5w5pEWYdIHsHHbBU2lmASzTChBJNGfi5rVGBLbO4JrYO4S3wkel%2b0e%2bjpEGBBx0yCfJ3q3fhUokDfZXVL9WnXWX1hcbLkLfVNq%2b4KK2TukrHuueCnAYNP5FTb6GDNEXx8Kut8RmP8Ln63bv0PtpEgFK8hyOU0pkVbdngpO2RVWhVWhVXZ4VVhVVkBC6GNG%2blX7MfoGrxretnGoYCQuohGhES5VZlx3lRYFVYyXT/Dy2zjusMGjN8GUrW8tlO7iPJrFZVTlKlUxxASDBnJoIiK5Pi4islvuZ1NxYj97j62nZZuYxAUEfmdCvATqlpyXqoa1IJ0ykH070ps9Sx3D2zYpMjHLFhUeHXVUYCPEcroqAgpxGBXdQAB3bMZFCnBL/PVn2VDHwd/l%2bBlKIRKzmCadoBs7VdRCGLyPi9iaqd86j1AWEPrtjGjvCrUbmhZZhhU5Gy5QSvRbWMASugb%2bEioX8kTgf%2bGjKwOPz9xzm2143/CzOywUqbINhAm6l2hztW6fIS1JNIldIA/Q/ZWR5igsjqrSjOqhBJKKKGEEkoooYQSSiihhBK2a/w/Bbi5gnV9190AAAAldEVYdGRhdGU6Y3JlYXRlADIwMjItMDYtMTRUMTQ6MTE6NDUrMDA6MDBJDz3mAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDIyLTA2LTE0VDE0OjExOjQ1KzAwOjAwOFKFWgAAAABJRU5ErkJggg==' /%3e%3c/svg%3e":e}get imageSize(){const{image_size:e=4}=this.config;return 50*e}get imageLeft(){return this.config.image_left?"float: left;":""}get showAnimation(){return this.config?.show_animation??!0}get compactView(){return this.config?.compact_view??!1}get showName(){return this.config?.show_name??!1}get showStatus(){return this.config?.show_status??!0}get showToolbar(){return this.config?.show_toolbar??!0}get settingsEntity(){return this.config?.settings??null}setConfig(e){if(!e.entity)throw new Error(Za("error.missing_entity"));const t=e.actions;t&&Array.isArray(t)&&console.warn(Za("warning.actions_array")),this.config={...qa,...e}}getCardSize(){return this.compactView?3:7}shouldUpdate(e){return this.settingsEntityChanged(e)||function(e,t,a){if(t.has("config")||a)return!0;if(e.config.entity){var i=t.get("hass");return!i||i.states[e.config.entity]!==e.hass.states[e.config.entity]}return!1}(this,e)}updated(e){const t=e.get("hass"),a=t?.states[this.config.entity]?.state,i=this.hass.states[this.config.entity]?.state;t&&(a!==i||this.settingsEntityChanged(e))&&(this.requestInProgress=!1)}settingsEntityChanged(e){if(!this.settingsEntity)return!1;for(const t of this.settingsEntity){const a=e.get("hass")?.states[t]?.state,i=this.hass.states[t]?.state;if(a!==i)return!0}return!1}connectedCallback(){super.connectedCallback(),!this.compactView&&this.camera&&(this.requestUpdate(),this.thumbUpdater=setInterval(()=>this.requestUpdate(),1e3*(this.config.camera_refresh||5)))}disconnectedCallback(){this.camera&&clearInterval(this.thumbUpdater),super.disconnectedCallback()}handleMore(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.entity?.entity_id;e?de(this,"hass-more-info",{entityId:e},{bubbles:!1,composed:!0}):console.error("handleMore: entityId is null or undefined")}callService(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const[i,r]=t.split("."),{isRequest:o=!1,...n}=a;this.hass.callService(i,r,n),o&&(this.requestInProgress=!0,this.requestUpdate())}handleAction(e,t){let a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const i=this.config.actions||{},{defaultService:r=t,...o}=a;i[t]?this.callAction(i[t]):this.callService(e,r,o)}callAction(e){const{service:t,service_data:a}=e,[i,r]=t.split(".");this.hass.callService(i,r,a)}getEntityName(e){const t=this.hass.states[e];if(!Na(t))return"";const{friendly_name:a}=this.getAttributes(),{friendly_name:i}=t.attributes;return i.replace(`${a} `,"")}getEntityObject(e){if("string"!=typeof e)throw new Error("getEntityObject: suffix must be a string");const t=Object.values(this.associatedEntities);if(!Array.isArray(t))throw new Error("getEntityObject: associatedEntities must be an object");return t.find(t=>t.entity_id&&t.entity_id.endsWith(e))}findEntitiesBySuffixes(e){return e.reduce((e,t)=>{const a=Object.values(this.associatedEntities).filter(e=>e&&e.state!==Qa&&e.entity_id.endsWith(t));return e.concat(a)},[])}findEntitiesIdBySuffixes(e){return this.findEntitiesBySuffixes(e).map(e=>e.entity_id)}toggleCardVisibility(e){Object.entries(Pa).forEach(t=>{let[a,i]=t;i.visibility=a===e&&!i.visibility}),this.requestUpdate()}getAttributes(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.entity;if(!Na(e))return{};const{attributes:t,state:a}=e;return{status:t.status||a||"-",state:t.state||a||"-",...t}}renderTipButton(e){const t=Pa[e];if(!t)return G;const a=this.findEntitiesBySuffixes(t.entities)[0];if(!a)return G;const i=this.getEntityName(a.entity_id),r=a.entity_id.includes("rssi")?(o=a.state)<0&&o>-101?`${{1:100,2:100,3:100,4:100,5:100,6:100,7:100,8:100,9:100,10:100,11:100,12:100,13:100,14:100,15:100,16:100,17:100,18:100,19:100,20:100,21:99,22:99,23:99,24:98,25:98,26:98,27:97,28:97,29:96,30:96,31:95,32:95,33:94,34:93,35:93,36:92,37:91,38:90,39:90,40:89,41:88,42:87,43:86,44:85,45:84,46:83,47:82,48:81,49:80,50:79,51:78,52:76,53:75,54:74,55:73,56:71,57:70,58:69,59:67,60:66,61:64,62:63,63:61,64:60,65:58,66:56,67:55,68:53,69:51,70:50,71:48,72:46,73:44,74:42,75:40,76:38,77:36,78:34,79:32,80:30,81:28,82:26,83:24,84:22,85:20,86:17,87:15,88:13,89:10,90:8,91:6,92:3,93:1,94:1,95:1,96:1,97:1,98:1,99:1,100:1}[Math.abs(o)]} %`:"0 %":this.hass.formatEntityState(a);var o;const n=a.attributes.icon||function(e){if(!e)return"mdi:bookmark";if(e.attributes.icon)return e.attributes.icon;var t=function(e){return e.substr(0,e.indexOf("."))}(e.entity_id);return t in me?me[t](e):be(t,e.state)}(a),s=W`<div .title="${i}: ${r}">${r}</div>`;return W`
      <div class="tip" @click=${()=>this.toggleCardVisibility(e)}>
        ${1===t.labelPosition?s:""}
        <state-badge
          .stateObj=${a}
          .title="${i}: ${r}"
          .overrideIcon=${n}
          .stateColor=${!0}
        ></state-badge>
        ${2===t.labelPosition?s:""}
      </div>
    `}renderCameraOrImage(e){if(this.compactView)return G;const t=this.hass?.states[this.config.camera];return t&&t.attributes?.entity_picture?W`
        <img
          style="height: ${this.imageSize}px; ${this.imageLeft}"
          class="camera"
          src="${t.attributes.entity_picture}&v=${Date.now()}"
          @click=${()=>this.handleMore(this.config.camera)}
        />
      `:this.image?W`
        <img
          style="height: ${this.imageSize}px; ${this.imageLeft}"
          class="landroid ${this.showAnimation?e:""}"
          src="${this.image}"
          @click="${()=>this.handleMore()}"
        />
      `:G}renderName(){const{friendly_name:e}=this.getAttributes();return this.showName?W`<div class="landroid-name" title=${e} @click=${this.handleMore}>
          ${e}
        </div>`:G}renderStatus(){if(!this.showStatus)return G;const{state:e}=this.getAttributes(),{state:t}=this.getAttributes(this.getEntityObject("current_zone")),{state:a}=this.getAttributes(this.getEntityObject("party_mode")),{state:i}=this.getAttributes(this.getEntityObject("locked"));let r=Za(`status.${e}`)||e||"Unknown";switch(e){case Ha:{const e=this.getEntityObject(Ya);r+=Na(e)?` (${this.hass.formatEntityState(e)||""})`:"";break}case Da:r+=` - ${Za("attr.zone")||""} ${t}`;break;case Xa:case"idle":if("off"===a){const e=this.getEntityObject(Ga);Na(e)&&Date.parse(new Date)<Date.parse(e.state)&&(r+=` - ${Za("attr.next_scheduled_start")||""} ${this.hass.formatEntityState(e)}`)}}return r+="on"===a?` - ${Za("attr.party_mode")||""}`:"",r+="on"===i?` - ${Za("status.locked")||""}`:"",W`
      <div
        class="status"
        @click=${()=>this.handleMore()}
        title=${r}
      >
        <span class="status-text">${r}</span>
        <ha-circular-progress
          .indeterminate=${this.requestInProgress}
          size="small"
        ></ha-circular-progress>
      </div>
    `}renderStats(e){return(this.config.stats?.[e]||this.config.stats?.default||[]).map(e=>{let{entity_id:t,attribute:a,value_template:i,unit:r,subtitle:o}=e;if(!t&&!a&&!i)return G;try{const e=t?this.hass.states[t].state:Se(this.entity.attributes,a);return W`
            <div
              class="stats-block"
              title="${o}"
              @click="${()=>this.handleMore(t)}"
            >
              <span class="stats-value">
                <ha-template
                  hass=${this.hass}
                  template=${i}
                  value=${e}
                  .variables=${{value:e}}
                ></ha-template>
              </span>
              ${r}
              <div class="stats-subtitle">${o}</div>
            </div>
          `}catch(e){return console.warn(e),G}})}renderToolbar(e){if(!this.showToolbar)return G;const t=this.getEntityObject("daily_progress");return W`
      <div class="toolbar">
        ${this.renderButtonsForState(e)}
        <div class="fill-gap"></div>
        ${this.renderShortcuts()}
        ${this.settingsEntity?W`
              <ha-icon-button
                label="${Za("action.config")}"
                @click="${()=>this.showConfigCard=!this.showConfigCard}"
              >
                <ha-icon icon="mdi:tools"></ha-icon>
              </ha-icon-button>
            `:G}
        ${t?W`
              <lc-linear-progress
                title="${t.attributes.friendly_name}: ${this.hass.formatEntityState(t)}"
                aria-hidden="true"
                role="progressbar"
                progress="${t.state||0}"
              >
              </lc-linear-progress>
            `:G}
      </div>
    `}renderButtonsForState(e){switch(e){case"edgecut":case"initializing":case Da:case"searching_zone":case"starting":case"zoning":return W`
          ${this.renderButton(Ca,{label:!0})}
          ${this.renderButton(Aa,{label:!0})}
        `;case"paused":return W`
          ${this.renderButton(Ia,{label:!0})}
          ${this.renderButton(Wa,{label:!0})}
          ${this.renderButton(Aa,{label:!0})}
        `;case"returning":return W`
          ${this.renderButton(Ia)}
          ${this.renderButton(Ca)}
        `;default:return W`
          ${this.renderButton(Ia)}
          ${this.renderButton(Wa)}
          ${"idle"===e?this.renderButton(Aa):G}
        `}}renderButton(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!e)return G;const{asIcon:a=!1,label:i=!1,defaultService:r=Ja[e].action,isRequest:o=!0,...n}=t,s=Ja[e].icon,l=Za(`action.${e}`),d={defaultService:r,entity_id:e===Wa&&this.getEntityObject("start_cutting_edge")?.entity_id||this.entity.entity_id,isRequest:o,...n};return a?W`
        <div
          class="tip"
          title="${l}"
          @click="${t=>this.handleAction(t,e,d)}"
        >
          <ha-icon icon="${s}"></ha-icon>
        </div>
      `:i?W`
            <ha-button
              @click="${t=>this.handleAction(t,e,d)}"
              title="${l}"
            >
              <ha-icon icon="${s}"></ha-icon>
              ${l}
            </ha-button>
          `:W`
            <ha-icon-button
              label="${l}"
              @click="${t=>this.handleAction(t,e,d)}"
            >
              <ha-icon icon="${s}"></ha-icon>
            </ha-icon-button>
          `}renderShortcuts(){const{shortcuts:e=[]}=this.config;return W`
      ${e.map(e=>{let{name:t,service:a,icon:i,service_data:r}=e;return W`
          <ha-icon-button label="${t}" @click="${()=>this.callAction({service:a,service_data:r})}">
            <ha-icon icon="${i}"></ha-icon>
          </ha-icon-button>
        `})}
    `}renderEntitiesCard(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(!this.config||!e||!t)return G;const a={type:"entities",entities:e.map(e=>({entity:e,name:this.getEntityName(e)}))};return this.createHuiCardElement(a)}createHuiCardElement(e){const t=document.createElement("hui-entities-card");return t.setConfig(e),t.hass=this.hass,t}render(){if(!this.entity||this.entity.state===Qa)return W`
        <ha-card>
          <div class="preview not-available">
            <div class="metadata">
              <div class="not-available">
                ${Za("common.not_available")}
              </div>
            </div>
          </div>
        </ha-card>
      `;const{state:e}=this.getAttributes();return W`
      <ha-card>
        <div class="tips">
          ${this.renderTipButton(La)}
          ${this.renderTipButton(Fa)}
          ${this.renderTipButton(Ba)}
        </div>
        ${Object.values(Pa).map(e=>this.renderEntitiesCard(this.findEntitiesIdBySuffixes(e.entities),e.visibility))}
        <div class="preview">
          ${this.renderCameraOrImage(e)}
          <div class="metadata">
            ${this.renderName()} ${this.renderStatus()}
          </div>
          <div class="stats">${this.renderStats(e)}</div>
          ${this.renderToolbar(e)}
        </div>
        ${this.renderEntitiesCard(this.settingsEntity,this.showConfigCard)}
      </ha-card>
    `}}),window.customCards=window.customCards||[],window.customCards.push({type:"landroid-card",name:Za("common.name"),preview:!0,description:Za("common.description"),documentationURL:"https://github.com/Barma-lej/landroid-card"});
